export const docs = [{"meta":{"title":"مخزن‌های پشتیبان‌گیری"},"content":"\r\n# مخزن‌های پشتیبان‌گیری\r\n\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nما در پَچیم فایل‌های پشتیبانی شما را در سرورهای خود ذخیره نمی‌کنیم و برای افزایش امنیت شما در هر جای که شما بخواهید آن‌ها را قرار می‌دهیم. در این بخش از حساب کاربری پَچیم شما می‌توانید پیکربندی مخزن‌های پشتیبان‌گیری مورد نظر خود را به حساب خود اضافه کنید تا در زمان ایجاد پیکربندی‌ پشتیبان‌گیری جدید از آن‌ها برای ذخیره‌سازی استفاده کنید.\r\n\r\n## ذخیره‌سازی مخزن پشتیبان‌گیری\r\n\r\nدر حال حاضر ما در پَچیم از سه نوع پروتکل پشتیبان‌گیری، پشتیبانی‌ می‌کنیم که هر کدام از آن‌ها نیازمند یک سری اطلاعات برای اتصال درست به پَچیم هستند، البته در آینده سعی می‌کنیم موارد دیگری را نیز اضافه کنیم.\r\n\r\n- پروتکل S3\r\n- پروتکل FTP\r\n- پروتکل SFTP\r\n\r\nزمانی که وارد بخش [مخزن‌های پشتیبان‌گیری](https://app.pachim.sh/profile/backup-configurations) در تنظیمات حساب کاربری شوید، با کلیک بر روی گزینه اضافه کردن مخزن می‌توانید پیکربندی مخزن پشتیبان‌گیری مورد نظرات را اضافه کنید. توجه کنید که بعد از ایجاد موفق مخزن‌ها می‌توانید از آن‌ها برای ذخیره‌سازی پشتیبان‌گیری‌ها بهره ببرید. \r\n\r\n### پروتکل S3\r\n\r\nاین پروتکل توسط آمازون توسعه داده شده و در حال حاضر سرویس دهنده‌های ایرانی زیادی مکان ذخیر‌ه‌سازی بر اساس این پروتکل ارائه می‌کنند که با جستجو ساده در گوگل می‌توانید این ارائه دهندگان را پیدا کنیم، این پروتکل یکی از محبوب‌ترین پروتکل‌های حال حاضر کاربران در پَچیم است که پیشنهاد می‌کنم شما هم از این پروتکل استفاده کنید.\r\n\r\n### پروتکل FTP\r\n\r\nپروتکل FTP یکی از شناخته شده‌ترین پروتکل‌های موجود برای انتقال فایل به سرورهای مختلف است که به سادگی ‌می‌توانید سرویس دهنده مناسب آن را در سطح اینترنت پیدا کنید.\r\n\r\n\r\n### پروتکل SFTP\r\n\r\nشما می‌توانید با تهیه یک vps و با بهره بردن از پروتکل SFTP یک مخزن ساده برای انتقال فایل‌های پشتیبان‌گیری خود آماده‌سازی کنید، البته راه‌اندازی کردن و استفاده از این پروتکل ممکن است مقداری نیاز به کار با سرورها داشته باشد که در این مورد دو روش قبلی از دردسر کمتری برخوردار هستند.\r\n","path":"/accounts/backup-configurations"},{"meta":{"title":"حلقه همکاران"},"content":"\r\n# حلقه‌های همکاران \r\n\r\n\r\n### جدول محتوا  \r\n\r\n## بررسی اجمالی \r\n\r\nبخش حلقه‌ها در پَچیم این اجازه را به شما می‌دهد که سرورهای خود را با دوستان و همکارهای خود به اشتراک بگذارید تا آن‌ها بتوانند بر روی سرور شما مدیریت داشته باشند. شما می‌توانید چندین حلقه همکاری در پنل خود ایجاد کنید و در هر حلقه سرور و افراد مختلف را اضافه کنید.\r\n\r\n:::note{.warning}\r\n\r\n::title[قابل دسترس تنها در پلن شرکتی]\r\n\r\nایجاد و مدیریت کردن حلقه‌ها تنها برای پلن شرکتی قابل دسترس است و اگر مایل به استفاده از آن هستید می‌توانید اشتراک شرکتی را تهیه کنید.\r\n\r\n:::\r\n\r\n## ایجاد حلقه‌ها \r\n\r\nبرای ایجاد کردن حلقه‌ها می‌توانید از طریق بخش [حلقه‌ها در پنل پَچیم](https://app.pachim.sh/circles)، حلقه خود را ایجاد کنید و برای اینکار تنها به یک نام نیاز خواهید داشت.\r\n\r\n## مدیریت حلقه‌ها \r\n\r\nلیست حلقه‌های که قصد مدیریت کردن آن‌ها را دارید در جدول حلقه‌ها در پنل کاربری پَچیم در دسترس شما قرار دارد. \r\n\r\n### ویرایش حلقه‌ها  \r\n\r\nشما برای ویرایش یک حلقه تنها کافیست که بر روی دکمه ویرایش کلیک کنید و بعد از آن شما اجازه دارید :\r\n\r\n- نام یک حلقه\r\n- سرورهای مرتبط به یک حلقه\r\n\r\nرا مدیریت کنید. سرورهای مرتبط به یک حلقه توسط اعضای آن قابل مدیریت هستند اما اعضا قادر به حذف سرورها نخواهد بود.\r\n\r\n### مدیریت اعضای حلقه‌ها \r\n\r\nبرای مدیریت اعضای حلقه می‌توانید بر روی دکمه اعضا کلیک کنید.\r\n\r\nاگر قصد دعوت کردن شخصی را دارید جدای از آنکه در پَچیم عضو باشد یا خیر می‌توانید آدرس ایمیل شخص را وارد کنید و دعوت نامه را برای آن شخص ارسال کنید. دعوت نامه عضویت برای آن شخص ارسال خواهد شد و اگر شخص در پَچیم حساب نداشته باشد ابتدا نیاز دار حساب کاربری ایجاد کند و در مرحله بعد بر روی لینک ارسالی عضویت در حلقه کلیک کند تا کار عضویت در حلقه به شکل کامل انجام شود.\r\n\r\n###  حذف حلقه‌ها \r\n\r\nدر صورت اینکه تصمیم گرفتید یک حلقه را از لیست حلقه‌های خود حذف کنید با کلیک کردن بر روی دکمه حذف در لیست حلقه‌ها می‌توانید به سادگی حلقه مورد نظر را حذف کنید.\r\n\r\n:::note{.warning}\r\n\r\n::title[دسترسی‌های حلقه بعد از حذف]\r\n\r\nبعد از حذف حلقه دسترسی به سرورهای که در حلقه وجود داشت از اعضای حلقه گرفته می‌شود و دیگر قادر به مشاهده آن سرور نخواهند بود.\r\n\r\n:::\r\n\r\n## پذیرش دعوت نامه حلقه‌ها \r\n\r\nبعد از ارسال شدن دعوت نامه حلقه، کاربر مورد نظر، یک ایمیل حاوی لینک پذیرش دعوت نامه دریافت خواهد کرد.\r\n\r\nشما به عنوان مدیر حلقه از طریق [پنل پَچیم](https://app.pachim.sh/circles) می‌توانید وضعیت قبول یا عدم قبول یک دعوت نامه را مشاهده کنید یا در صورت اینکه از دعوت شخص مورد نظر پشیمان شدید می‌توانید بر روی دکمه لغو دعوت کلیک کنید تا شخص حتی با داشتن لینک دعوت نامه دیگر نتواند به حلقه شما بپیوندد.\r\n\r\n\r\n## ترک کردن حلقه‌ها \r\n\r\nشما به عنوان یک عضو از حلقه می‌توانید هر زمان که خواستید از حلقه‌ای که در آن عضو هستید خارج شوید، تنها کافیست در لیست حلقه‌ها بر روی دکمه ترک حلقه کلیک کنید تا از حلقه مورد نظر خارج شوید.\r\n","path":"/accounts/circles"},{"meta":{"title":"دستورالعمل‌های کمکی"},"content":"\r\n# دستورالعمل‌های کمکی \r\n\r\nدر این صفحه سعی می‌کنیم دستورالعمل‌های که می‌تواند در بخش پنل کاربری به شما کمک کند تا بدون مشکل از پَچیم استفاده کنید را به شما ارائه کنیم.\r\n\r\n### جدول محتوا \r\n\r\n## عدم دسترسی پَچیم به مخزن Git شما \r\n\r\nعدم دسترسی پَچیم به مخزن‌های گیت‌هاب و گیت لب شما می‌تواند دلایل مختلفی داشته باشد. در قدم اول پیشنهاد می‌کنیم، اکانت مورد نظر از مخزن گیت‌ هاب یا گیت‌لب را از طریق پنل مدیریت مخزن‌ها حذف و مجددا به پنل اضافه کنید تا به این شکل توکن دسترسی پَجیم به اکانت مخزن شما بازتولید شود.\r\n\r\nزمانی که شما از طریق یک حلقه به سروری دسترسی داشته باشید، دقت کنید لیست مخزن‌ها از طرف صاحب حلقه دریافت می‌شود نه از پنل شخصی شما و باید مطمئن شوید صاحب حلقه دسترسی‌های لازم به مخزن git را به پنل خود اضافه کرده است.\r\n","path":"/accounts/help-instructions"},{"meta":{"title":"ارائه دهنده‌های سرور"},"content":"\r\n# ارائه دهنده‌های سرور\r\n\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nدر کنار اینکه پَچیم این اجازه را به شما می‌دهد که از هر جای که خواستید سرور تهیه کنید و آن را با پَچیم راه‌اندازی کنید این امکان را برایتان فراهم کرده تا از طریق ارائه دهنده‌های که با پَچیم همکاری می‌کنند به سادگی از پنل پَچیم سرور ایجاد کنید. که این موضوع می‌تواند کار شما برای راه‌اندازی سرورهای مختلف را بسیار ساده کند.\r\n\r\n## ارائه دهندگانی که در پَچیم پشتیبانی می‌شوند\r\n\r\nدر حال حاضر پَچیم از ارائه دهندگان زیر در پنل خود پشتیبانی‌ می‌کند که در آینده به این لیست موارد بیشتری اضافه خواهد شد تا شما بتوانید از طریق خود پنل پَچیم ساده‌تر سرورهای مورد نظر خود را ایجاد کنید.\r\n\r\n- دیتاسنتر Hetzner\r\n\r\n:::note{.warning}\r\n\r\n::title[هیچ الزامی برای استفاده از ارائه دهندهای پیشنهادی پَچیم نیست]\r\n\r\nشما از هر جای که مایل باشید می‌توانید سرورهای خود را تهیه کنید و در پَچیم هیچ اجباری برای استفاده از ارائه دهنده‌های پیش فرض نیست، این امکان تنها برای راحتی بیشتر شما در تهیه سرورها در اختیارتان قرار گرفته است.\r\n\r\n:::\r\n\r\n### اضافه کردن ارائه دهنده سرور\r\n\r\nبا ورود به بخش [ارائه دهنده‌های سرور](https://app.pachim.sh/profile/server-providers) از تنظیمات حساب کاربری شما می‌توانید به سادگی با کلیک بر روی گزینه ارائه دهنده سرور جدید، ارائه دهنده مورد نظر خود را اضافه کنید.\r\n\r\nبعد از کلیک بر روی این گزینه ابتدا باید نوع ارائه دهنده را مشخص کنید و در قدم بعدی اطلاعات درخواستی برای اتصال به ارائه دهنده را در فیلد‌های مورد نظر وارد کنید، در صورتی که اطلاعات درست باشد با کلیک بر روی گزینه اضافه کردن، ارائه دهنده مورد نظرتان به پَچیم اضافه خواهد شد.\r\n","path":"/accounts/server-providers"},{"meta":{"title":"مدیریت مخزن‌ها"},"content":"# مدیریت مخزن‌ها \r\n\r\n### جدول محتوا \r\n\r\n## معرفی \r\n\r\nارائه کننده‌های repository این اجازه را به پَچیم می‌دهند تا با دسترسی پیدا کردن به اطلاعات کلی repository، برنامه شما را به سادگی در سرور شما مستقر کند. پَچیم از ارائه کننده‌های معرف Git در کنار حالت‌های سفارشی و Self-hosted پشتیبانی می‌کند.\r\n\r\n## ارائه کننده‌های پشتیبانی شده \r\n\r\nدر حال حاضر ما در پَچیم ارائه کننده‌های مخزن‌ Git زیر را پشتیبانی میکنیم\r\n\r\n- گیت هاب\r\n- گیت لب (شامل سایت اصلی و self-hosted)\r\n- ریپازیتوری git سفارشی\r\n\r\n:::note{.tip}\r\nدر توضیحات این صفحه منظور از **ارائه کننده** وبسایت‌های همچون گیت‌هاب یا گیت‌لب یا مواردی که از آن‌ها پشتیبانی می‌کنیم هستند.\r\n:::\r\n### استفاده از ارائه کننده سفارشی\r\n\r\nمنظور از ارائه کننده سفارشی چیست؟ زمانی که شما به دلایل مختلف مایل نیستید دسترسی ارائه کننده Git خود را از طریق گیت هاب و گیت لب به پَچیم دهید یا اصلا در حال استفاده از یک ارائه کننده کاملا شخصی هستید، در پَچیم قابلیتی را آماده سازی کرده‌ایم که با استفاده از آن و بدون دادن هیچ دسترسی به پَچیم می‌توانید مستقیما تنها به سرور خود اجازه دسترسی به Repository مورد نظرتان را دهید.\r\n\r\nبرای انجام این کار، بعد از اینکه سایت خود را ایجاد کردید وارد بخش اپلیکیشن شوید و گزینه ارائه کننده سفارشی را انتخاب کنید. زمانی که این گزینه را انتخاب می‌کنید پَچیم از شما می‌خواهد کلید SSH سرور مورد نظرتان را در ارائه کننده مخزن GIT در بخش SSHها وارد کنید\r\n\r\nدر قدم بعد در قسمت آدرس Repository باید یک آدرس به شکل `(git@provider.com:user/repository.git)` در قسمت مورد نظر در نصب اپلیکیشن وارد کنید.\r\n\r\nبعد از مقدار دهی کردن آدرس git سفارشی، نیاز است نام شاخه (branch) موجود در پروژه که قصد دارید بر روی سایت بارگذاری کنید، را وارد کنید \r\n\r\n## مدیریت ارائه کننده‌ها\r\n\r\n### اتصال به ارائه کننده جدید\r\n\r\nبرای اتصال ارائه کننده‌های مثل Github و Gitlab و Gitlab که خودتان میزبانی می‌کنید، می‌توانید به بخش [مدیریت مخزن‌ها](https://app.pachim.sh/panel/user-profile/providers) در پروفایل کاربری وارد شوید و از طریق این صفحه اتصال به اکانت هر کدام از موارد که نیاز دارید را انجام دهید.\r\n\r\n:::note{.tip}\r\n\r\nموضوع مهمی که در پَچیم وجود دارد این است که شما می‌توانید اکانت‌های متفاوتی از گیت هاب و گیت لب را به شکل همزمان در اکانت خود داشته باشید و این به شما اجازه میدهد به شکل همزمان کلی وبسایت مختلف با مخزن‌های مختلف در اکانت‌های مختلف را در پَچیم مدیریت کنید.\r\n\r\n:::\r\n\r\n### اتصال به گیت‌لب Self Hosted\r\n\r\nدر موارد مختلفی به هر دلیلی ممکن است از ورژن Self-Hosted مربوط به گیت‌لب بر روی سرور خود استفاده کنید تا بتوانید از پروژه‌هایتان نگه‌داری کنید، ما در پَچیم اجازه اتصال این نوع ارائه کننده را هم به شما می‌دهیم تا بتوانید به سادگی گیت‌لب Self-Hosted خود را به پَچیم متصل کنید و وبسایت خود را راه‌اندازی کنید.\r\n\r\nبرای اتصال تنها کافیست وارد بخش مدیریت مخزن‌ها در پَچیم شوید و بر روی گزینه اضافه کردن مخزن Self-hosted-gitlab کلیک کنید.\r\n\r\nاز شما چند اطلاعات مهم برای اتصال درخواست خواهد کرد.\r\n\r\n- **نام کاربری:** این نام کاربری می‌تواند نام کاربری root یا هر نام کاربری که با گیت‌لب خود میزبان ساخته‌اید باشد.\r\n- **آدرس اصلی:** برای اتصال به api گیت‌لب خود میزبان شما، ما نیاز به دامنه اصلی آن داریم.\r\n- **توکن دسترسی:** شما می‌توانید این توکن را از طریق بخش Personal Access Token ایجاد کنید و نیاز است برای توکن ایجاد شده دسترسی api را انتخاب کنید.\r\n- در نهایت ورژن گیت‌لب شخصی خود را انتخاب کنید (**در حال حاضر ورژن ۴ پشتیبانی می‌شود**)\r\n\r\n:::note{.warning}\r\n\r\n::title[پورت SSH]\r\n\r\nتوجه کنید پروت SSH سرور گیت‌لب خود میزبان شما باید 22 باشد در غیر این صورت برای اتصال ارائه کننده به پَچیم و همچنین دریافت پروژه‌ها بر روی سرور خود دچار مشکل خواهید شد.\r\n\r\n:::\r\n\r\nقبل از آنکه گیت‌لب خود میزبان را به پَچیم متصل کنید ابتدا SSH KEY سیستم خود را در بخش SSH KEY گیت‌لب خود میزبان قرار دهید و در یک ترمینال از سیستم خودتان دستور زیر را اجرا کنید اگر پیام Welcome را مشاهده کردید می‌توانید مطمئن باشید برای ارتباط پَچیم با گیت‌لب خود میزبان شما هم مشکلی وجود ندارد.\r\n\r\n```shell\r\nssh -T git@gitlab.example.com\r\n```\r\n\r\nبه جای `gitlab.example.com` میتوانید هر دامنه‌ای که مربوط به گیت لب خود میزبان شما هست را وارد کنید.\r\n\r\n### بستن دسترسی ارائه کننده\r\n\r\nبرای قطع کردن ارتباط پَچیم با مخزن مورد نظر شما، تنها کافیست از صفحه مدیریت مخزن‌های پَچیم روی گزینه حذف مخزنی که مورد نظر شماست کلیک کنید تا دسترسی مخزن مورد نظر به شکل کامل از پَچیم حذف شود.\r\n\r\n:::note{.warning}\r\n\r\nتوجه کنید اگر دسترسی به اکانت مخزن را در پَچیم ببندید و اپلیکیشن وبسایتی را که از قبل با آن اکانت بالا آورده باشید . دقت کنید که بستن دسترسی ارائه کننده می‌تواند باعث مشکل در استقرار آپدیت‌های برنامه شما شود.\r\n\r\n:::\r\n\r\n### ریست کردن دسترسی ارائه کننده\r\n\r\nدر صورت اینکه مشکلی در دسترسی به مخزن مورد نظر در پَچیم وجود دارد می‌توانید از طریق صفحه مدیریت مخزن‌ها ابتدا اکانت مخزن مورد نظر را حذف کرده و مجددا بر روی اضافه کردن مخزن کلیک کنید تا کلید دسترسی در پَچیم ریست شود. \r\n","path":"/accounts/source-control"},{"meta":{"title":"کلید SSH"},"content":"\r\n# کلید‌های SSH \r\n\r\n### جدول محتوا \r\n\r\n## معرفی\r\n\r\nssh پروتکل معرفی است که به شما این اجازه را میدهد که از طریق ترمینال (Command Line) سیستم عامل خود به سرور مورد نظرتان متصل شوید. \r\nحالا نقش کلیدهای SSH ایجا مشخص می‌شود، این کلیدها برای احرازهویت پروتکل ssh مورد استفاده قرار میگیرند.\r\n\r\nاگر هیچ آشنایی با SSH ندارید حتما مقاله [**آشنایی با SSH و کلید SSH**](https://roocket.ir/articles/ssh) را کامل مطالعه کنید چون از این به بعد با آن زیاد کار خواهید داشت.\r\n\r\nبعد از اضافه کردن کلید SSH سیستم مورد نظرتان، شما می‌توانید بدونه پسورد تنها با دستور زیر به سرور خودتان متصل شوید.\r\n\r\n```shell\r\nssh pachim@YOUR_SERVERS_PUBLIC_IP_ADDRESS\r\n```\r\n## اضافه کردن کلید SSH شما به سرور جدید\r\n\r\nقبل از آنکه اولین سرور خود را راه اندازی کنید، نیاز است کلید SSH خود را در پنل کاربریتان اضافه کنید. برای اضافه کردن این کلید می‌توانید وارد [صفحه مدیریت SSH](https://app.pachim.sh/panel/user-profile/ssh-keys) در پنل کاربری خود شوید.\r\n\r\nشما هر زمان که بخواهید می‌توانید کلید‌های SSH داخل پروفایل کاربری را اضافه یا کم کنید. \r\n\r\nبعد از اضافه کردن کلیدهای SSH در پنل کاربری بعد از هر راه اندازی سرور به شکل اتوماتیک کلید‌های که در پنل کاربری وارد شده‌اند به لیست دسترسی‌های SSH کاربر `pachim` اعمال می‌شوند و این به شما اجازه میدهد با استفاده از ssh و نام کاربری `pachim` به سرور خود متصل شوید.\r\n\r\nو همچنین اگر بعد از راه اندازی کامل سرور وبسایتی با کاربر ایزوله اضافه کنید. کلیدهای SSH اضافه شده در پروفایل شده به شکل اتوماتیک در به SSH این کاربر هم اضافه خواهند شد.\r\n\r\n## اضافه کردن کلید SSH به سرور فعلی\r\n\r\nاگر سروری از قبل در پَچیم راه اندازی کرده‌اید و قصد دارید در پروفایل کاربری و بخش مدیریت کلید‌های SSH جدید اضافه کنید این امکان برای شما وجود داره که بعد از اضافه کردن کلید به پروفایل با استفاده از دکمه [**اضافه کردن کلید به سرور**](https://app.pachim.sh/panel/user-profile/ssh-keys) بتوانید کلید جدید را به سرورهای مورد نظر خود اضافه کنید.\r\n\r\nهمچنین شما بدون انجام اینکار به شکل مستقیم می‌توانید از [**صفحه SSH هر سرور**](/servers/ssh) کلید‌های مورد نظر خود را به سرور موردنظرتان اضافه کنید.\r\n## کلید عمومی سرور\r\n \r\nدر طی راه‌اندازی سرور شما توسط پَچیم، یک کلید اختصاصی برای کاربر پیش فرض سرورتان یعنی `pachim` ایجاد می‌شود که از طریق بخش **تنظیمات سرور** قابل مشاهده است که البته شما می‌توانید در آدرس `home/pachim/.ssh/id_rsa.pub/` در سرور خود هم این کلید را مشاهده کنید . \r\n\r\nاین کلید برای اعمال دسترسی به مخزن‌های git از طریق سرور خود شما مورد استفاده قرار میگیرد.\r\n\r\n## کلید عمومی پَچیم\r\n\r\nپَچیم برای هر سروری که ایجاد می‌شود یک کلید اختصاصی ایجاد می‌کند که با استفاده از آن به سرور شما متصل می‌شود این کلید عمومی در قسمت تنظیمات سرور قابل مشاهده است و در فایل سرور شما با نام `authorized_keys` برای کاربر `pachim` و `root` قرار داده می‌شود.\r\n","path":"/accounts/ssh"},{"meta":{"title":"حساب کاربری شما در پَچیم"},"content":"\r\n # حساب کاربری شما در پَچیم \r\n\r\n### جدول محتوا \r\n\r\n## اکانت کاربری \r\n\r\n\r\n### آپدیت کردن اطلاعات پروفایل \r\n\r\nشما می‌توانید نام، ایمیل و پسورد اکانت خود در پَچیم را از طریق [تنظیمات پروفایل](https://app.pachim.sh/panel/user-profile/account) تغییر دهید.\r\n\r\n### افزایش امنیت اکانت شما \r\n\r\nاز آنجای که سرورهای مربوط به کسب و کار شما در پَچیم قرار دارد حفظ امنیت‌ آن‌ها برای ما بسیار مهم است، از این رو قابلیت ورود دو مرحله‌ای را برای شما در دسترس قرار داده‌ایم تا امنیت پروفایل شما را افزایش دهیم که از طریق صفحه [تنظیمات پروفایل](https://app.pachim.sh/panel/user-profile/account) می‌توانید آن را کنترل کنید. برای فعال سازی احرازهویت دو مرحله‌ای از اپلیکیشن‌های مانند [Google Authenticator](https://support.google.com/accounts/answer/1066447) بر روی تلفن همراه خود می‌توانید استفاده کنید. \r\n\r\nزمانی که در پروفایل کاربری اقدام به فعال سازی 2FA می‌کنید، پَچیم به شما موارد زیر را نمایش ‌می‌دهد : \r\n\r\n- یک QR Code ( که نیاز از با اپلیکیشن‌های مورد نظر اسکن کنید )\r\n- یک کد امنیتی (برای زمانی که قادر به اسکن کردن QR Code نیستید، می‌توانید از این کد برای فعال سازی استفاده کنید )\r\n- چندین کد بازیابی\r\n\r\nکدهای بازیابی را در مکانی امن ذخیره سازی کنید چون در زمانی که به هر دلیلی قادر به استفاده از احرازهویت دومرحله‌ای بر روی تلفن همراه خود نیستید با استفاده از یکی از این کدها می‌توانید وارد پنل خود شوید. **قویا پیشنهاد می‌کنیم که کدهای بازیابی را در جای ذخیره کنید که تنها خودتان به آن دسترسی داشته باشید** و ترجیحا در همان ابزاری که اپلیکیشن 2FA را نصب کرده‌اید آن را ذخیره نکنید.\r\n\r\nتوجه کنید از هر کد بازیابی تنها یکبار می‌توانید استفاده کنید و همچنین هر زمانی که بخواهید از طریق پنل کاربری می‌توانید این کدها را مجددا بازتولید کنید.\r\n\r\nاگر شما اپلکیشن 2FA را از دست دادید و کدهای بازیابی را هم گم کردید نیاز است به آدرس ایمیل **info@pachim** درخواست ریست کردن احرازهویت دو مرحله‌ای خود را ارسال کنید. البته این کار زمان بر خواهد بود و نیاز به تایید هویت شما دارد.\r\n\r\n:::note{.tip}\r\n\r\n::title[استفاده از 2FA]\r\n\r\nما پیشنهاد می‌کنیم برای فعال سازی احرازهویت دو مرحله ای از [Google Authenticator](https://support.google.com/accounts/answer/1066447) بر روی تلفن همراه خود استفاده کنید.\r\n\r\n:::\r\n### مدیریت کردن افراد وارد شده در حساب شما \r\n\r\nبرای افزایش امنیت اکانت شما ما بخشی برای بررسی افراد وارد شده به اکانت شما را آماده کردیم تا بتوانید ابزارهای که با اکانت شما وارد پَچیم شده‌اند را کنترل و در صورت نیاز حذف کنید. این ویژگی می‌تواند بسیار کاربردی باشد چون در صورت اینکه از سیستم کامپیوتری دیگران استفاده می‌کنید و فراموش کرده‌اید که بعد از استفاده از حساب خود خارج شوید، سریعا می‌توانید با این ویژگی این مشکل را حل کنید.\r\n\r\nبرای دسترسی به این بخش می‌توانید وارد صفحه [تنظیمات پروفایل](https://app.pachim.sh/panel/user-profile/account) در پَچیم شوید. \r\n\r\n### به اشتراک گذاری سرورهای شما \r\n\r\nاگر شما قصد دارید سرور مورد نظر خود را با دوستان و توسعه دهندگان دیگر به اشتراک بگذارید، میتوانید از قابلیت [حلقه](https://app.pachim.sh/circles) برای اینکار استفاده کنید.\r\n\r\n\r\n## اشتراک ویژه\r\n\r\n### خرید اشتراک ویژه \r\n\r\nشما برای استفاده از امکانات پَچیم نیاز دارید که اشتراک ویژه تهیه کنید و با استفاده از هر کارت بانکی متصل به نظام بانکی کشور می‌توانید این کار را انجام دهید. در صورت اینکه امکان خرید از کارت‌ها شتاب را ندارید می‌توانید یک ایمیل به **info@pachim.sh** ارسال کنید تا جزئیات راه‌های دیگر پرداخت (همچون پرداخت با ارز دیجیتال) برای شما ارسال شود.\r\n\r\n### تغییر اشتراک ویژه \r\n\r\nشما هر زمان که بخواهید می‌توانید پلن اشتراک خود را بخش [اشتراک حساب](https://app.pachim.com/panel/user-profile/billing) در پَچیم تغییر دهید البته توجه کنید اگر محدودیت‌های اشتراک فعلی شما از پلن‌های قبلی بیشتر باشد شما نمی‌توانید اشتراک ویژه خود را کاهش دهید و تنها می‌توانید به پلن‌ها بالاتر ارتقاع دهید.\r\n\r\n### لغو اشتراک ویژه \r\n\r\nلغو اشتراک ویژه به شکل یک امکان از طریق پنل کاربری امکان پذیر نیست، اما از طریق ارسال ایمیل به آدرس info@pachim.sh می‌توانید در خواست لغو اشتراک ویژه خود را برای ما ارسال کنید و دقت کنید که شما تنها در ۲۴ ساعت ابتدایی خرید اکانت ویژه خود چنین کاری می‌توانید انجام دهید و در صورت اینکه بیشتر از ۲۴ ساعت از خرید اشتراک ویژه شما بگذرد امکان لغو وجود نخواهد داشت.\r\n","path":"/accounts/your-account"},{"meta":{"title":"معرفی پَچیم"},"content":"\r\n# معرفی پَچیم\r\n\r\n### جدول محتوا \r\n\r\n## پَچیم چیست \r\n\r\nپَچیم یک سرویس مدیریت کننده سرور و توسعه دهنده سایت شماست، پَچیم دردسر و سختی‌های مدیریت کردن سرور را از دوش شما بر میدارد و به شما کمک می‌کند به عنوان یک توسعه دهنده تنها به فکر توسعه وبسایت خود باشید. فرقی ندارد وبسایت شما با لاراول باشد یا wordpress یا حتی با Pure Php یا اصلا Stack متفاوتی همچون Node.js و فریمورک‌های آن نوشته شده باشد شما به سادگی می‌توانید وبسایت خود را با پَچیم بالا بیاورید. \r\n\r\nبعد از تهیه سرور اختصاصی یا یک vps از **هر جایی** شما می‌توانید ظرف چند دقیقه سرور خود را با پَچیم راه‌اندازی کنید. ما در Pachim برای پروژه‌های مختلف سرورهای با ویژگی‌های مختلف در اختیار شما قرار می‌دهیم مانند ( سرور وب ، سرور دیتابیس ، سرور توزیع بار و ...)، تا بر اساس نیاز خود سرورتان را راه اندازی کنید. ما در هر سرور موارد مختلفی را نصب می‌کنیم که در زیر شاهد لیستی از آن‌ها خواهید بود.\r\n\r\n- Nginx (وب سرور)\r\n- [**PHP**](/servers/php) (قابلیت مدیریت چندین ورژن)\r\n- Nodejs\r\n- [**Database**](/servers/databases) ( Mysql , Postgres و MariaDB)\r\n- [**UFW (فایروال)**](/servers/network)\r\n- [**OPache**](/servers/php#opache)\r\n- [**Memcached**](/servers/caches)\r\n- [**Redis**](/servers/caches)\r\n- Meilisearch\r\n- آپدیت‌های امنیتی\r\n- و کلی موارد دیگر\r\n\r\nبه علاوه شما می‌توانید از طریق پنل Pachim [**کارهای زمانبدی شده**](/servers/scheduler)، [**صف‌های**](/sites/queue) برای پروژه‌های لاراولی, [**گواهی SSL**](/sites/ssl) و موارد دیگر را مدیریت کنید.\r\nبعد از راه اندازی شدن سرور، شما استقرار و مدیریت اپلیکیشن مورد نظر خود را از طریق پنل Pachim می‌توانید انجام دهید.\r\n\r\n## آموزش ویدیویی \r\n\r\nدر [**مجموعه آموزشی راکت**](https://roocket.ir) ما دوره ویدیوی رایگانی را آماده کردیم با عنوان [**راه اندازی سرور و سایت با Pachim**](https://roocket.ir/series/server-managment-with-pachim) که می‌توانید به شکل ویدیوی هم با Pachim آشنا شوید و هم روش استفاده از آن را قدم به قدم فرا بگیرید. \r\n\r\n## آدرس IPهای پَچیم \r\n\r\nبرای راه‌اندازی و ارتباط برقرار کردن با سرورهای شما، Pachim از دسترسی SSH استفاده می‌کند. اگر شما در سرور خود اجازه دسترسی با SSH را از IP های مختلف محدود کرده‌اید برای آنکه Pachim بدون مشکل بتواند کار خودش را انجام دهد نیاز است آدرس ip های زیر را در لیست سفید دسترسی‌های سرور خود قرار دهید.\r\n\r\n- 188.121.114.10\r\n- 146.59.189.88\r\n- 77.238.120.119\r\n- 109.122.208.69\r\n\r\nشما همچنین برای دسترسی ساده و همیشگی به لیست جدیدترین IPهای Pachim می‌توانید از این لینک : [**https://pachim.sh/ips-v4.txt**](https://pachim.sh/ips-v4.txt) استفاده کنید.\r\n\r\n:::note{.warning}\r\n\r\n::title[تغییر IPهای پَچیم]\r\n\r\nدر طی زمان ممکن است IP های پَچیم تغییر کنند، اگرچه چند هفته قبل از انجام این تغییرات از طریق ایمیل اطلاع رسانی خواهیم کرد.\r\n:::\r\n\r\n## چیز اشتباهی در مستندات پیدا کردید؟ \r\n\r\nاگر احساس کردید چیز اشتبای در مستندات وجود دارد و فکر می‌کنید که می‌توان بهتر نوشته شود و یا توضیح کامل‌تری برای آن دارید. حتما از پیشنهاد شما استقبال می‌کنیم و می‌توانید تغییر خود را به شکل یک PR برای ریپازیتوری [**Github**](https://github.com/hesammousavi/pachim-docs) ما ارسال کنید.\r\n\r\n\r\n\r\n","path":"/getting-started/introduction"},{"meta":{},"content":"# Hello Roocket\r\n","path":"/index"},{"meta":{"title":"پشتیبان‌گیری"},"content":"\r\n# پشتیبان‌گیری دیتابیس‌ها و فایل‌ها\r\n\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nپشتیبان‌گیری از دیتابیس‌ها و فایل‌های سایت‌های شما همیشه برای هر پروژه‌ای بسیار مهم بوده، چون به هر دلیلی ممکن است اطلاعات فعلی دیتابیس‌ها و فایل‌های سایت شما حذف شوند، داشتن یک پشتیبان از دیتابیس‌ها می‌تواند همیشه نجات دهنده شما باشد. ما در پَچیم ویژگی پشتیبان‌گیری اتوماتیک را به پروژه اضافه کرده‌ایم که با استفاده از آن می‌توانید با چند کلیک و بدون انجام کار اضافه‌ای از دیتابیس‌های خود به شکل اتوماتیک پشتیبانی تهیه کنید.\r\n\r\n:::note{.tip}\r\n\r\nتوجه کنید که قابلیت پشتیبان‌گیری تنها برای پلن رشد و حرفه‌ای در دسترس است و شما برای بهرمندی از این ویژگی باید اشتراک رشد یا حرفه‌ای را در پَچیم تهیه کنید.\r\n\r\n:::\r\n\r\n## ایجاد پیکربندی پشتیبان‌گیری\r\n\r\nبرای آنکه پَچیم بتواند از دیتابیس‌ها یا فایل‌های شما پشتیبانی تهیه کند نیاز است شما پیکربندی را برای پشتیبان‌گیری به پَچیم اضافه کنید، با ورود به بخش پشتیبان‌گیری از پنل سرور در پَچیم و با کلیک بر روی پیکربندی جدید می‌توانید چنین اقدامی را به راحتی انجام دهید.\r\n\r\nهر پیکربندی پشتیبان‌گیری نیازمند یک سری اطلاعات است که سعی می‌کنیم در اینجا این اطلاعات را به شما توضیح دهیم تا بدون هیچ مشکلی بتوانید پشتیبان‌گیری از دیتابیس‌های خود را در پَچیم اضافه کنید.\r\n\r\n### مشخص کردن نوع پشتبان‌گیری\r\n\r\nسرویس پَچیم این امکان را برای شما فراهم کرده تا در کنار پشتیبان‌گیری از دیتابیس بتوانید از فایل‌های که بر روی سایت نیز دارید هم پشتیبان‌گیری تهیه کنید. برای همین در مرحله اول باید مشخص کنید که نوع پشتیبان‌گیری شما از نوع دیتابیس است یا فایل و بر اساس انتخاب شما اطلاعاتی که از شما دریافت می‌شود متفاوت خواهد بود.\r\n\r\n#### پشتیبان‌گیری دیتابیس\r\n\r\nدر حال حاضر ما در پَچیم پشتیبان گیری از دیتابیس‌های Mysql/MariaDB و PostgresSQL را انجام می‌دهیم و شما برای ایجاد پشتیبان‌گیری نیاز است ابتدا نوع دیتابیس و دیتابیس‌ که قصد پشتیبان‌گیری از آن‌ها دارید را در قسمت اطلاعات دیتابیس مشخص کنید.\r\n\r\n#### پشتیبان‌گیری فایل\r\n\r\nبا انتخاب پشتیبان‌گیری فایل شما ابتدا باید مشخص کنید که از فایل‌های کدام یک از سایت‌های خود قصد تهیه پشتیبانی را دارید، اگر هنوز سایتی بر روی سرور خود نداشته باشید امکان تهیه کردن پشتیبانی نیز وجود ندارد.\r\n\r\nبعد از انتخاب سایت حتی می‌توانید مسیر دقیق پشتیبان‌گیری از فایل‌ها را نیز مشخص کنید.\r\n\r\n### بازه زمانی پشتیبان گیری\r\n\r\nما برای هر نوع از پشتیبان‌گیری بازه‌های زمانی متفاوتی را ارائه می‌کنیم که ابتدا با انتخاب نوع پشتیبان‌گیری می‌توانید این بازه‌های زمانی را مشاهده کنید.\r\n\r\nبرای پشتیبان‌گیری دیتابیس‌ها: \r\n\r\n- شبانه\r\n- هر ۱۰ دقیقه\r\n- هر ۲۰ دقیقه\r\n- هر ۳۰ دقیقه\r\n- هر ۴۰ دقیقه\r\n- هر ۵۰ دقیقه\r\n- هر ۶۰ دقیقه\r\n- هر ۲ ساعت\r\n- هر ۴ ساعت\r\n- هر ۸ ساعت\r\n- هر ۱۲ ساعت\r\n- هر ۲۴ ساعت\r\n- هفتگی\r\n- ماهیانه\r\n\r\nبرای پشتیبان‌گیری فایل‌ها: \r\n\r\n- روزانه (هر روز نیمه شب)\r\n- هفتگی (اول هر هفته شنبه)\r\n- ماهیانه (اولین روز هر ماه)\r\n\r\n\r\n### مکان ذخیره‌سازی\r\n\r\nبرای آنکه پشتیبان‌گیری خود را ثبت کنید نیاز به قرار دادن پیکربندی ذخیره‌‌سازی دارید، برای حفظ امنیت شما، ما هیچ کدام از پشتیبان‌گیری‌های شما را در پَچیم ذخیره‌سازی نمی‌کنیم و تماما در مخزنی که شما ارائه می‌کنید این اطلاعات ذخیره‌سازی خواهند شد.\r\n\r\nبرای اضافه کردن پیکربندی ذخیره‌سازی می‌توانید وارد تنظیمات حساب کاربری شده و از طریق [مخزن‌های پشتیبانگیری](https://app.pachim.sh/profile/backup-configurations)، اقدام به اضافه کردن مخزن خود کنید، اگر مایل هستید بیشتر در مورد این مخزن‌ها بدانید [مستندات مخزن‌های پشتیبان‌گیری](/accounts/backup-configurations) را مطالعه کنید.\r\n\r\n### تعداد نگه‌داری پشتیبان\r\n\r\nاز آنجای که هر فضای ذخیره‌سازی محدودیت‌های را دارد و شما هم نیاز ندارید همه نسخه‌های پشتبان قبلی را نگه دارید، می‌توانید تعداد نگه‌داری نسخه‌های پشتیبان در زمانی که یک پشتیبان‌گیری را پیکربندی می‌کنید را مشخص کنید.\r\n\r\nبه این شکل شما می‌توانید به سادگی به پَچیم بگویید که تنها ۲۰ پشتیبانی آخر یا هر مقداری که مایل هستید را در فضای ذخیره‌سازی شما نگه‌داری کند.\r\n\r\n### مسیر ذخیره‌سازی\r\n\r\nشما به شکل دقیق‌تری می‌توانید مشخص کنید که فایل‌های پشتیبانی شما دقیقا در چه مسیری از مخزنی که مشخص کردید ذخیره‌سازی شوند، البته این موضوع اختیاری است و در صورت لزوم می‌توانید از این موضوع استفاده کنید.\r\n\r\n\r\n### جدول‌های مستثنی\r\n\r\nاگر نوع پشتیبان‌گیری شما دیتابیس باشد می‌توانید مشخص کنید از چه جداولی از دیتابیس مورد نظر شما پشتیبانی تهیه نشود، البته این موضوع اختیاریست و اگر می‌خواهد از کل دیتابیس شما پشتیبانی تهیه شود این گزینه را خالی بگذارید.\r\n\r\n### دایرکتوری‌های مستثنی\r\n\r\nاگر نوع پشتیبان‌گیری شما فایل باشد، می‌توانید به سادگی از طریق این گزینه مشخص کنید از چه دایرکتوری‌های از پروژه شما پشتیبان‌گیری تهیه نشود، اینطوری می‌توانید از تهیه پشتیبان‌گیری فایل‌های غیر ضروری جلوگیری کنید.\r\n\r\n### پسورد فایل ZIP\r\n\r\nبرای افزایش امنیت فایل‌های پشتیبان‌گیری شما، قابلیت قرار دادن پسورد بر روی فایل های پشتیبان‌گیری شده را برایتان آماده کرده‌ایم، تا با قرار دادن یک پسورد به سادگی امنیت فایل‌های خود را چند برابر کنید.\r\n\r\nتوجه داشته باشید که بعد از وارد کردن پسورد آن را در جای مناسبی ذخیره کنید چون دیگر در پَچیم به شما نمایش داده نخواهد شد.\r\n\r\nتوجه کنید اگر این گزینه را خالی قرار دهید هیچ پسوردی برای فایل‌هایتان قرار داده نخواهد شد.\r\n\r\n-------\r\n\r\n## مدیریت پیکربندی پشتیبان‌گیری\r\n\r\nجدا از آنکه شما می‌توانید پیکربندی را برای پشتیبان‌گیری اضافه کنید، شما می‌توانید پیکربندی‌های قبلی را حذف یا ویرایش کنید که در زیر در مورد آن‌ها صحبت خواهیم کرد.\r\n\r\n### ویرایش  پیکربندی پشتیبان‌گیر\r\n\r\nممکن است هر زمانی شما نیاز به تغییر اطلاعات یک پیکربندی را احساس کنید، برای اینکار شما می‌توانید از بخش مدیریت پشتیبان‌گیری‌ها بر روی دکمه ویرایش پشتیبان‌گیر مورد نظر خود کلیک کنید و اطلاعاتی که نیاز دارید را تغییر دهید و بعد از آن با ثبت تغییرات، پشتیبان‌گیری‌های جدید با استفاده از تنظیمات جدید شما اتفاق خواهد افتاد.\r\n\r\n### حذف پیکربندی پشتیبان‌گیر\r\n\r\nشما هر زمان که مایل باشید می‌توانید یک پیکربندی پشتیبان‌گیری را از پَچیم حذف کنید و با حذف شدن یک پیکربندی تمام پشتیبانی‌های که به واسطه آن پشتیبان‌گیر تهیه شده بودند هم حذف خواهند شد. \r\n\r\n:::note{.warning}\r\n\r\n::title[نکته مهم]\r\n\r\nتوجه کنید زمانی که شما یک پیکربندی را حذف می‌کنید تمام پشتیبانی‌های که در سیستم پَچیم برای آن پیکربندی وجود داشت نیز حذف خواهند شد، اما این به معنی حذف شدن اطلاعات از مکان ذخیره‌سازی معرفی شده نیست و آن اطلاعات کماکان بر روی سرویس ذخیره‌سازی شما باقی خواهند ماند.\r\n\r\n:::\r\n\r\n## مدیریت پشتیبانی‌ها\r\n\r\nشما می‌توانید لیست پشتیبانی‌های که به واسطه پیکربندی‌های پشتیبان‌گیر در پَچیم تهیه می‌شود را در صفحه پشتیبان‌گیری‌ها مشاهده کنید و آن‌ها را دانلود، بازیابی و یا حذف کنید.\r\n\r\n### بازیابی پشتیبانی\r\n\r\nشما هر زمان که مایل باشید می‌توانید نسخه‌ای از پشتیبانی که توسط پَچیم تهیه شده را بر روی سرور خود بازیابی کنید برای اینکار تنها کافیست وارد لیست پشتیبانی‌ها شوید و بر روی بازیابی کلید کنید و مابقی کار را ما برایتان انجام خواهیم داد. \r\n\r\nشما هم برای پشتیبان‌گیری دیتابیس و هم فایل قابلیت بازگردانی را دارید و به سادگی با کلیک بر روی بازگردانی می‌توانی پشتیبانی قبلی را بازگردانی کنید.\r\n\r\n:::note{.tip}\r\n\r\n::title[بازیابی دیتابیس از سیستم‌های خانگی]\r\n\r\nاوقات زیادی سوال می‌شود که چطور می‌توانیم دیتابیس‌هایمان را از سرورهای دیگر یا حتی از سیستم خانگی خود بازیابی کنیم. برای این کار شما می‌توانید از نرم افزار TablePlus استفاده کنید و همانطور که در مستندات [`اتصال به دیتابیس از طریق خارج از سرور`](/servers/databases#اتصال-به-دیتابیس-از-طریق-خارج-از-سرور) توضیح دادیم از دیتابیس‌های مورد نظر پشتیبانی تهیه کنید یا دیتابیسی را بر روی سرور خود بازیابی کنید.\r\n\r\n:::\r\n\r\n### حذف پشتیبانی\r\n\r\nاگر زمانی مایل به نگه‌داری پشتیبانی خاصی از دیتابیس خود نیستید به سادگی می‌توانید بر روی حذف پشتیبانی کلیک کنید با این کار پشتیبانی مورد نظر از روی پَچیم حذف خواهد شد.\r\n\r\n:::note{.danger}\r\n::title[حذف پشتیبانی از مکان ذخیره‌سازی]\r\n\r\nزمانی که درخواست حذف یک پشتیبان را در پَچیم ثبت می‌کنید، پَچیم، پشتیبانی مورد نظر را هم از روی سایت و هم از روی فضای ذخیره‌سازی که معرفی کردید کاملا حذف خواهد کرد.\r\n:::\r\n\r\n### مشاهده خروجی پشتیبانی\r\n\r\nاگر زمانی پشتیبان‌گیری به هر دلیلی درست انجام نشود، در پَچیم اروری برای آن به شما نمایش داده می‌شود که با واسطه ارور می‌توانید مشکل به‌وجود آمده را تشخیص داده و حل کنید تا پشتیبانی شما بدون مشکل انجام شود.\r\n","path":"/servers/backups"},{"meta":{"title":"کش در سرور"},"content":"\r\n# کش\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nزمانی که شما یک [اپلیکیشن سرور](/servers/types#سرور-اپلیکیشن) یا [کش سرور](/servers/types#سرور-کش) راه اندازی می‌کنید، پَچیم به شکل اتوماتیک [memcache](https://www.memcached.org/) و [redis](https://redis.io/) را بر روی سرور شما نصب می‌کند. به شکلی پیش فرض هیچ کدام از این دو سرویس از طریق خارج از سرور قابل دسترس نیستند و تنها از داخل خود سرور به آن‌ها می‌توانید دسترسی داشته باشید به غیر از اینکه [تنظیمات شبکه سرور](/servers/network) راه از طریق پنل پَچیم تغییر دهید.\r\n\r\n## اتصال به redis\r\n\r\nهم Redis و هم Memcache هر دو از طریق IP داخلی 127.0.0.1 و پورت‌های خودشان در دسترس شما قرار میگیرند.\r\n\r\n```shell\r\nMEMCACHED_HOST=127.0.0.1\r\nMEMCACHED_PORT=11211\r\n\r\nREDIS_HOST=127.0.0.1\r\nREDIS_PASSWORD=null\r\nREDIS_PORT=6379\r\n```\r\n\r\n:::note{.tip}\r\n\r\n::title[قرار دادن پسورد برای Redis]\r\n\r\nشما می‌توانید برای Redis پسورد قرار دهید تا امنیت آن را افزایش دهید، برای انجام این کار می‌توانید وارد مدیریت دیتابیس‌ها در پنل سرور پَچیم و وارد مدیریت دیتابیس Redis شوید. در یک باکس با عنوان پسور Redis می‌توانید این پسورد را مدیریت کنید.\r\n:::\r\n\r\n\r\n:::note{.warning}\r\n\r\n::title[اتصال به سرور کش]\r\n\r\nدر سرور کش به شکل پیش فرض redis و memcache از خارج از سرور در دسترس نیستند، شما می‌توانید وارد قسمت [`مدیریت شبکه سرور`](/servers/network) خود شوید و از بخش ارتباط بین سرورها امکان دسترسی سرورهای دیگر به این سرور کش را به وجود آورید.\r\n\r\n:::\r\n\r\n\r\n\r\n## اتصال به redis از خارج سرور\r\n\r\nشما همانند اتصال به دیتابیس‌های خود از خارج از سرور و از طریق نرم افزارهای گرافیکی همچون TablePlus می‌توانید حالا به Redis هم از طریق این نرم افزار متصل شده و اطلاعات آن را مشاهده یا مدیریت کنید.\r\n\r\nدقت کنید برای اتصال به redis نیاز به دسترسی SSH دارید. اگر هنوز کلید SSH خود را به کلید‌های SSH که به سرور دسترسی دارند اضافه نکرده‌اید، پشنهاد می‌کنیم در ابتدا حتما اینکار را از طریق [مدیریت SSH Key](#) در پَچیم انجام دهید. \r\n\r\n![اتصال به redis](/img/redis.png)\r\n\r\nدر تصویر بالا در ایجاد Redis Connection به یک سری اطلاعات نیازمند هستید که در زیر آنها رو به شما توضیح خواهیم داد :\r\n\r\n\r\n- **Name** : این یک نام شخصی سازی شده است و هر چه که مایل باشید می‌توانید وارد کنید.\r\n- **Host** : این مقدار باید معادل `127.0.0.1` باشد و مقدار دیگری قرار ندهید.\r\n- **User** : نام کاربری را خالی بگذارید، به شکل پیش فرض به آن نیاز نداریم.\r\n- **Password** : اگر از طریق پنل کاربری پَچیم برای دیتابیس Redis پسورد قرار داده‌اید آن پسورد را این قسمت وارد کنید.\r\n- **Over SSH** : اتصال به دیتابیس تنها از طریق SSH انجام می‌شود، بنابراین تیک این گزینه را فعال کنید.\r\n- **Server** : آی پی سرور خود را در این قسمت قرار دهید\r\n- **Port** : پورت SSH در این قسمت به شکل پیش فرض 22 است اگر پورت دیگری دارید در این قسمت اعمال کنید.\r\n- **Use SSH Key** : برای احرازهویت با کلید SSH تیک این گزینه را فعال کنید\r\n- **SSH private Key** : روی این گزینه کلیک کنید و کلید private مربوط به SSH سیستم خود را انتخاب کنید، دقت کنید کلید خصوصی و نه کلید عمومی.\r\n","path":"/servers/caches"},{"meta":{"title":"دیتابیس‌ها در سرور"},"content":"\r\n# دیتابیس‌ها \r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nزمانی که شما یک سرور جدید را از طریق پَچیم راه اندازی می‌کنید، چه سرورتان از نوع [اپلیکیشن سرور](/servers/types#سرور-اپلیکیشن) باشد و چه از نوع [دیتابیس سرور](/servers/types#سرور-دیتابیس)، بخشی در پنل کاربری پَچیم در سرور شما برای مدیریت کردن دیتابیس‌ها فعال خواهد شد که با آن بخش می‌توانید دیتابیس‌های سرور خود را مدیریت کنید.\r\n\r\n## ایجاد سرورها با دیتابیس \r\n\r\nزمانی که شما تصمیم می‌گیرید که سرور اپلیکیشن یا سرور دیتابیس راه اندازی کنید در این راه اندازی می‌توانید یک دیتابیس برای نصب بر روی سرور انتخاب کنید. در حال حاضر پَچیم نصب دیتابیس‌های زیر را پشتیبانی می‌کند : \r\n\r\n- Mysql (8.0)\r\n- MariaDB (10.6)\r\n- PostgreSQL (12)\r\n- PostgreSQL (13)\r\n- PostgreSQL (14)\r\n- MongoDB ( به زودی )\r\n\r\nبه عنوان بخشی از پروسه راه‌اندازی سرور، پَچیم دیتابیس انتخاب شده شما را با نامی که مشخص می‌کنید و کاربری با عنوان `pachim` و یک پسورد تصادفی در سرورتان نصب و راه اندازی می‌کند. این پسورد در صفحه راه اندازی سرور تا زمان راه اندازی به شما نمایش داده می‌شود و بعد از کامل شدن راه اندازی برای شما ایمیل هم خواهد شد اما دقت کنید که هیچ وقت در پنل پَچیم این پسورد در دسترس نخواهد بود.\r\n\r\n### نصب دیتابیس بعد از راه‌اندازی سرور \r\n\r\nپَچیم قابلیت چند دیتابیس در یک سرور را پشتیبانی می‌کند بعد از اینکه وارد صفحه دیتابیس‌ها در سرور شوید خواهید دید که چه دیتابیس‌های روی سرور شما وجود دارند و اگر در زمان راه اندازی سرور دیتابیسی را انتخاب نکردید می‌توانید در این صفحه وارد دیتابیس مورد نظر خود شوید و آن را به سرورتان اضافه کنید. \r\n\r\nبعد از اضافه کردن دیتابیس به سرور می‌توانید آن دیتابیس را از طریق پنل پَچیم مدیریت کنید. \r\n\r\n:::note{.warning}\r\n\r\n::title[استفاده بهینه از دیتابیس‌ها]\r\n\r\nما در پَچیم چند دیتابیس بر روی یک سرور را پیشنهاد نمی‌کنیم، چون ممکن است بر روی عملکرد سرور شما تاثیر منفی زیادی رو بگذارد و اگر منابع سرور شما کم باشد، سرور شما را دچار مشکلات اساسی مختلفی خواهد کرد. بنابراین با دقت انتخاب کنید که چه دیتابیس‌های بر روی سرور شما فعال باشند.\r\n\r\n:::\r\n\r\n:::note{.danger}\r\n\r\n::title[سرور وب]\r\n\r\nتوجه داشته باشید که سرور وب نمی‌تواند دیتابیس داشته باشد و استثنائی برای این موضوع هم وجود ندارد، بنابراین اگر خواهان داشتن اپلیکیشن و دیتابیس در کنار هم هستند حتما `سرور اپلیکیشن` را انتخاب کنید.\r\n\r\n:::\r\n## تغییر پسورد اصلی دیتابیس\r\n\r\nشما در صفحه اختصاصی هر کدام از دیتابیس‌ها می‌توانید بخشی با عنوان تغییر پسورد اصلی دیتابیس را مشاهده کنید که با استفاده از آن پسورد کاربر `pachim` و `root` با هم تغییر خواهد کرد.\r\n\r\n:::note{.danger}\r\n\r\n::title[تغییر دستی پسورد root]\r\n\r\nتوجه داشته باشید هر گونه تغییر پسورد به شکل دستی از طریق ssh توسط شما قابل پذیرش نیست و اگر چنین کاری انجام شود، ارتباط پَچیم با سرور شما را دچار مشکل خواهد کرد و پَچیم هیچ گونه مسئولیتی را در مقابل انجام چنین کاری بر عهده نخواهد گرفت.\r\n\r\n::: \r\n\r\n## اتصال به دیتابیس از طریق خارج از سرور\r\n\r\nشما می‌توانید از طریق خارج از سرور خود و با استفاده از نرم افزارهای مختلف به دیتابیس خود در سرور متصل شوید و اگر نیاز به مشاهده و تغییر دیتابیس یا حتی تهیه پشتیبانی از دیتابیس را داشته باشید اینکار را انجام دهید.\r\n\r\nیکی از نرم افزارهای قدرتمند و پیشنهادی برای انجام اینکار [TablePlus](https://tableplus.com/) است که با توجه به تست‌های که ما انجام داده‌ایم بسیار کاربردی است و ما در پَچیم آن را به شما پیشنهاد می‌کنیم. \r\n\r\n![نرم افزار tableplus](/img/tableplus.png)\r\n\r\nدر تصور بالا اطلاعات مهمی وجود دارد که درست وارد کردن آن می‌تواند به اتصال درست شما به دیتابیس سرورتان کمک زیادی کند.\r\n\r\n- **Name** : این یک نام شخصی سازی شده است و هر چه که مایل باشید می‌توانید وارد کنید.\r\n- **Host** : این مقدار باید معادل `127.0.0.1` باشد و مقدار دیگری قرار ندهید.\r\n- **User** : این نام کاربری دیتابیس شماست که می‌تواند نام کاربری پیشفرض یعنی pachim باشد یا نام کاربر دیگری که از طریق پنل پَچیم آن را به سرور اضافه کرده‌اید.\r\n- **Password** : پسوردی که برای نام کاربری مورد نظر وجود دارد را در قسمت password وارد کنید.\r\n- **Over SSH** : اتصال به دیتابیس تنها از طریق SSH انجام می‌شود، بنابراین تیک این گزینه را فعال کنید.\r\n- **Server** : آی پی سرور خود را در این قسمت قرار دهید\r\n- **Port** : پورت SSH در این قسمت به شکل پیش فرض 22 است اگر پورت دیگری دارید در این قسمت اعمال کنید.\r\n- **Use SSH Key** : برای احرازهویت با کلید SSH تیک این گزینه را فعال کنید \r\n- **SSH private Key** : روی این گزینه کلیک کنید و کلید private مربوط به SSH سیستم خود را انتخاب کنید، دقت کنید کلید خصوصی و نه کلید عمومی. در مورد این موضوع در قسمت پایین توضیحاتی وجود دارد که حتما مطالعه کنید.\r\n\r\n:::note{.warning}\r\n\r\nتوجه کنید در پروسه اتصال با TablePlus در قسمت انتخاب کلید SSH باید حتما کلید private مربوط به SSH را انتخاب کنید.\r\n\r\n:::\r\n\r\nبرای آنکه اطمینان حاصل کنید اطلاعات را به درستی وارد کرده‌اید بهتر است یکبار اطلاعات را با توضیحات بالا چک کنید و در نهایت ابتدا بر روی گزینه test کلید کنید تا از صحت ارتباط اطمینان حاصل کنید و بعد از دریافت پیام موفقیت آمیز بر روی save (دخیره سازی) یا connect (ذخیره سازی و اتصال) کلیک کنید و خوب به شما تبریک می گوییم حالا از طریق سیستم خود می‌توانید به دیتابیس سرورتان متصل شوید و با آن کارهای مورد نظر خود را انجام دهید. \r\n\r\nاگر هنوز هیچ کلید SSH را برای اتصال مستقیم به سرور از طریق پَچیم به سرورتان اضافه نکرده‌اید قبل از هر کاری باید اینکار را انجام دهید. پیشنهاد می‌کنیم برای انجام این کار صفحه [**کلیدهای SSH در سرور**](/servers/ssh) را مطالعه کنید. دقت کنید برای اتصال به دیتابیس روی سرور شما قطعا نیاز به کلید SSH دارید وگرنه انجام اینکار امکان پذیر نیست.\r\n\r\n\r\n\r\n### استفاده از آدرس اتصال به دیتابیس \r\n\r\nآدرس اتصال یک لینک حاوی اطلاعات اتصال به دیتابیس شماست که با استفاده از آن می‌توانید به شکل راحت‌تری با TablePlus یا هر نرم افزار، که قابلیت دریافت لینک اتصال را دارد، اتصال به دیتابیس را انجام دهید.\r\n\r\nزمانی که این لینک را در برنامه استفاده می‌کنید دقت کنید کماکان نیاز دارید کلید خصوصی SSH را از سیستم خود برای ارتباط انتخاب کنید و پسورد مربوط به کاربر دیتابیس را هم در جای مورد نظر اگر لازم بود وارد کنید.\r\n\r\n:::note{.tip}\r\nلینک اتصال تنها برای ارتباط برقرار کردن با دیتابیس و نام کاربری pachim به شما ارائه شده است و اگر قصد اتصال به نام کاربری و دیتابیس متفاوتی را دارید از طریق توضیحات بالا می‌توانید اینکار را انجام دهید.\r\n:::\r\n\r\n\r\n## مدیریت دیتابیس با پَچیم\r\n\r\nبرای انجام کارهای مانند ایجاد دیتابیس جدید، ایجاد نام کاربری جدید، مشخص کردن دسترسی‌های هر کدام از کاربران مشخص شده به دیتابیس‌های مختلف و یا حتی حذف دیتابیس را شما می‌توانید از طریق پنل کاربری پَچیم انجام دهید. بخشی از این اقدامات را در زیر به شما توضیح می‌دهیم.\r\n\r\nدر حال حاضر قابلیت مدیریت دیتابیس‌های از طریق پنل پَچیم برای دیتابیس‌های زیر وجود دارد‌:\r\n\r\n- Mysql\r\n- MariaDB\r\n- PostgreSQL\r\n- MongoDB (به زودی)\r\n\r\n### ایجاد کردن دیتابیس‌ها \r\n\r\nشما می‌توانید از طریق پنل کاربری پَچیم وارد صفحه دیتابیس مورد نظر شوید و بر روی ایجاد دیتابیس کلیک کنید، با ارائه یک نام دیتابیس مورد نظر شما، اضافه خواهد شد، زمانی که دیتابیس ایجاد شود، دسترسی به دیتابیس به شکل اتوماتیک به کاربر `pachim` داده می‌شود. البته شما می‌توانید این دسترسی را از طریق همان پنل تغییر دهید و برای کاربران دیگر نیز فعال کنید. \r\n\r\n### همگام سازی دیتابیس‌ها \r\n\r\nبرای ثبات، اگر قصد ایجاد یا حذف دیتابیسی را دارید بهتر است از طریق پنل کاربری پَچیم اینکار را انجام دهید اما اگر شما خارج از پنل کاربری پَچیم و مستقیما از طریق سرور اینکار را کنید می‌توانید از طریق **_دکمه همگام سازی لیست دیتابیس‌ها_** نام دیتابیس‌های سرور  را با پَچیم همگام سازی کنید.\r\n\r\nدر همگام سازی بعضی از اسامی از قبل رزرو شده هستند و به عنوان نام دیتابیس نمی‌توانند قرار بگیرند از جمله این موارد :\r\n\r\n- mysql\r\n- information_schema\r\n- peformance_schema\r\n- sys\r\n- postgres\r\n- template0\r\n- template1\r\n\r\n### ایجاد کاربران دیتابیس\r\n\r\nهمچون ایجاد کردن دیتابیس از طریق پنل کاربری پَچیم، شما می‌توانید کاربران مختلفی را به دیتابیس خود اضافه کنید تا بتوانند دیتابیس‌های شما را مدیریت کنند. شما با کلیک بر روی ایجاد کاربر با وارد کردن نام و یک پسورد می‌توانید کاربر خود را اضافه کنید و بعد از اضافه کردن آن کافیست دیتابیس‌های که قصد دارید آن کاربر به آن‌ها دسترسی داشته باشد را انتخاب کنید. \r\n\r\nدقت کنید تا زمانی که انتخاب نکنید که کاربر مورد نظر به چه دیتابیس‌های دسترسی داشته باشد به هیچ وجه نمی‌توان از کاربر مورد نظر برای اتصال به دیتابیس خاصی استفاده کرد. \r\n\r\n### اپدیت کردن دیتابیس‌ها \r\n\r\nدر حال حاضر امکان آپدیت کردن دیتابیس‌های Mysql/MariaDB/Postgres امکان پذیر نیست. ممکن است در آینده چنین امکانی اضافه شود، اما در حال حاضر چنین قابلیتی وجود ندارد.\r\n\r\nاگر مایل هستید دیتابیس مورد نظر خود را آپدیت کنید نیاز است اینکار را به شکل دستی انجام دهید.\r\n","path":"/servers/databases"},{"meta":{"title":"دستورالعمل‌های کمکی"},"content":"\r\n# دستورالعمل‌های کمکی \r\n\r\nدر این صفحه سعی می‌کنیم دستورالعمل‌های که می‌تواند در بخش مدیریت سرور به شما کمک کند تا بدون مشکل از پَچیم استفاده کنید را به شما ارائه کنیم.\r\n\r\n### جدول محتوا \r\n\r\n## ریست کردن پسورد sudo کاربر pachim \r\n\r\n**پَچیم پسورد‌ کاربران سرور را ذخیره سازی نمی‌کند** از این رو امکان ریست کردن آن را نیز ندارد. برای ریست کردن پسورد کاربر pachim شما نیاز است که با استفاده از SSH به عنوان کاربر root وارد سرور شوید.\r\n\r\nبعد از آنکه به عنوان کاربر `root` وارد سرور شدید با اجرای دستور `passwd pachim` می‌توانید اقدام به تعریف دوباره پسورد کار اصلی یعنی `pachim` کنید.\r\n\r\n## ریست کردن FPM و Opcache\r\n\r\nاگر Opcache را بر روی سرور خود فعال کرده‌اید و می‌خواهید با هر استقرار جدید از کدهای شما، FPM بروزرسانی شود، می‌توانید کد زیر را در اسکریپت استقرار خود قرار دهید تا بدون هیچ کار اضافه‌ای، این مورد برای شما انجام شود.\r\n\r\n```shell\r\n( flock -w 10 9 || exit 1\r\n    echo 'Restarting FPM...'; sudo -S service $PACHIM_PHP_FPM reload ) 9>/tmp/fpmlock\r\n```\r\n\r\nهمچنین اگر می‌خواهید از طریق دسترسی SSH مواردی مثل Opcache و FPM را ریست کنید می‌توانید از دستور زیر استفاده کنید.\r\n\r\n```shell\r\necho \"\" | sudo -S service phpx.x-fpm reload\r\n```\r\n\r\nدقت کنید در دستور بالا بجای `phpx.x` باید مقدار باینری ورژن مورد نظر php را وارد کنید. برای اجرای بدون مشکل این دستور هم نیاز به دسترسی root سرور خواهید داشت.\r\n\r\n## آپگرید کردن Nginx\r\n\r\nدر هر بار راه‌اندازی سرور اگر سرور شما نیاز به نصب nginx داشته باشد ما آخرین ورژن موجود و stable آن را نصب می‌کنیم، اگر چه با گذشت زمان ممکن است نیاز به این داشته باشیدکه nginx را به آخرین ورژن آپگرید کنید . برای این کار از دستور زیر می‌توانید بهره ببرید.\r\n\r\n```shell\r\nsudo apt-get install -y --only-upgrade nginx\r\nsudo nginx -v\r\nsudo service nginx restart\r\n```\r\n\r\n:::note{.danger}\r\n\r\n::title[چرا پَچیم به شکل خودکار آپگرید nginx را انجام نمی‌دهد؟]\r\n\r\nآپگرید کردن ورژن nginx می‌تواند `باعث از کار افتادن سایت‌های شما به شکل موقتی` شود البته به دلیل اینکه آپگرید nginx زمانبر است یا یا به هر دلیل ممکن است در ورژن جدیدتر مشکلاتی باشد که باعث قطعی دائمی سرور شما شود. از این رو پَچیم این آپگرید کردن را به شکل اتوماتیک انجام نمی‌دهد و این را به عهده شما میگذارد که اگر حتما نیاز به انجام این کار را دارید از طریق دستور بالا اینکار را انجام دهید و `البته ریسک انجام این کار هم با خود شماست`.\r\n\r\n:::\r\n\r\n## آپگرید کردن Node.js\r\n\r\nدر زمان راه اندازی سرور مورد نظر شما، با توجه به نوع سرور اگر بر روی سرورتان نیاز به node.js باشد، پَچیم همیشه آخرین ورژن از node.js را برای شما نصب و راه اندازی می‌کند اگرچه با گذشت زمان ممکن است نیاز داشته باشید که ورژن node.js خود را به آخرین ورژن آپگرید کنید که با استفاده از دستور زیر به سادگی می‌توانید اینکار را انجام دهید.\r\n\r\n```shell\r\ncurl -fsSL https://deb.nodesource.com/setup_current.x | sudo -E bash -\r\n\r\nsudo apt-get install -y nodejs\r\n```\r\n\r\nشما می‌توانید ا[طلاعات ورژن‌های مختلف node](https://nodejs.org/en/about/releases/) را مطالعه کنید.\r\n\r\n## آپگرید کردن Npm\r\n\r\nدر زمان راه اندازی سرور همیشه آخرین ورژن از npm بر روی سرور شما نصب می‌شود اما با گذشت زمان ممکن است ورژن‌های جدیدتری از npm در اختیار شما قرار بگیرد. شما هر زمان که بخواهید می‌توانید با اجرای دستور زیر اقدام به آپگرید کردن آن کنید.\r\n\r\n```shell\r\nsudo npm install npm@latest -g\r\n```\r\n\r\nالبته دقت کنید در زمان راه اندازی سرور اگر سرور شما دارای npm باشد، یک زمانبندی به سرور شما برای اجرای هفتگی این دستور اضافه می‌شود تا به شما کمک کند همیشه npm را به روز نگه دارید. البته در صورت عدم نیاز به آن می‌توانید از قسمت مدیریت زمانبدی‌ها آن را حذف کنید.\r\n\r\n## قطع شدن ارتباط با پَچیم \r\n\r\nچندین دلیل مختلف می‌تواند باعث قطع شدن ارتباط سرور شما با پَچیم باشد که ما در اینجا سعی می‌کنیم بعضی از این مشکلات و راحل‌های که برای آن وجود دارد را برایتان توضیح دهیم.\r\n\r\n**1- مشکل سرور شما فیزیکی باشد و اینترنت آن قطع شده باشد.**\r\n\r\nخیلی از اوقات ممکن است مشکلی در **دیتاسنتر** شما وجود داشته باشد که باعث خاموش شدن سرور یا قطع شدن اینترنت آن شده باشد. برای بررسی این موضوع نیاز به پینگ گرفتن از سرور است. \r\n```shell\r\nping x.x.x.x \r\n```\r\n\r\nبه جای مقدار `x.x.x.x` مقدار IP عمومی سرور خود را وارد کنید و مطمئن شوید، خارج از سرور هم پینگ دارید اما در صورت اینکه پینگ نداشتید قطعا مشکل فیزیکی است و نیاز است به پشتیبانی ارائه دهنده سرور اختصاصی یا مجازی خود پیام دهید و پیگیری مشکل سرور خود را از آن‌ها انجام دهید.\r\n\r\n\r\n**2- بررسی آدرس IP عمومی سرور** \r\n\r\nدر بعضی از ارائه دهندگان زمانی که سرور مجازی ریسارت می‌شود آی پی عمومی متفاوتی به سرور داده می‌شود. برای همین همیشه چک کنید IP عمومی سرور با IP عمومی که در پَچیم ثبت کرد‌ه‌اید یکی باشد.\r\n\r\n**3- کلید SSH مربوط به پَچیم به هر دلیلی از سرور شما حذف شده**\r\n\r\nپَچیم با کلیدها اختصاصی SSH به سرور شما متصل می‌شود که ممکن است به هر دلیلی این کلید حذف شده یا تغییر کند (**که البته این موضوع بسیار نادر است**) اما حتما فایل‌های `/root/.ssh/authorized_keys` و `/home/pachim/.ssh/authorized_keys` را چک کنید و بررسی کنید که آیا کلید SSH که در این فایلih قرار گرفته با کلید SSH که به سرور شما در پَچیم اختصاص داده شده یکی باشد. برای مشاهده کلید SSH پَچیم برای سرور شما می‌توانید وارد قسمت تنظیمات سرور شوید.\r\n\r\n**4- کاراکترهای اضافه‌ای در کلید SSH پَچیم قرار گرفته است**\r\n\r\nدر زمان کپی کردن کلید عمومی پَچیم در فایل‌های `/root/.ssh/authorized_keys` و `/home/pachim/.ssh/authorized_keys` ممکن است به اشتباه فاصله یا خط جدیدی به کلید SSH اضافه کرده باشید که برای این موضوع حتما باید مطمئن شوید که کلید را به درستی در فایل‌های مورد نظر قرار داده‌اید\r\n\r\n**5- سرور شما دارای فایروال دیتاسنتر یا مواردی شبیه به آن است**\r\n\r\nاگر سرور شما دارای فایروال خارجی، برای مثال فایروال دیتاسنتر است لطفا مطمئن شوید [IP های پَچیم](/getting-started/introduction#آدرس-ipهای-پَچیم) در لیست سفید فایروال شما قرار دارد.\r\n\r\n**6- پورت 22 از قوانین فایروال سرور شما حذف شده**\r\n\r\nاگر به هر دلیلی این پورت از فایروال شما حذف شود، نه تنها پَچیم بله خود شما هم مستقیما نمی‌توانید به سرور خود با SSH متصل شوید و نیاز است برای حل این موضوع به پشتیبانی ارائه دهنده سرور اختصاصی یا مجازی خود پیام دهید تا این پورت را مجددا به فایروال سرور شما اضافه کنند البته اگر توانایی اینکار را داشته باشند.\r\n\r\nاگر مشکلات و راحل‌های بالا را چک کردید ولی با این حال ارتباط پَچیم با سرور شما برقرار نشد دستورات زیر را یکبار اجرا کنید تا اجازه دسترسی فایل‌های مورد نیاز ارتباط با پَچیم بررسی شود.\r\n\r\nتوجه کنید که کد زیر را باید با کاربر root اجرا کنید، بنابراین اگر دسترسی ssh به سرور خود را دارید ابتدا وارد سرور شوید و بعد با دستور `sudo su -` وارد کاربر root شوید و بعد دستورات زیر را اجرا کنید.\r\n```shell\r\n# Fixes the \"root\" user (run as root)\r\n\r\nchown root:root /root\r\nchown -R root:root /root/.ssh\r\nchmod 700 /root/.ssh\r\nchmod 600 /root/.ssh/authorized_keys\r\n\r\n# Fixes the \"pachim\" user\r\n\r\nchown pachim:pachim /home/pachim\r\nchown -R pachim:pachim /home/pachim/.ssh\r\nchmod 700 /home/pachim/.ssh\r\nchmod 600 /home/pachim/.ssh/authorized_keys\r\n```\r\n\r\nاگر کماکان با انجام همه مواردی که در بالا گفتیم مشکل شما باقی بود، در صورت اینکه هنوز دسترسی ssh به سرور خود را دارید وارد سرور شوید و با دستور `sudo su -` وارد کاربر `root` شوید و دستور زیر را اجرا کنید. خروجی که این دستور به شما نمایش می‌دهد را برای پشتیبانی پَچیم ارسال کنید تا مشکل شما بررسی شود.\r\n```shell\r\ngrep 'sshd' /var/log/auth.log | tail -n 10\r\n```\r\n\r\n:::note{.danger}\r\n\r\n::title[مدیریت سرور با پَچیم]\r\n\r\nاگر به هر دلیلی پَچیم نتواند به سرور شما متصل شود، از طریق پنل کاربری سرور در پَچیم هیچ کاری نمی‌توانید بر روی سرور خود انجام دهید.\r\n\r\n:::\r\n\r\n## ارور باز بودن تعداد زیادی فایل\r\n\r\nاگر اروری از سرورتان دریافت کردید که عنوان یا بخشی از متن آن \"**too many open files**\" بود, به معنی این است که شما باید حداکثر مقدار فایلی که سیستم عامل شما اجازه میدهد در یک زمان پیکربندی کنید را افزایش دهید. این ارور ممکن است زمانی زیاد رخ دهد که شما درخواست های بسیار زیادی را از طریق وب دریافت کرده‌ و باید آن‌ها را پردازش کنید. \r\n\r\nابتدا چک کنید که **حداکثر فایل‌های باز** بر اساس سایز سرورتان درست تنظیم شده باشد. این مقدار معمولا برابر است با حداکثر 100 فایل باز به ازای **1 مگابایت** RAM، یعنی اگر سرور شما دارای 4 گیگ RAM باشد حداکثر فایل‌های باز می‌تواند `409600` باشد. \r\n\r\nبرای آنکه متوجه شوید در حال حاضر حداکثر تعداد فایل‌های سیستم عامل شما چقدر است می‌توانید دستور `sysctl fs.file-max` را اجرا کنید، بعد از اجرای دستور، در خروجی حداکثر تعداد فایل‌های که می‌تواند باز باشد را می‌توانید مشاهده کنید. اگر زمانی تصمیم دارید این مقدار را افزایش یا کاهش دهید می‌توانید فایل `/etc/sysctl.conf` را باز و خط زیر را تغییر دهید.\r\n\r\n\r\n```shell\r\nfs.file-max = LIMIT_HERE \r\n```\r\nبا توجه به اینکه خط بالا محدودیت را بر اساس عددی که وارد کردید افزایش یا کاهش می‌دهد نیاز است فایل `/etc/security/limits.conf` را باز کنید و مقادیر زیر را در آن ثبت کنید دقت کنید به جای `LIMIT_HERE` باید عدد مورد نظر خود را وارد کنید. \r\n\r\n```shell\r\nroot soft nofile LIMIT_HERE\r\nroot hard nofile LIMIT_HERE\r\npachim soft nofile LIMIT_HERE\r\npachim hard nofile LIMIT_HERE\r\n```\r\nو همچنین اگر کاربر ایزوله شده‌ای را در سرور خود ایجاد کردید نیاز دارید بعد از تنظیمات بالا این موارد را هم به همان فایل اضافه کنید.\r\n```shell\r\nisolated-user soft nofile LIMIT_HERE\r\nisolated-user hard nofile LIMIT_HERE\r\n```\r\n\r\nبه علاوه، اگر خطای \"too many open files\" در پردازش nginx زیاد دیده ‌شد (معمولا زمانی که از سرور توزیع بار استفاده می‌کنید این ارور ممکن است برای شما زیاد بوجود ‌آید)، همانند بالا در فایل `/etc/security/limits.conf` برای کاربر nginx هم مقدار زیر را وارد و مقداردهی کنید.\r\n\r\n```shell\r\nnginx soft nofile LIMIT_HERE\r\nnginx hard nofile LIMIT_HERE\r\n```\r\nو همچنین مقدار زیر را به تنظیمات nginx به آدرس `/etc/nginx/nginx.conf` هم اضافه کنید.\r\n```shell\r\nworker_rlimit_nofile LIMIT_HERE;\r\n```\r\n\r\nبعد از اعمال تنظیم مربوط به nginx در بالا برای اعمال آن حتما نیاز است کن یکبار nginx را ریست کنید، برای اینکار می‌توانید از دستور زیر استفاده کنید از طریق پنل پَچیم در خواست ریست شدن nginx را به سرور بفرستید.\r\n\r\n```shell\r\nservice nginx restart\r\n```\r\n\r\n## اجرا نشدن کار زمانبدی‌ شده\r\n\r\nاشتباه وارد کردن کوچک‌ترین تنظیماتی برای ایجاد یک کار زمانبدی می‌تواند باعث عدم اجرای آن زمانبدی شود. از دستوری که قصد اجرای آن را دارید تا بازه زمانی آن.\r\n\r\nپیشنهاد می‌کنیم دستوری که قصد اجرای آن را دارید یکبار با ترمینال و SSH اجرا کنید و اگر به درستی کار کرد برای درست وارد کردن بازه‌ زمانی هم می‌توانید از ابزار [Crontab.guru](https://crontab.guru/) استفاده کنید \r\n\r\n\r\n## حذف شدن قانون SSH از فایروال\r\n\r\nاگر به هر دلیلی قانون SSH که مربوط به اجازه دادن دسترسی به پورت 22 سرور است را طریق خود پَچیم یا دستورات مستقیم خود سرور حذف کنید، ارتباط پَچیم با سرور شما امکان ناپذیر خواهد شد و همچنین خود شما هم دیگر نمی‌توانید از طریق ssh به سرورتان دسترسی پیدا کنید. **بنابراین پیشنهاد می‌کنیم هیچ وقت این مقدار را حذف نکنید حتی برای تست** .\r\n\r\n**اما اگر حرف بالا را نادیده گرفتید** و این مقدار را حذف کردید هیچ راهی ندارید به غیر آنکه به پشتیبانی ارائه دهنده سرور اختصاصی یا vps مجازی خود پیام دهید و از آن‌ها بخواهید از طریق دسترسی‌های مستقیم خودشان به سرورتان متصل شوند و به فایروال سرور دسترسی پورت 22 را اضافه کنند.\r\n","path":"/servers/help-instructions"},{"meta":{"title":"توزیع بار"},"content":"\r\n# توزیع بار\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nویژگی توزیع بار برای به اشتراک گذاشتن ترافیک سایت شما بین چند سرور مورد استفاده قرار میگیرد و به جای اینکه یک سرور به درخواست‌های کاربران پاسخگو باشد چندین سرور اینکار را انجام می‌دهند و به این موضوع توزیع بار سرور می‌گویند. این موضوع به وبسایت‌های پربازدید کمک می‌کند تا بتوانند حجم زیادی از ورودی وبسایت خود را بین چند سرور توزیع کنند تا تجربه بدونه مشکلی را برای کاربران خود ایجاد کنند.\r\n\r\nبرای ایجاد کردن یک سیستم توزیع بار شما نیاز دارید یک سرور توزیع بار ایجاد کنید، برای اینکار کافیست زمانی که قصد ساخت سرور دارید نوع توزیع بار را انتخاب کنید، با انتخاب سرور توزیع بار تنها بر روی سرور شما Nginx نصب خواهد شد و شما هیچ اپلیکیشنی را مستقیما بر روی سرور بار نمی‌توانید بالا بی‌آورید.\r\n\r\n## ایجاد توزیع بار\r\n\r\nبعد از راه اندازی سرور توزیع بار شما باید وبسایت توزیع بار خود را در این سرور راه اندازی کنید، دامنه‌ای اصلی وبسایت خود را وارد کنید و وبسایت مورد نظر را ایجاد کنید.\r\n\r\n:::note{.tip}\r\nشما از یک سرور توزیع بار می‌توانید برای توزیع بار چندین سایت استفاده کنید و این نوع از سرورها یکبار مصرف و فقط برای یک سایت نیستند.\r\n:::\r\n\r\nحالا بعد از آنکه وبسایت مورد نظر را به سرور توزیع بار اضافه کردید وقتی وارد وبسایت مورد نظر در پنل پَچیم شوید، صفحه‌ای با عنوان توزیع بار مشاهده خواهید کرد. \r\n### روش‌های توزیع بار \r\n\r\nما در پَچیم از دو مدل توزیع بار استفاده می‌کنیم که به شما اجازه می‌دهد آزادی عمل بیشتری داشته باشید. \r\n\r\n- توزیع بار در شبکه خصوصی\r\n- توزیع بار در شبکه عمومی\r\n\r\nدرک کردن هر کدام از این روش‌ها در پیاده سازی توزیع بار بسیار بسیار مهم است که در زیر به تفضیل این دو را به شما توضیح خواهیم داد.\r\n\r\n#### توزیع بار با شبکه خصوصی\r\n\r\nتوزیع بار با شبکه خصوصی روشی است که **سرورهای شما باید حتما دارای آدرس IP خصوصی باشند و از طریق آدرس‌های خصوصی توانایی ارتباط برقرار کردن با هم را داشته باشند** در غیر این صورت امکان استفاده کردن از این روش وجود ندارد. متاسفانه در ایران به دلیل وجود نداشتن سرورهای ابری متفاوت کمتر سرویس ‌دهنده‌ای را پیدا می‌کنید که این سرورهای به شما ارائه دهد که با استفاده از Ip خصوصی با هم در ارتباط باشند.\r\n\r\nالبته بعضی از سرویس‌دهنده ها هم چنین کاری انجام می‌دهند مانند ابرآروان و پارس پک (استفاده کردن یا نکردن از هر کدام به عهده خود شماست البته ممکن است موارد دیگری وجود داشته باشید که میتوانید از طریق لینک تغییر این صفحه در گیت‌هاب در انتهای این صفحه آنها را به ما معرفی کنید. ) \r\n\r\n#### توزیع بار در شبکه عمومی \r\n\r\nبدلیل محدود بودن ارائه دهندگانی که قابلیت شبکه خصوصی را داشته باشند ما سعی کردیم ویژگی دیگری را آماده کنیم تا با استفاده از آن بتوانید سرورهای با منطقه مکانی متفاوت تر را در قالب توزیع بار مورد استفاده قرار دهد. این روش با استفاده از Ip عمومی سرورها پیاده سازی ‌می‌شود و از طریق همین Ip هم سرورها با هم ارتباط برقرار می‌کنند.\r\n\r\nبا این حالت فرقی ندارد، شما سرورتان را از کدام ارائه دهنده و یا از کجای دنیا تهیه می‌کنید، شما می‌توانید برای مثال دو سرور در ایران و یک سرور در خارج از ایران تهیه کنید و بار سرورتان را بین آن‌ها تقسیم کنید.\r\n\r\n\r\n### تفاوت روش شبکه خصوصی و شبکه عمومی\r\n\r\nطبیعی است که بین روش شبکه خصوصی و شبک عمومی تفاوت‌های وجود داشته باشد که باعث برتری هر کدام نسبت به دیگری می‌شود. در زیر دو مورد از این تفاوت‌ها را برایتان توضیح خواهیم داد تا کاملا متوجه موضوع شوید.\r\n\r\n#### سرعت دسترسی سرورها در شبکه خصوصی و عمومی \r\n\r\nزمانی که شما یک شبکه شخصوصی از سرورها را ایجاد کنید و سرورها با ip خصوصی با هم در ارتباط باشند طبیعتا سرعت این ارتباط در این شبکه خصوصی بالاتر از شبکه عمومی است، **بنابراین از نظر سرعت شبکه‌های خصوصی بهروری بهتری نسبت به شبکه‌های با Ip عمومی دارند**.\r\n\r\n#### گواهی SSL در توزیع بار\r\n\r\nدر **شبکه خصوصی** الزامی برای داشتن SSL نیست اما معمولا سایت‌ها برای امنیت بیشتر نیاز به SSL دارند، برای این موضوع شما تنها کافیست برای سایتی که در سرور توزیع بار تعریف کرده‌اید وارد قسمت SSL شوید و SSL وبسایت را فعال کنید و تمام.\r\n\r\nاما در **شبکه عمومی** وضع متفاوت است، چون سرورها از طریق Ip عمومی با هم ارتباط برقرار می‌کنند برای آنکه امنیت توزیع بار بین سرورها را حفظ کنید، حتما باید برای تک تک وبسایت‌های داخل شبکه توزیع بار، از SSL استفاده کنید.\r\n\r\n:::note{.tip}\r\n::title[استفاده از SSL شخصی]\r\n\r\nبرای SSL شبکه عمومی حتما پیشنهاد می‌کنیم. یک SSL شخصی برای دامنه خود تهیه کنید و به شکل دستی برای تک تک وبسایت های داخل شبکه توزیع فعال کنید و برای به‌وجود نیامدن `مشکلات از SSL رایگان برای توزیع بار در شبکه عمومی ترجیحا` استفاده نکنید.\r\n\r\n:::\r\n\r\n:::note{.tip}\r\n::title[استفاده از SSL رایگان در شبکه عمومی توزیع]\r\n\r\nاگر مایل هستید `از SSL رایگان در شبکه عمومی توزیع بار استفاده کنید` وارد سایت خود در سرور توزیع شوید و یک SSL رایگان برای آن درخواست دهید.\r\n\r\nحالا تنها کافیست وارد پنل هر سایتی که به سرور توزیع اضافه می‌کنید شوید و از بخش مدیریت SSL درخواست کپی شدن SSL از سرور توزیع خود را اجرا کنید تا SSL ایجاد شده در سرور اصلی توزیع بر روی سرورهای مورد نظر شما نیز قرار بگیرد.\r\n\r\nتوجه کنید که هر زمان SSL رایگان سایت اصلی توزیع آپدیت شود، SSL های کپی شده نیز آپدیت خواهند شد.\r\n\r\n:::\r\n\r\n:::note{.warning}\r\n::title[یادگیری پیاده سازی سرور توزیع بار به شکل عملی]\r\n\r\nاگر با خواندن توضیحات بالا فکر می‌کنید که راه اندازی یک سرور توزیع بار کار بسیار سختی است، پیشنهاد می‌کنیم حتما دوره آموزش ویدیوی [`راه اندازی سرور و سایت با Pachim`](https://roocket.ir/series/server-managment-with-pachim) را مشاهده کنید در آن دوره به شکل عملی این موضوع را آموزش داده‌ایم.\r\n\r\n:::\r\n### متدهای مختلف توزیع بار\r\n\r\nبعد از آنکه روش توزیع بار خود را انتخاب کردید، نوبت به متد توزیع بار میرسد، هر کدام از این متدها روش توزیع بار در سرور شما را مشخص می‌کند : \r\n\r\n- **Round Robin** : متد پیشفرض، با توجه به وزن سرورها بار روی سرور شما را بین سرورهای مشخص شده تقسیم می‌کند.\r\n- **Least Connections** : درخواست‌ها را به سروری که کمترین تعداد درخواست کننده داشته باشد ارسال می‌کند.\r\n- **IP Hash** :  در این نوع توزیع بار، با در نظر گرفتن IP کاربر، درخواست‌های او به سروری فرستاده می‌شود که در نخستین درخواست به آن متصل شده است.\r\n\r\nشما هر زمان که بخواهید می‌توانید متد توزیع بار را تغییر دهید.\r\n\r\n### لیست سرورهای توزیع بار\r\n\r\nحالا نوبت به مشخص کردن استخر سرورها رسیده، استخر در اینجا به این معنی است که درخواست کاربر، زمانی که به توزیع کننده بار برسد در این استخر  بر اساس متدی که مشخص کردید، تعین تکلیف می‌شود و به سرور مقصد برای پاسخگویی ارسال می‌شود.\r\n\r\n#### اضافه کردن سرور به استخر سرورها \r\n\r\nشما می‌توانید با کلیک بر روی دکمه **سرور جدید**، یکی از سرورهای که از قبل آماده سازی کرده‌اید را با توجه به نوع شبکه توزیع بار به لیست سرورهای داخل استخر خود اضافه کنید.\r\n\r\nتوجه کنید اگر نوع شبکه شما خصوصی باشد حتما سرور مورد نظر شما باید دارای IP خصوصی باشد تا بتوانید به لیست سرورهای توزیع کننده بار خود آن را اضافه کنید.\r\n\r\n#### وزن سرورها\r\n\r\nدر زمان ایجاد کردن سرور یا حتی ویرایش کردن سرور شما می‌توانید وزن هر سرور را مشخص کنید و بر اساس وزن مشخص شده و متد توزیع بار درخواست‌ها بین سرورهای داخل استخر سرورها تقسیم می‌شوند. \r\n\r\nبرای مثال شما دو سرور دارید وزن یک سرور را ۱۰ و وزن سرور دیگر را ۲ قرار می‌دهید.  اگر ۱۲ درخواست به سرور شما ارسال شود ۱۰ تای آن به سروری با وزن ۱۰ ارسال می ‌شود و ۲ تای آن به سروری با وزن ۲.\r\n\r\n#### سرورهای پشتیبان\r\n\r\nشما می‌توانید به استخر سرورها، سرور پشتیبان هم اضافه کنید، این نوع از سرور تا زمانی که سرورهای معمول داخل استخر از دسترس خارج نشوند وارد پروسه کار نمی‌شوند و همیشه به عنوان پشتیبان در زمان‌های اضطراری مورد استفاده قرار میگیرند\r\n\r\n#### متوقف کردن موقت سرور\r\n\r\nاگر زمانی نیاز دارید سروری را موقتاً از استخر سرورها خارج کنید، نیازی نیست که آن را از لیست سرورهای داخل استخر حذف کنید، برای این کار کافیست که گزینه متوقف کردن سرور را در قسمت ویرایش سرور فعال کنید و بعد از اینکار تا زمانی که شما بخواید سرور مورد نظر از لیست سرور‌های استخر شما بدون حذف کردن، خارج می‌شود.\r\n\r\n#### تنظیمات بیشتر در توزیع بار \r\n\r\nدر کنار مواردی که در بالا توضیح دادیم، شما در پَچیم تنظیمات دیگری هم برای سرورهای داخل استخر خود می‌توانید تعیین کنید. در زیر چند مورد از این تنظیمات را به شما توضیح می‌دهیم : \r\n\r\n- **حداکثر اتصال** : شما می‌توانید مشخص کنید که هر سرور حداکثر تا چه تعداد اتصال می‌تواند داشته باشد.\r\n- **حداکثر تعداد شکست** : شما می‌توانید برای یک سرور مشخص کنید که حداکثر می‌تواند چند شکست در پردازش درخواست کاربر را قبول کند تا سرور دیگری جایگزینش شود.\r\n- **حداکثر زمان شکست** : این گزینه به nginx می گوید حداکثر چه مقدار باید منتظر بماند تا پاسخی از سرور دریافت کند در غیر این صورت یک شکست ثبت کند.\r\n","path":"/servers/load-balancing"},{"meta":{"title":"مدیریت سرور"},"content":"\r\n# مدیریت سرورهای\r\n\r\n### جدول محتوا\r\n\r\n## تنظیمات سرور \r\n\r\n شما از طریق پنل پَچیم و بخش تنظیمات سرور مي‌تواند موارد مختلفی از سرور  خود را تغییر دهید. که در زیر توضیحات لازم در مورد هر کدوم را به شما خواهیم داد.\r\n\r\n\r\n### اطلاعات سرور\r\n\r\nدر بخش اطلاعات سرور شما می‌توانید بخش مهمی از اطلاعات اصلی سرور خود از جمله موارد زیر را تغییر دهید.\r\n\r\n- نام نمایشی سرور\r\n- نام سرور\r\n- پورت SSH\r\n- IP عمومی سرور\r\n- IP اختصاصی سرور\r\n- منطقه زمانی\r\n\r\n#### نام نمایشی سرور \r\n\r\nاین عنوان تنها در رابط کاربری پَچیم مورد استفاده قرار میگیرد می‌گیرد و تغییر آن تاثیری در خود سرور نخواهد داشت.\r\n\r\n#### نام سرور\r\n\r\nاین نام اصلی سرور شماست که اگر با استفاده از ssh به سرورتان متصل شوید خواهید درد این نام به شما نمایش داده می‌شود. شما می‌توانید هر زمان که مایل بودید این نام را در تنظیمات سرور خود تغییر دهید.\r\n\r\n#### IP عمومی سرور\r\n\r\nپَچیم از طریق آدرس IP عمومی سرور شما به سرورتان متصل می‌شود در صورتی اینکه این IP به هر دلیلی تغییر کند برای آنکه سیستم پَچیم بتواند بدون مشکل به کار ادامه دهد، نیاز است از قسمت تنظیمات سرور این IP را تغییر دهید.\r\n\r\n\r\n#### IP خصوصی\r\n\r\nاین آدرس IP در ایجاد کردن شبکه‌های خصوصی بین سرورها مورد استفاده قرار میگیرد و می‌تواند به سریعتر ارتباط برقرار کردن بین سرورها کمک زیادی کند.\r\n\r\n#### منطقه زمانی (Timezone)\r\n\r\nپَچیم برای همه سرورهای که راه‌اندازی می‌کند منطقه زمانی UTC را به شکل پیش فرض تنظیم می‌کند. اگر مایل هستید این منطقه زمانی را بر اساس نیاز خود تغییر دهید از بخش تنظیمات می‌توانید به هر منطقه زمانی که نیاز دارید آن را تغییر دهید.\r\n\r\n\r\n### انتقال سرور به دیگران \r\n\r\nگاهی اوقات ممکن است شما به عنوان یک توسعه‌دهنده سروری را در اکانت خود آماده سازی کنید اما در نهایت بخواهید مالکیت آن را به شخص دیگری دهید. برای اینکار کافیست از قسمت تنظیمات سرور آدرس ایمیل شخص مورد نظر را در قسمت انتقال سرور وارد کنید و درخواست خود را ارسال کنید.\r\n\r\nالبته دقت کنید تا زمانی که شخص این انتقال را تایید نکند، این انتقال تکمیل نخواهد شد و به عنوان ارسال کننده درخواست تا قبل از تایید درخواست هر زمان که بخواهید می‌توانید انتقال سرور را لغو کنید.\r\n\r\n:::note{.warning}\r\n::title[عدم انتقال مالکیت فیزیکی]\r\n\r\nدقت کنید با انتقال مالکیت سرور در پَچیم مالکیت فیزیکی آن که از یک تهیه کننده شخص ثالث تهیه شده منتقل نمی‌شود و خود شما باید از تهیه کننده شخص ثالث پیگیری انتقال فیزیکی آن را انجام دهید.\r\n:::\r\n\r\n### حذف سرور \r\n\r\nشما هر زمان که بخواهید در پَچیم می‌توانید سرور مورد نظر خود را حذف کنید و اینکار را از صفحه تنظیمات سرور می‌توانید انجام دهید. با حذف سرور تمام اطلاعات مربوط به آن سرور کاملا حذف خواهد شد و این حذف کردن قابل برگشت نخواهد بود بنابراین ابتدا از حذف کردن سرور خود اطمینان حاصل کنید.  \r\n","path":"/servers/managment"},{"meta":{"title":"ماینتور سرور"},"content":"\r\n# ماینتور سرور\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nبرای مدیریت درست سرورها ما امکانی را در پَچیم در اختیار شما قرار داده‌ایم که به سادگی با استفاده از آن می‌توانید سرورهای خود را مانیتور کنید و از میزان استفاده آن‌ها از منابعی که در اختیار سرور است آگاه شوید. این موضوع به شما کمک می‌کند تا از میزان مصرف منابع در ساعات مختلف و روزهای مختلف به شکل نمودار آگاه شوید و اگر نیاز به ارتقا سرورهای خود دارید به موقع آن را انجام دهید.\r\n\r\nهمچنین در کنار مانیتور کردن اطلاعات سرور قابلیتی با عنوان ناظران را در اختیار شما قرار داده‌ایم که به سادگی می‌توانید برای سرورهای خود ناظر قرار دهید تا در صورت رخ دادن اتفاقی به شما اطلاع رسانی شود.\r\n\r\n## اطلاعاتی که جمع‌آوری می‌شود\r\n\r\nما در پَچیم در حال حاضر سه نوع اطلاعات را از سرورهای شما جمع‌آوری می‌کنیم، میانگین لود CPU، میزان استفاده از حافظه و میزان استفاده از RAM که هر کدام از این سه نقش کلیدی در سرعت پاسخگویی سرور شما دارند.\r\n\r\n### میانگین لود CPU\r\n\r\nمیانگین لود CPU به مقدار مصرف CPU در یک دقیقه گفته می‌شود که ما این مقدار را در پنل پَچیم به شما نمایش می‌دهیم.\r\n\r\n### میزان استفاده از حافظه (Disk) \r\n\r\n هر سرور، دارای حافظه به شکل Hard Disk یا SSD یا Nvme است که ما هر سه این دو را Disk خطاب قرار می‌دهیم و این مقدار را بر روی پنل پَچیم به شما نمایش خواهیم داد.\r\n\r\n### میزان استفاده از RAM\r\n\r\nحافظه RAM بخش مهم دیگری از هر سرور است که مانیتور کردن لحظه‌ای آن برای هر سروری بسیار مهم است، ما این مورد را هم در پنل‌ پَچیم به شما نمایش خواهیم داد.\r\n\r\n## ناظران \r\n\r\nناظر چیست ؟ گاهی اوقات شما نیاز دارید تا اگر حافظه Disk سرور شما برای مثال به 80 درصد رسید، این حافظه را ارتقا دهید یا اگر CPU یا RAM شما بیشتر از میزانی که مد نظر شما است، مورد استفاده قرار گرفت متوجه آن شوید و این منابع را در سرور خود ارتقا دهید، ما در پَچیم امکانی را آماده کرده‌ایم که آن را ناظر صدا میزنیم، شما می‌توانید برای هر کدام از منابع سرور خود یک یا چند ناظر قرار دهید تا در صورت اینکه هر کدام از منابع مورد نظرتان بیشتر یا کمتر از مصرفی که مد نظر شما است، مصرف کرد، به شما اطلاع رسانی شود.\r\n\r\n### ایجاد ناظر \r\n\r\nبرای ایجاد ناظر تنها کافیست در صفحه مانیتور در بخش سرور بر روی دکمه ناظر جدید کلیک کنید و در فرمی که به شما نمایش داده می‌شود اطلاعات زیر را پر کنید.\r\n\r\n- نوع ناظر : شما قصد دارید ناظر شما کدام یک از منابع سرورتان را بررسی کند\r\n- عملگر : مایل هستید آستانه تحمل ناظر بزرگتر مساوی یا کوچکتر مساوی، آستانه تحمل باشد\r\n- آستانه تحمل: این مقدار مشخص می‌کند که ناظر شما تا چه مقداری می تواند تحمل کند.\r\n- مدت تحمل آستانه : اگر n بار منبع مورد نظر سرور شما از آستانه مشخص شده عبور کند، شما ایمیل هشدار دریافت خواهید کرد. \r\n- ایمیل اعلام هشدار : ایمیلی که در صورت رد کردن آستانه و تحمل آسانه به آن اطلاع رسانی خواهد شد.\r\n\r\n### مدیریت ناظر \r\n\r\nشما می‌تواند بعد از ایجاد یک ناظر به سادگی آن را در بخش مدیریت ناظران، ویرایش یا حذف کنید.\r\n","path":"/servers/monitoring"},{"meta":{"title":"شبکه سرور"},"content":"\r\n# شبکه \r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nدر پنل شبکه سرور پَچیم شما می‌توانید شبکه سرورهای متصل به هم و فایروال سرورتان را مدیریت کنید. مدیریت درست هر کدام می‌تواند باعث حفظ و افزایش امنیت سرورهای شما شود. \r\n\r\n\r\n\r\n\r\n## شبکه سرورها\r\n\r\nبا استفاده از بخش ارتباط بین سرورها شما می‌توانید با دردسر بسیار کمتری سرورهای مختلف را به هم متصل کنید. برای مثال شما برای ایجاد یک پروژه مقیاس پذیر، سرور وب خود را از سرورهای دیتابیس و کش جدا کرد‌ه‌اید حالا برای آنکه این سرورها بتوانند با هم ارتباط برقرار کنند نیاز است از طریق این بخش ارتباط بین انها را ایجاد کنید. \r\n\r\nشما تنها می‌توانید سرورهای را به هم متصل کنید که توسط یک کاربر ایجاد شده باشند، شما نمی‌توانید از این بخش سرورهای خود را به سرورهای اکانت دیگر متصل کنید.\r\n\r\nاگر سرورهای شما با استفاده از Ip خصوصی به هم متصل هستند و یک شبکه خصوصی را شکل داده‌اند زمانی که یک سرور را به سرور دیگر متصل می‌کنید این اتصال با استفاده از Ip خصوصی سرورها انجام می‌شود و شما نیاز نیست کار اضافه‌ای انجام دهید. اما اگر سروری IP خصوصی نداشته باشد از Ip عمومی آن استفاده خواهد شد.\r\n\r\n## فایروال \r\n\r\nدر هر سیستمی فایروال بخش مهمی از ارتباط آن سیستم را کنترل می‌کند شما نیز از طریق پنل پَچیم می‌توانید به سادگی فایروال سرورهای خود را کنترل کنید. شما می‌توانید یک پورت را برای همه باز کنید یا برای همه ببندید یا اینکار را برای یک IP بخصوصی انجام دهید.\r\n\r\n:::note{.tip}\r\n::title[تغییر دستی قوانین فایروال]\r\n\r\nتوجه داشته باشید اگر بر روی سرور خود با استفاده از `ufw` تغییر در قوانین فایروال به وجود آورید این تغییرات در پنل پَچیم نمایش داده نخواهند شد.\r\n\r\n:::\r\n\r\n### بازه پورت\r\n\r\nزمانی که یک قانون جدید به فایروال خود اضافه می‌کنید می‌توانید در قسمت پورت یک بازه از پورت‌ها را مشخص کنید برای مثال `3000:4000` معنی این مقدار این است که بازه پورت‌های بین عدد 3000 تا 4000 هر پورتی بود شامل قانون مورد نظر شود.\r\n\r\n### قانون اجازه / رد\r\n\r\nهر قانونی که اضافه می‌کنید میتواند حالت **اجازه** یا **رد** را داشته باشد. اجازه به این معنیست که هر مقداری که با آن قانون هماهنگ باشه اجازه استفاده را دارد و ترافیک به سرور شما وارد می‌شود و در صورت رد از ورود ترافیک به سرور شما جلوگیری می‌شود.\r\n\r\n:::note{.tip}\r\n::title[اولویت بالاتر قانون رد]\r\n\r\nتوجه داشته باشید اگر دو قانون کاملا یکسان در سیستم بوجود آوردید که یکی از آن‌ها در مورد اجازه دادن و دیگری در مورد رد ترافیک باشند آن قانونی که در مورد رد کردن است اولویت بالاتری نسبت به اجازه دادن دارد.\r\n\r\n:::\r\n\r\n## قوانین پیش فرض فایروال\r\n\r\nبه عنوان بخشی از پروسه راه اندازی سرور، بر اساس نوع سرور پَچیم قوانینی را به سرور شما اضافه می‌کند.\r\n\r\n- SSH - اجازه میدهد از هر IP بتوانید به پورت 22 سرور دسترسی داشته باشید.\r\n- HTTP - اجازه میدهد از هر IP بتوانید به پورت 80 سرور دسترسی داشته باشید.\r\n- HTTPS - اجازه میدهد از هر IP بتوانید به پورت 443 سرور دسترسی داشته باشید. \r\n\r\n توجه کنید که در سرورهای متفاوت قوانین پیش فض می‌تواند متفاوت باشد. اما قانون SSH همیشه در هر سروری ثابت است، البته توجه داشته باشید اضافه کردن قانون SSH به این معنی نیست که هر شخصی با درخواست به پورت 22 می‌تواند به سرور شما متصل شود بلکه حتما برای دسترسی به سرور باید کلید SSH مورد نظرش در سرور شما ثبت باشد، در غیر این صورت این کار اصلا امکان پذیر نیست.\r\n\r\n:::note{.danger}\r\n::title[هیچ وقت قانون SSH را حذف نکنید]\r\n\r\nهم پَچیم و هم شما با استفاده از پورت 22 به سرورتان متصل می‌شوید و اگر به هر دلیلی قانون SSH را حذف کنید این اتصال دچار مشکل می‌شود و دیگر ما در پَچیم نمی‌توانیم به سرور شما متصل شویم و شما حتما باید از طریق ارائه کننده سرور اختصاصی یا vps خود پیگیری رفع این مشکل و اضافه کردن پورت 22 به فایروال را انجام دهید.\r\n\r\nاگر دسترسی لازم به سرور خود را به هر طریقی پیدا کردید می‌توانید با دستور زیر اجازه دسترسی به پورت 22 را به فایروال خود اضافه کنید البته حتما نیاز به دسترسی `root` خواهید داشت.\r\n\r\n```shell\r\nufw allow 22\r\n```\r\n:::\r\n","path":"/servers/network"},{"meta":{"title":"قالب nginx"},"content":"\r\n# قالب Nignx \r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nدر زمان ایجاد کردن سایت برای سرور اپلیکیشن یا سرور وب شما می‌توانید نوع برنامه خود را مشخص کنید، هر کدام از برنامه‌ها دارای پیکربندی بخصوصی برای nginx هستند تا به شما کمک کنند تا سایت خود را به شکل مناسبی بالا بی‌آورید. در بین انواع مختلف برنامه‌ها یک **حالت شخصی سازی** نیز وجود دارد که به شما کمک می‌کند سایتی با مشخصه‌ای متفاوت بوجود بی‌آورید، یکی از قسمت‌های مهم آن، انتخاب قالب nginx است که می‌تواند به شما کمک کند تا سایت خود را با پیکربندی بخصوصی از nginx راه اندازی کنید. \r\n\r\nشما می‌توانید از بخش قالب nginx در پنل سرورتان قالب‌های مختلفی را ایجاد و مدیریت کنید و در زمان ایجاد کردن وبسایت از این قالب‌ها استفاده کنید.\r\n\r\n\r\n:::note{.warning}\r\n\r\n::title[قالب نامناسب Nginx باعث خرابی وبسایت]\r\n\r\nاگر در ایجاد قالب nginx دقت نکنید، یک قالب nginx می‌تواند باعث خرابی وبسایت شما شود، بنابراین با دقت بسیار زیادی از قالب‌های nginx در ایجاد وبسایت سفارشی استفاده کنید.\r\n\r\n:::\r\n## ایجاد قالب Nginx \r\n\r\nشما برای ایجاد یک قالب جدید nginx می‌توانید در صفحه مدیریت قالب nginx در پنل سرورها بر روی دکمه ایجاد قالب جدید کلیک کنید بعد از کلیک مدلی برای شما باز می‌شود که از شما درخواست یک نام و محتوای قالب را می‌کند، برای ساده‌تر کردن ایجاد قالب nginx ما محتوا قالب پیش فرض nginx را در قسمت محتوا قرار داده‌ایم و شما می‌توانید بر اساس نیاز آن را تغییر دهید.\r\n\r\n### متغیرهای قالب\r\n\r\nپَچیم چندین متغییر آماده سازی کرده تا در زمانی که شما قالب nginx خود را آماده می‌کنید و قصد استفاده از آن در سایت را دارید این متغییرها به شکل اتوماتیک مقداردهی شوند در زیر لیست این متغییرها را می‌توانید مشاهده کنید.\r\n\r\n\r\n| متغییر                  | توضیحات                                                                                                                                                |\r\n|-------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| `{{DIRECTORY}}`         | دایرکتوری قابل دسترس وب در وبسایت , برای مثال . `/public`                                                                                              |\r\n| `{{DOMAINS}}`           | این مقدار ترکیبی از دامنه اصلی و دامنه‌های مستعار است , برای مثال.<br> `roocket.ir alias.roocket.ir`                                                   |\r\n| `{{PATH}}`              | مسیر کامل قابل دسترس از طریق وب , برای مثال. `/home/pachim/roocket.ir/public`                                                                          |\r\n| `{{PORT}}`              | آی پی ورژن 4 که سایت باید به آن گوش دهد(`:80`). اگر آدرس سایت `default` باشد, مقداری که در به جای این متغییر قرار میگیرد برابر است با `default_server` |\r\n| `{{PORT_V6}}`           | آی پی ورژن 6 که سایت باید به آن گوش دهد (`[::]:80`). اگر نام سایت `default` باشد, مقداری که به جای این متغیر قرار میگیرد `default_server` است.         |\r\n| `{{PROXY_PASS}}`        | سوکت php که در سایت شما مورد استفاده قرار میگیرد, به عنوان مثال. `unix:/var/run/php/php8.0-fpm.sock`                                                   |\r\n| `{{ROOT_PATH}}`         | مسر اصلی وبسایت در سرور , به عنوان مثال . `/home/pachim/roocket.ir`                                                                                    |\r\n| `{{SERVER_PUBLIC_IP}}`  | آدرس IP عمومی سرور.                                                                                                                                    |\r\n| `{{SERVER_PRIVATE_IP}}` | آدرس IP خصوصی سرور اگر وجود داشته باشد.                                                                                                                |\r\n| `{{SITE}}`              | آدرس سایت , به عنوان مثال . `roocket.ir`. دقت کنید این مقدار با `{{DOMAINS}}` فرق دارد و تنها شامل نام دامنه اصلی سایت می‌شود.                         |\r\n| `{{SITE_ID}}`           | شناسه اصلی سایت در پَچیم , به عنوان مثال. `9777e106-001e-49d2-aed9-d29f86bceeda`                                                                       |\r\n| `{{USER}}`              | نام کاربری که سایت به آن اضافه شده است, به عنوان مثال. `pachim`                                                                                        |\r\n\r\nزمانی که از این متغییرها در قالب nginx استفاده می‌کنید، حتما مطمئن شوید که دقیقا نام آن‌ها را درست وارد کرده باشید.\r\n\r\n### مدیریت قالب‌ها\r\n\r\nشما هر زمانی که بخواهید می‌توانید قالبی از قالب‌های، که در گذشته اضافه کردید را ویرایش یا حذف کنید.  توجه داشته باشید ویرایش یا حذف یک قالب nginx هیچ تاثیری برا سایت‌های که از آن قالب استفاده کرده‌اند ندارد.\r\n","path":"/servers/nginx-templates"},{"meta":{"title":"اجازه دسترسی پکیج‌های PHP"},"content":"\r\n# اجازه دسترسی پکیج‌های PHP \r\n\r\n### جدول محتوا \r\n\r\n## بررسی اجمالی\r\n\r\nما در پَچیم سعی کرده‌ایم بهترین تجربه کار با PHP و Composer را به شما ارائه دهیم. در حال حاضر پروژه‌های PHP از پکیج‌های زیاد و مختلفی از Composer استفاده می‌کنند که گاهن بعضی از این پکیج‌ها نیاز به اجازه دسترسی دارند ما امکانی را در پَچیم به وجود آورده‌ایم که شما می‌توانید اجازه دسترسی پکیج composer را در سرور انجام دهید.\r\n\r\n### اجازه دسترسی کلی سرور\r\n\r\nComposer قابلیتی را دارد که به شما اجازه می‌دهد اگر چندین سایت را در یک نام کاربری در سیستم عامل خود ایجاد می‌کنید به شکل واحد هم بتوانید اجازه دسترسی پکیج‌های مجموعه آن سایت‌ها را برای Composer انجام دهید.\r\n\r\nیعنی اگر شما چند سایت را به سرورتان در حالت پیش فرض اضافه کنید، این چند سایت توسط کاربر پیشفرض یعنی pachim ایجاد خواهند شد و شما می‌توانید به سادگی با ذخیره سازی کردن توکن یا http-basic مربوط به پکیج خود این اعتبارنامه را برای تمام سایت‌های کاربر مورد نظر استفاده کنید. البته اگر قصد دارید اعتبارنامه‌ها را به شکل اختصاصی تری برای هر سایت استفاده کنید می‌توانید به صفحه [**پکیج‌های PHP**](/sites/php-packages) برای سایت‌ها مراجعه کنید\r\n\r\n### تغییر Auth.json برای کاربران مختلف\r\n\r\nاگر شما وبسایت‌های مختلفی را در حالت کاربر ایزوله ایجاد کرده باشید در سرور شما چند نام کاربری متفاوت وجود دارد که شما می‌توانید برای هر کدام از این نام‌های کاربری `auth.json` متفاوتی داشته باشید و آن را مدیریت کنید.\r\n\r\n## ویرایش فایل auth.json\r\n\r\nفایل auth.json همان فایل اصلی composer است که با آن اجازه دسترسی پکیج‌های شما انجام می‌شود زمانی که وارد صفحه پکیج‌های سرور شوید در ابتدا اطلاعات auth.json از سرور شما دریافت می‌شود و در نهایت شما می‌توانید با استفاده از گزینه اضافه کردن دسترسی، دسترسی مورد نظر خود را اضافه کنید و بعد از اضافه کردن نیاز است درخواست آپدیت کردن فایل مورد نظر را ارسال کنید تا تغییرات به شکل کامل ثبت شوند.\r\n\r\n:::note{.tip}\r\n\r\nتوجه کنید فایل auth.json و اطلاعات داخل آن به هیچ وجه در پَچیم ذخیره سازی نمی‌شوند و اگر به هر دلیلی از طریق ssh آن را حذف کنید مجددا باید اطلاعات مورد نظر را از طریق پنل پَچیم به auth.json اضافه کنید.\r\n\r\n:::\r\n","path":"/servers/php-packages"},{"meta":{"title":"php سرور"},"content":"\r\n# PHP\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی \r\n\r\nیکی از مواردی که در پَچیم توجه ویژه‌ای به آن داشته‌ایم موضوع نصب و مدیریت چندین ورژن از PHP به شکل همزمان بر روی سرورهای شماست. هر PHP که در سرور شما راه اندازی می‌شود FPM پردازشی خودش را دارد و شما هر زمان که مایل باشید می‌توانید از طریق پَنل پچیم [ورژن PHP سایت مورد نظر خود را آپدیت](http://sites/the-basics#ورژن-php) کنید.\r\n\r\n:::note{.danger}\r\n\r\n::title[نصب دستی PHP روی سرور]\r\n\r\nاگر شما با استفاده از SSH و به شکل دستی ورژنی از PHP را بر روی سرور خود نصب کنید، پَچیم از این موضوع مطلعه نخواهد شد و هیچ کنترلی از طریق پنل کاربری پَچیم بر روی آن ورژن از PHP نمی‌توانید داشته باشید. بنابراین پیشنهاد می‌کنیم تا زمانی که ورژنی از طرف خود پَچیم ارائه نشده آن را در روی سرور نصب نکنید.\r\n\r\n:::\r\n\r\n## چندین نسخه PHP\r\n\r\nزمانی که شما در پَچیم سروری را راه اندازی می‌کنید، اگر نوع آن سرور دارای PHP باشد در هنگام راه اندازی باید مشخص کنید کدام ورژن از PHP در راه اندازی ابتدایی به عنوان ورژن پیشفرض بر روی سرور نصب شود.\r\n\r\nبعد از راه اندازی کامل سرور با مراجعه به بخش مدیریت PHP در پنل سرور پَچیم می‌توانید در کنار اینکه ورژن فعلی نصب شده را کنترل و پیکربندی کنید، می‌توانید ورژن‌های دیگر PHP را نصب و راه اندازی کنید.\r\n\r\n### نصب ورژن جدید PHP\r\n\r\nنصب ورژن جدید PHP در پَچیم هیچ کار خاصی ندارد تنها کافیست وارد پنل PHP سرورتان شوید و بر روی دکمه نصب ورژن مورد نظر PHP کلیک کنید، بعد از آنکه پروسه نصب کامل شد، شما می‌توانید از ورژن نصب شده برای ایجاد وبسایت مورد نظر یا تغییر ورژن PHP سایت خود استفاده کنید.\r\n\r\nزمانی که ورژن جدید PHP نصب شود، پَچیم یک فایل پیکربندی PHP-FPM برای آن ورژن ایجاد می‌کند تا شما بتوانید به شکل جداگانه‌ای از ورژن‌های دیگر، تنظیمات ورژن مورد نظر PHP خود را تغییر دهید و معنی این موضوع این است که شما به سادگی می‌توانید بر روی یک سرور چندین ورژن از PHP را داشته باشید.\r\n\r\n### حذف ورژن اضافه PHP\r\n\r\nشما تنها در صورتی می‌توانید یک ورژن از PHP را حذف کنید که :\r\n\r\n- ورژن دیگری از PHP بر روی سرور شما وجود داشته باشد.\r\n- ورژن PHP مورد نظر شما بر روی سرورتان ورژن پیش فرض نباشد.\r\n- ورژن مورد نظر PHP شما ورژن پیش فرض CLI سرورتان نباشد.\r\n- ورژن مورد نظر توسط هیچ سایتی مورد استفاده قرار نگیرد.\r\n- هیچ صفی در وبسایت‌های شما از ورژن مورد نظر PHP استفاده نکند.\r\n\r\nاگر موارد بالا در مورد ورژن PHP مورد نظرتان صادق باشد، شما می‌توانید ورژن PHP خود را از سرورتان حذف کنید.\r\n\r\n:::note{.danger}\r\n\r\n::title[حذف دستی PHP]\r\n\r\nهر گونه حذف دستی توسط شما از طریق SSH از طرف پَچیم قابل پذیرش نیست و اگر بعد از حذف دستی مشکلی برای سرورتان پیش بیاید، مسئولیت آن با شماست. بنابراین لطفا تمام اقدامات مورد نظر PHP را از طریق پنل کاربری پَچیم انجام دهید.\r\n\r\n:::\r\n\r\n### PHP در ترمینال (CLI)\r\n\r\nزمانی که ورژنی از PHP در سرور شما نصب می‌شود همیشه می‌توانید با استفاده از ترمینال و دسترسی SSH از آن بر روی سرور خود استفاده کنید تنها کایست به شکل باینری آن را صدا بزنید یعنی `phpx.x` و بجای `x.x` ورژن مورد نظر خود را قرار دهید (برای مثال اگر ورژن 8.1 پی اچ پی را نصب دارید تنها کافیست در ترمینال `php8.1 -v` را اجرا کنید تا بببینید بدون مشکل برای شما قابل دسترس است)\r\n\r\nالبته شما می‌توانید یک ورژن پیشفرض برای CLI نیز داشته باشید، تنها کافیست از پنل سرور پَچیم یکی از ورژن‌های نصب شده PHP را به عنوان پیشفرض CLI انتخاب کنید. بعد از آن بدون وارد کردن ورژن باینری php و تنها با اجرای دستور php -v میبینید که ورژنی که به عنوان پیش فرض انتخاب شده در دسترس قرار میگیرد.\r\n### نصب PHP پیشفرض \r\n\r\nورژن پیشفرض PHP برای زمانی است که شما تصمیم دارید سایتی به سرورتان اضافه کنید و با انتخاب یک ورژن از PHP به عنوان ورژن پیشفرض در هنگام ایجاد سایت آن ورژن برای سایت شما انتخاب می‌شود البته شما توانایی تغییر آن را خواهید داشت.\r\n\r\nتوجه کنید تغییر ورژن پیشفرض PHP، ورژن وبسایت‌های که از قبل با ورژن پیشفرض ایجاد شده‌اند را تغییر نمی‌دهد و تغییر تنها برای سایت‌های جدید خواهد بود. \r\n\r\n### آپدیت ورژن PHP با نصب Patch\r\n\r\nزمانی که شما ورژنی از PHP را بر روی سرور خود نصب می‌کنید ممکن است هر زمانی برای آن ورژن آپدیتی منتشر شود تا باگ‌های مختلف آن ورژن را مرتفع کند.\r\n\r\nاین آپدیت به شکل اتوماتیک بر روی سروتان انجام نمی‌شود در این زمان شما می‌توانید از دکمه‌ای با عنوان **پچ کردن** برای آپدیت ورژن مورد نظر PHP خود استفاده کنید تا به سادگی باگ‌های مورد نظر برطرف شوند استفاده کنید.\r\n\r\n### نسخه‌های بتا PHP و شرایط انتشار \r\n\r\nدر پَچیم گاهی اوقات ورژن‌های از PHP که در حالت **بتا** یا حالت **کاندیدای نسخه نهایی** قرار دارند چند هفته قبل از انتشار نهایی PHP برای استفاده در سرور در اختیار شما قرار میگیرند تا با استفاده از آن‌ها بتوانید وبسایت‌های خود را در ورژن جدید PHP تست کنید. \r\n\r\nالبته دقت کنید در این ورژن ممکن است بعضی از موارد به درستی کار نکنند یا بعضی از کانفیگ‌ها برای این ورژن در دسترس قرار نگیرد اما بعد از انتشار ورژن نهایی شما باید یکبار ورژن مورد نظر را از طریق پنل PHP کاملا حذف و مجددا آن را نصب کنید.\r\n\r\n## پیکربندی تنظیمات متداول PHP\r\n\r\nزمانی که وارد صفحه مدیریت PHP سرور در پَچیم می‌شوید در همان بالای صفحه با مواردی همچون :\r\n\r\n- حداکثر حجم آپلود\r\n- حداکثر زمان اجرا شدن کد\r\n- Opcache\r\n\r\nمواجه می‌شوید که جز موارد مهم PHP هستند و از آن بخش می‌توانید آن‌ها را کنترل کنید.\r\n\r\n\r\n:::note{.danger}\r\n\r\n::title[تغییر پیکربندی تنظیمات]\r\n\r\nتغییر تنظیمات عنوان‌های زیر در همه ورژن‌های PHP انجام می‌شود و مختص به ورژن خاصی نخواهد بود پس در تعیین این موارد دقت کنید.\r\n\r\n:::\r\n\r\n\r\n### حداکثر حجم آپلود\r\n\r\nاین عدد مقدار حجمی است که توسط PHP می‌تواند بر روی سرور آپلود شود. توجه داشته باشید که عدد مورد نظر در قالب مگابایت ثبت می‌شود. برای مثال برای 1 گیگ باید مقدار 1024 را ثبت کنید.\r\n\r\n### حداکثر زمان اجرا شدن کد PHP\r\n\r\nاین مقدار حداکثر زمانی است که کدهای شما توسط php میتواند در حالت اجرا باشد و اگر بیشتر از آن طول بکشد php به شما ارور بر می‌گرداند. عددی که در تنظیمات آن را وارد می‌کنید به شکل ثانیه مورد استفاده قرار می‌گیرد.\r\n\r\n### کش PHP با Opcache\r\n\r\nابزار Opcache کدهای PHP پروژه شما را کامپایل می‌کند و در RAM سرور شما قرار می‌دهد اینکار باعث افزایش چشمگیر سرعت اجرا کدهای شما خواهد شود مخصوصا اگر وبسایت شما دارای بازدید زیادی باشد، این تنظیم می‌تواند تاثیر زیادی را در بهینه سازی سایت شما داشته باشد.\r\n\r\n\r\n:::note{.danger}\r\n\r\n::title[نکته بسیار مهم]\r\n\r\nتوجه کنید که اگر قابلیت Opcache را برای سرور خود فعال کردید، کدهای PHP شما کش می‌شوند و اگر شما تغییری در کدهای خود به شکل مستقیم بوجود آوردید، تا زمانی که کش کدهای شما وجود داشته باشد، نمیتوانید تغییری را مشاهده کنید.\r\n\r\nاگر از اسکریپت استقرار در پَچیم استفاده می‌کنید حتما باید کد مربوط به [`ریست کردن opcache`](/servers/help-instructions#ریست-کردن-fpm-و-opcache) را در اسکریپت استقرار قرار دهید یا اگر قصد دارید به شکل دستی این کار را انجام بدید بخش [`ریست کردن opcache`](/servers/help-instructions#ریست-کردن-fpm-و-opcache) را مطالعه کنید\r\n\r\n:::\r\n","path":"/servers/php"},{"meta":{"title":"تهیه سرور"},"content":"\r\n# تهیه سرور \r\n\r\n### جدول محتوا \r\n\r\n## خرید سرور مستقیما از پَچیم \r\n\r\nدر حال حاضر پَچیم به شکل مستقیم سروری را برای فروش ارائه نمی‌دهد و در حال حاضر آینده‌ این موضوع در پَچیم مشخص نیست، ما در پَچیم قصد داریم تمام تمرکز خود را بر روی راه‌حل‌های نرم افزاری مدیریت سرور بگذاریم تا شما بتوانید بهترین تجربه مدیریت سرور‌های خود را تجربه کنید.\r\n\r\n## تهیه سرور از طرف خودتان \r\n \r\nدر پَچیم فرقی ندارد شما از کجا و چه ارائه کننده سرور اختصاصی یا vps مجازی استفاده می‌کنید. تنها مواردی که در تهیه سرور باید رعایت کنید حداقل منابع روی سرور شماست که به شرح زیر است:\r\n\r\n- سرور شما **باید** **یک نسخه تازه** از ubunut ورژن 20.04 یا 22.04 x64 داشته باشد.\r\n- سرور شما **باید** دسترسی به اینترنت داشته باشد\r\n- دسترسی به کاربر `root` از طریق SSH **باید** فعال باشد\r\n- سرور مورد نظر **حداقل** **باید** دارای : 1 پردازنده با باند 1GHz و 1 گیگ RAM و ۱۰ گیگ فضای ذخیره سازی باشد.  \r\n- سرور **باید** curl را به شکل پیشفرض به شکل فعال داشته باشد.\r\n\r\nاگر سروری که تهیه کردید دسترسی به SSH را بر اساس IP محدود کرده است لطفا بخش [آدرس IPهای پَچیم](/getting-started/introduction#آدرس-ipهای-پَچیم) را مطالعه کنید.\r\n\r\nاگر شما در حال محافظت کردن از شبکه داخلی خود با استفاده از NAT هستید در زمان ایجاد کردن سرور باید روی گزینه Nat کلیک کنید و پورت مربوط به NAT را در فیلد پورت Nat وارد کنید با اینکار پروت NAT در ufw سرور شما قرار میگیرد و پَچیم برای ارتباط با سرور شما از این پورت استفاده خواهد کرد.\r\n","path":"/servers/providers"},{"meta":{"title":"دستورالعمل‌های پَچیم"},"content":"\r\n# دستور العمل‌ها\r\n\r\n### جدول محتوا\r\n\r\n\r\n## بررسی اجمالی\r\n\r\nبخش دستورالعمل‌ها به شما کمک می‌کند، دستورات سیستمی که به شکل متداول بر روی سرورها استفاده می‌کنید را در پَچیم ذخیره‌سازی کنید و هر زمانی که نیاز به اجرای آن‌ها داشتید بدون متصل شدن به سرور (از طریق SSH) این دستورها را بر روی سرور خود به شکل مستقیم از طریق پنل کاربری پَچیم اجرا کنید.\r\n\r\n## انواع دستورالعمل‌ها\r\n\r\nما در پَچیم دو نوع دستورالعمل داریم، یک دستورالعمل‌های که توسط شما ایجاد‌ می‌شود و شما می‌توانید آن‌ها را کاملا مدیریت کنید و دوم دستورالعمل‌های که توسط ما برای شما آماد‌ه‌سازی شده تا بتوانید خیلی راحت و بدون نیاز به جستجو اقداماتی را بر روی سرور خود انجام دهید.\r\n\r\n### دستورالعمل‌های سیستمی\r\n\r\nاین دستورات از پیش توسط ما در پَچیم برای شما آماده‌‌سازی می‌شود و شما می‌توانید از طریق [پنل دستورالعمل‌های سیستمی](https://app.pachim.sh/recipes/prepared) در پنل‌ کاربری پَچیم به آن‌ها دسترسی پیدا کنید. در طی زمان ممکن است به تعداد این دستورات اضافه یا کاسته شود.\r\n\r\nتوجه کنید که شما قادر نیستید هیچ کدام از دستورالعمل‌های سیستمی را حذف یا اضافه کنید و مدیریت آن‌ها مستقیما از طرف پَچیم انجام می‌شود.\r\n\r\n### دستورالعمل‌های سفارشی\r\n\r\nشما با ورود به بخش [دستورالعمل‌ها](https://app.pachim.sh/recipes) از طریق پنل پَچیم می‌توانید در بخش دستورالعمل‌های سفارشی، به هر تعدادی که مورد نظر خودتان هست دستورات مختلفی را ذخیره‌سازی کنید تا در زمان مورد نیاز از آن‌ها برای انجام اقداماتی بر روی سرور خود استفاده کنید.\r\n\r\nویژگی خوبی که در بخش دستورالعمل‌ها برای شما آماده کردیم، این است که شما می‌توانید بعد از آماده‌سازی دستور سفارشی خود آن را بر روی هر تعداد سروری که در پَچیم دارید به شکل همزمان اجرا کنید.\r\n\r\n## ایجاد دستور سفارشی\r\n\r\nبا ورود به [پنل دستورالعمل‌های سفارشی](https://app.pachim.sh/recipes) در پَچیم خیلی راحت **دکمه دستور جدید** را می‌توانید مشاهده کنید، با کلیک بر روی آن تنها نیاز است :\r\n\r\n- یک نام برای دستور خود مشخص کنید\r\n- یک توضیح کوتاه از کاری که اسکریپت شما انجام می‌دهد وارد کنید\r\n- کاربر سیستمی که این دستور بر روی آن اجرا شود را مشخص کنید\r\n- اسکریپت مربوط خود را در قسمت اسکریپت وارد کنید\r\n\r\n### متغیرها \r\n\r\nما در پَچیم چند متغیر از سرورهای شما را آماده‌سازی کرده‌ایم تا به شما کمک کنیم انعطاف پذیری دستورالعمل خود را در هنگام اجرا بالا ببرید، شما می‌توانید از مقادیر زیر آزادانه در اسکریپت دستورالعمل خود بهره ببرید.\r\n\r\n| کلیدها                     | توضیحات                                                        |\r\n|----------------------------|----------------------------------------------------------------|\r\n| `{{server_id}}`          | آی دی سروری که دستورالعمل مورد نظرتان بروی آن در حال اجرا است. |\r\n| `{{server_name}}`        | نام سروری که دستورالعمل مورد نظرتان بر روی آن در حال اجرا است. |\r\n| `{{ip_address}}`         | آی پی عمومی سرور شما.                                          |\r\n| `{{private_ip_address}}` | آی پی خصوصی سرور شما.                                          |\r\n| `{{username}}`           | نام کاربری که دستورالعمل بر روی آن در حال اجرا شدن است.        |\r\n| `{{server_type}}`        | نوع سرور مورد نظرتان.                                          |\r\n\r\nانواع سرورها به شکل زیر است که شما می‌توانید از آن استفاده کنید در بخش [انواع سرورها](/servers/types) هر کدام آن‌ها را توضیح داده‌ایم:\r\n\r\n- **app_server :** همان سرور اپلیکیشن \r\n- **web_server :** سرور وب\r\n- **worker_server :** سرور کارگر\r\n- **database_server :** سرور دیتابیس\r\n- **cache_server :** سرور کش\r\n- **load_balancer_server :** سرور توزیع بار\r\n\r\n## اجرای دستورالعمل‌ها\r\n\r\nشما هر زمانی که مایل باشید می‌توانید از بخش دستورالعمل‌ها در پنل کاربری پَچیم بر روی دکمه‌ای اجرا دستورالعمل کلیک کنید و با انتخاب سرورهای که قصد اجرای آن دستورالعمل بر روی آن‌ها را دارید به سادگی دستورالعمل خود را مورد اجرا قرار دهید.\r\n\r\nبعد از پایان اجرای دستورالعمل بر روی هر سرور یک گزارش به ایمیل شما ارسال می‌شود و همچنین شما می‌توانید از قسمت رویدادهای مربوط به سرور خود خروجی اجرای آن دستورالعمل را نیز مشاهده کنید.\r\n","path":"/servers/recipes"},{"meta":{"title":"دسترسی root و امنیت"},"content":"\r\n# دسترسی Root و امنیت سرور \r\n\r\n### جدول محتوا\r\n\r\n## راه‌اندازی سرور\r\n\r\nبرای راه‌اندازی سرور توسط سیستم پَچیم نیاز به دسترسی `root` در سیستم مورد نظر است دلیل اینکار نصب و راه اندازی پکیج‌های ضروری برای سیستم عامل است و شما حتما باید دسترسی `root` سیستم عامل خود را داشته باشید.\r\n\r\n## بعد از راه اندازی سرور \r\n\r\nبعد از راه اندازی کامل سرور، پَچیم کماکان از دسترسی root سررو شما برای مدیریت پکیج‌ها و سرویس‌ها و پیکربندی‌های نصب شده روی سرور استفاده‌ می‌کند. برای مثال دسترسی root برای موارد زیر ضروریست :\r\n\r\n- مدیریت فایروال سرور\r\n- مدیریت سرپرست (supervisor)\r\n- زمان‌بندی کردن کارها\r\n- ایجاد کاربر ایزوله\r\n- پیکربندی و مدیریت ورژن‌های PHP\r\n- و موارد بسیار زیادی دیگر\r\n\r\n## امنیت \r\n\r\nمسئله امنیت برای ما در پَچیم بسیار بسیار بسیار مهم است و ما این موضوع را بشدت جدی می‌گیریم و هر کاری برای حفاظت از اطلاعات کاربرانمان نیاز باشد انجام می‌دهیم تا امنیت آن‌ها را حفظ کنیم.\r\n\r\nکارهای که در لیست زیر توضیح می‌دهیم تنها بخشی از کارهای است که برای حفظ امنیت سرورهای شما انجام می‌دهیم:\r\n\r\n- پَچیم برای ارتباط با هر سرور یک کلید اختصاصی SSH ایجاد می‌کند.\r\n- ورود به سرور با پسورد در همان راه اندازی ابتدایی سرور غیرفعال می‌شود.\r\n- پسورد‌های ایجاد شده در پَچیم برای هر سرور کاملا متفاوت است\r\n- تمام پورت‌های ورودی سرور توسط UFW بلاک می‌شوند، UFW یک فایروال برای ubuntu است. البته پورت‌های 22 (SSH) و 80 (HTTP) و 443 (HTTPS) باز هستند.\r\n- آپدیت‌های امنیتی ubuntu با استفاده از پَچیم در سرور شما به شکل اتوماتیک انجام می‌شوند\r\n\r\n\r\n##  بروزرسانی اتوماتیک امنیتی \r\n\r\nآپدیت‌های امنیتی مربوط به سرور شما به شکل هفتگی و اتوماتیک بر روی سرور شما انجام می‌شوند، این‌ آپدیت‌ها از آن جهت مهم هستند که امنیت سیستم عامل شما را بالا نگه می‌دارند.\r\n\r\nالبته بعضی از موارد در سرور شما به شکل اتوماتیک آپدیت نمی‌شوند، مواردی مانند PHP و Mysql و ... و دلیل این موضوع این است که آپدیت خودکار این موارد می‌تواند باعث از کار افتادن موقتی یا دائمی برنامه شما شوند و دلیل این موضوع این است که کدهای برنامه شما ممکن است با ورژن‌های جدید‌تر این موارد هماهنگ نباشد.\r\n\r\nما در رابط کاربری پَچیم قابلیت‌های مختلفی برای آپدیت کردن این موارد آماده سازی کرده‌ایم برای مثال بخش PHP هر سرور به شما کمک می‌کند ورژن جدیدتر PHP را نصب کنید یا درخواست نصب Patch یکی از ورژن‌های نصب شده PHP را اجرا کنید.\r\n","path":"/servers/root-access-and-security"},{"meta":{"title":"زمانبندی (Scheduler)"},"content":"\r\n# زمانبدی (Scheduler)\r\n\r\n### جدول محتوا\r\n\r\n## کارهای زمانبدی شده\r\n\r\nهمانطور که از عنوان هم مشخص است شما با استفاده از ویژگی زمانبدی می‌توانید دستورات ترمینالی را در بازه‌های زمانی مختلف بر روی سرور خود اجرا کنید.  مدیریت کردن این بخش بسیار ساده‌ است، انقدر ساده که نیاز به توضیح خاصی ندارد، با این حال بخش‌های از آن را به شما توضیح خواهیم داد.\r\n\r\nزمانی که وارد صفحه زمانبدی یک سرور شوید می‌توانید لینک کارهای زمان بندی را مشاهده کنید و اگر نیاز به اضافه کردن کار زمانبندی شده ای دارید می‌توانید بر روی دکمه اضافه کردن کار زمابندی کلیک کنید.\r\n\r\nبرای ایجاد هر کار زمانبندی شده نیاز به موارد زیر دارید :\r\n\r\n1- **دستوری که قصد اجرای آن را دارید**، برای مثال در یک پروژه لاراولی ما قصد اجرا دستور `php /home/pachim/roocket.ir/artisan schedule:run` را داریم.\r\n\r\n 2- کاربری که قصد اجرای دستور با آن را داریم.\r\n\r\n3- .بازه زمانی که این دستور باید اجرا شود و شما می‌توانید با قوانین cron بر اساس نیاز خود این بازه زمانی را مشخص کنید.\r\n\r\n\r\n:::note{.warning}\r\n\r\n::title[آیا کار زمانبدی شده شما اجرا نمی‌شود؟]\r\n\r\nدر صورت اینکه، کار زمانبندی شده شما اجرا نمی‌شود، لاگ خروجی آن زمانبندی در پنل پَچیم را مشاهده کنید. معمولا دلیل اجرا نشدن زمانبدی، `درست وارد نکردن دستور مورد نظر است`.\r\n\r\n:::\r\n### کارهای زمانبدی شده لاراول \r\n\r\nاگر شما یک وبسایت لاراولی را ایجاد کرده‌اید و قصد دارید از ویژگی [زمانبدی لاراول](https://laravel.com/docs/scheduling) استفاده کنید. باید در بخش زمانبندی سرور یک زمانبدی جدید بسازید و دستور `schedule:run` را در مسیر پروژه خود هر یک دقیقه یکبار اجرا کنید.\r\n\r\nبرای مثال باید این زمان بندی را بسازید، `php /home/pachim/roocket.ir/artisan schedule:run` ، بخش مهم این دستور قسمت `/home/pachim/roocket.ir` است. اگر از کاربر ایزوله استفاده می‌کنید به جای pachim نام کاربری آن را قرار دهید و بجای roocket.ir نیز آدرس دامنه‌ (که معمولا آدرس دایرکتوری اصلی پروژه است)  را وارد کنید.\r\n\r\nتوجه کنید که فایل `artisan` کجا قرار دارد. اگر در روت اصلی پروژه است که هیچ، اما اگر در مسیر دیگری از پروژه قرار دارد در ادامه آدرس بالا باید مسیر فایل artisan را نیز مشخص کنید.\r\n\r\n### کارهای زمان‌بندی شده پیش فرض\r\n\r\nدر زمان راه اندازی سرور، ما بر اساس نوع سرور چندین زمان‌بندی را به سرور شما اضافه می‌کنیم\r\n\r\n- `composer self-update` (آخر شب)\r\n- دستور آپگرید کرد npm در صورت وجود در سرور (به شکل هفتگی)\r\n- پاکسازی پکیج‌های ابونتو (به شکل هفتگی)\r\n","path":"/servers/scheduler"},{"meta":{"title":"کلیدهای SSH / دسترسی Git"},"content":"\r\n# کلیدهای SSH / دسترسی Git\r\n\r\n### جدول محتوا\r\n\r\n## کلیدهای SSH پروفایل\r\n\r\nوقتی شما یک سرور جدید راه اندازی می‌کنید، پَچیم به شکل خودکار کلید‌های SSH که در بخش کلیدهای SSH حساب کاربری قرار دارد. اگر مایل هستید بیشتر در این رابطه بدانید پیشنهاد می‌کنیم صفحه مستندات [کلید‌های SSH حساب کاربری](/accounts/ssh#معرفی) را مطالعه کنید.\r\n\r\n## مدیریت کلیدهای SSH سرور \r\n\r\nجدا از کلید‌های SSH پروفایل، شما می‌توانید به صورت جداگانه برای هر سرور کلید‌های مختلفی را اضافه و یا حذف کنید برای انجام اینکار تنها کافیست وارد پنل پَچیم و صفحه SSH سرور مورد نظر شوید و لیست کلید‌های SSH مربوط به سرور را مدیریت کنید.\r\n\r\n## کلید SSH سرور / دسترسی Git پروژه\r\n\r\nزمانی که سرور شما به شکل کامل توسط پَچیم راه اندازی شد، پَچیم یک کلید اختصاصی SSH برای سروتان ایجاد می‌کند. این کلید در مسیر `~/.ssh/id_rsa` ذخیره می‌شود و کلید عمومی آن نیز در مسیر `~/.ssh/id_rsa.pub` قرار میگیرد. \r\n\r\nاین کلید از آن جهت برای شما مهم است که با استفاده از آن می‌تواند از طریق مخزن‌های Git پروژه‌های مختلف خود را روی سرور قرار دهید، برای اینکار تنها کافیست که کلید عمومی سرور خود را در لیست SSH اکانتی که پروژه‌های Git شما در آن قرار دارد، اضافه کنید و بعد از آن بدون هیچ مشکلی می‌توانید پروژه‌های Git خود را بر روی سرور قرار دهید.\r\n\r\n:::note{.tip}\r\n::title[اضافه کردن کلید SSH به مخزن Git]\r\n\r\nاگر از قبل اکانت‌های git خود را به پَچیم متصل کرده باشید و در زمان ایجاد کردن سرور گزینه `کلید SSH این سرور بعد از ساخت به تمام مخزن های کد اضافه شود` را فعال کنید بدون هیچ کار اضافه‌ای کلید سرور جدید شما به مخزن‌های Git شما اضافه خواهد شد. \r\n\r\nدر غیر این صورت اگر خواهان انجام اینکار نیستید این گزینه را غیرفعال کنید.\r\n:::\r\n## کلید Deploy\r\n\r\nگاهی ممکن شما نخواهد که سرور شما به همه مخزن‌های گیت شما در گیت لب یا گیت‌هاب دسترسی داشته باشد، برای چنین موقعیتی ویژگی با عنوان کلید Deploy به پَچیم اضافه کرده‌ایم که دقیقا برای چنین مواقعی مورد استفاده قرار میگیرد که در زیر آن را به شما توضیح خواهیم داد.\r\n\r\nدر وبسایت‌های گیت‌لب و گیت‌هاب و در هر صفحه از repository های شما تنظیماتی وجود دارد با عنوان deploy keys با وارد شدن به این بخش می‌توانید کلید deploy اختصاصی خود را به مخزن‌تان اضافه کنید. حالا این کلید Deploy چیست و از چه بخشی از پَچیم باید آن را بسازید؟\r\n\r\nبعد از اضافه کردن یک سایت به سرور، زمانی که وارد صفحه اپلیکیشن می‌شوید می‌بینید که می‌توانید برای نصب اپلیکیشن کلید deploy را فعال کنید، در صورت فعال سازی شما می‌توانید کلید deploy را هم در صفحه اضافه کردن اپلیکیشن مشاهده کنید و هم در صفحه تنظیمات سایت مورد نظر خود. بعد از ایجاد این کلید شما باید آن را به قسمت کلید‌های deploy مخزن خود اضافه کنید.\r\n\r\n\r\n:::note{.warning}\r\nاگر این گزینه کلید Deploy را فعال کنید یک کلید اختصاصی برای سایت شما ایجاد می‌شود و از آن به بعد تا زمانی که شما آن را غیر فعال کنید برای نصب هر اپلیکیشنی در سایت مورد نظر باید از این کلید Deploy استفاده کنید و کلید سرور شما حتی اگر به مخزن گیت شما اضافه هم شده باشد دسترسی لازم را نخواهد داشت .\r\n:::\r\n","path":"/servers/ssh"},{"meta":{"title":"سرپرست"},"content":"\r\n# در مورد سرپرست \r\n\r\n### جدول محتوا \r\n\r\n## بررسی اجمالی \r\n\r\nسرپرست یا همان (Supervisor) به شما این امکان را می‌دهد تا اسکریپت یا برنامه‌ای را برای مدت زمان طولانی در حالت اجرا نگه دارید. برای مثال شما قصد دارید برنامه Node.js خود را که بر روی وبسایتتان قرار دادید را برای همیشه اجرا کنید و اگر هم زمانی، به هر دلیل دستور از حالت اجرا خارج شد، مجددا به حالت اجرا برگردد. در اینجا سرپرست دقیقا چنین کاری انجام می‌دهد و برنامه‌های شما را همیشه در حالت اجرا نگه می‌دارید.\r\n\r\n## پیکربندی کردن سرپرست\r\n\r\nشما می‌توانید از طریق پنل سرور و بخش سرپرست اقدام به ایجاد سرپرست جدیدی برای سرور خود کنید. برای ایجاد هر سرپرست اطلاعاتی لازم است که این اطلاعات به شرح زیر هستند:\r\n\r\n- **دستور** : دستوری که همیشه باید در حالت اجرا بماند، برای مثال دستور `php artisan websockets:serve`\r\n- **کاربر** : کاربر سیستم عامل شما که باید کد وارد شده را برای همیشه در حالت اجرا نگه دارید. به عنوان پیش فرض مقدار `pachim` مورد استفاده قرار میگیرد.\r\n- **دایرکتوری** : مسیری که کد مورد نظر در آن باید اجرا شود، شما می‌توانید این گزینه را خالی بگدارید تا مقدار پیش فرض اعمال شود.\r\n- **تعداد پردازنده‌ها** : برای زمانی است که نیاز دارید مشخص کنید دقیقا چه تعداد پردازنده باید در حالت اجرا باشند.\r\n- **ثانیه شروع** : تعداد کل ثانیه هایی که برنامه باید در حال اجرا بماند تا شروع موفقیت آمیز در نظر گرفته شود\r\n- **ثانیه پایان** : تعداد ثانیه هایی که باید منتظر ماند تا سیستم عامل یک SIGCHLD را به Supervisor پس از ارسال سیگنال توقف به برنامه بازگرداند.\r\n- **سگنال توقف** : سیگنالی که برای از بین بردن برنامه هنگام درخواست توقف استفاده می شود. \r\n## فایل لاگ\r\n\r\nبرای خواندن خروجی و نتیجه سرپرست‌های در حال اجرا، شما می‌توانید از طریق پنل پَچیم و قسمت سرپرست‌ها بر روی گزینه بیشتر سرپرست مورد نظر کلیک کنید و بر روی گزینه مشاهده خروجی سرپرست بزنید تا خروجی آن سرپرست به شما نمایش داده شود.\r\n","path":"/servers/supervisor"},{"meta":{"title":"انواع سرورها"},"content":"\r\n# انواع سرورها \r\n\r\n### جدول محتوا \r\n\r\n## معرفی \r\n\r\nما در پَچیم اعتقاد داریم که همه چیز همه جا‌، نیاز نیست به این معنی که اگر شما خواهان راه اندازی تنها یک سرور دیتابیس هستید، چرا باید در آن سرور Nginx و PHP برای شما نصب شود؟ برای همین ما سرورهای خود را به انواع مختلفی دسته‌بندی کردیم که به شرح زیر است.\r\n\r\n- سرور اپلیکیشن\r\n- سرور وب\r\n- سرور کارگر\r\n- سرور دیتابیس\r\n- سرور کش\r\n- سرور توزیع بار\r\n- سرور Meilisearch\r\n\r\nدر زیر به تفضیل در مورد هر کدام از این نوع از سرورها صحبت می‌کنیم و برای شما آن‌ها را توضیح خواهیم داد.\r\n\r\n## انواع سرورها \r\nدر زیر یک نمای کلی از انواع سرورها و مواردی که پشتیبانی می‌کنند را در قالب یک جدول می‌توانید مشاهده کنید.\r\n\r\n<table>\r\n    <thead>\r\n        <tr>\r\n            <th>نوع</th>\r\n            <th>Nginx</th>\r\n            <th>PHP</th>\r\n            <th>MySQL / Postgres / MariaDB</th>\r\n            <th>Redis, Memcached</th>\r\n            <th>Node.js</th>\r\n            <th>MeiliSearch</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td scope=\"col\">سرور اپلیکیشن</td>\r\n            <td align=\"middle\">✅</td>\r\n            <td align=\"middle\">✅</td>\r\n            <td align=\"middle\">✅</td>\r\n            <td align=\"middle\">✅</td>\r\n            <td align=\"middle\">✅</td>\r\n            <td align=\"middle\"></td>\r\n        </tr>\r\n        <tr>\r\n            <td scope=\"col\">سرور وب</td>\r\n            <td align=\"middle\">✅</td>\r\n            <td align=\"middle\">✅</td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\">✅</td>\r\n            <td align=\"middle\"></td>\r\n        </tr>\r\n        <tr>\r\n            <td scope=\"col\">سرور دیتابیس</td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\">✅</td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\"></td>\r\n        </tr>\r\n        <tr>\r\n            <td scope=\"col\">سرور کش</td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\">✅</td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\"></td>\r\n        </tr>\r\n        <tr>\r\n            <td scope=\"col\">سرور کارگر</td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\">✅</td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\"></td>\r\n        </tr>\r\n        <tr>\r\n            <td scope=\"col\"> سرور MeiliSearch</td>\r\n            <td align=\"middle\">✅</td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\">✅</td>\r\n        </tr>\r\n        <tr>\r\n            <td scope=\"col\">سرور توزیع بار</td>\r\n            <td align=\"middle\">✅</td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\"></td>\r\n            <td align=\"middle\"></td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n### سرور اپلیکیشن \r\n\r\nسرور اپلیکیشن کامل‌ترین نوع سرور در بین سرورهای دیگر است و با این دید طراحی شده تا شما بتوانید انواع وبسایت‌ها با Stackهای مختلف از PHP/Laravel تا Nodejs و ... را با آن اه اندازی کنید.\r\n\r\nبا انتخاب این سرور بخشی از مواردی که در این نوع سرور نصب می‌شود به شرح زیر خواهد بود:\r\n\r\n- PHP\r\n- Nginx\r\n- MySQL/MariaDB/Postgres\r\n- Redis/Memcached\r\n- Node.js\r\n- Supervisor\r\n\r\nسرور اپلیکیشن از جمله پر استفاده‌ترین سرورهای پَچیم محسوب می‌شوند و اگر شما مطمئن نیستید که برای وبسایت‌های خود چه نوع سروری نیاز دارید پیشنهاد می‌کنیم که این نوع سرور را انتخاب کنید.\r\n\r\n البته زمانی که قصد دارید پروژه مقیاس پذیری ایجاد کند آنجا باید مجموعه‌ای از سرورها را برای پروژه خود انتخاب کنید. برای مثال سرور دیتابیس جدا، سرور کش جدا، سرور Meilisearch جدا و برای هر سرور یک Vps یا سرور اختصاصی تهیه کنید.\r\n\r\n:::note{.tip}\r\n\r\nدر دوره آموزش ویدیو [راه اندازی سرور و سایت با Pachim](https://roocket.ir/series/server-managment-with-pachim) در مورد این موارد کامل صحبت کرده‌ایم و بهترین انتخاب‌ها را به شما توضیح داده‌ایم.\r\n\r\n\r\n:::\r\n\r\n### سرور وب \r\n\r\nسرور وب اولین قدم برای ایجاد یک پروژه مقایس پذیر است، زمانی که شما تصمیم میگیرید پروژه خود را مقیاس پذیر کنید، دیگر نیاز نیست که سرور اپلیکیشن نصب کنید. شما می‌توانید برای مدیریت در خواست وب خود یک سرور وب تنها ایجاد کنید تا اپلیکیشن PHP/Laravel یا Nodejs یا ... را با آن بالا بی آورید و برای دیتابیس و کش سرورهای دیگری را تهیه کنید و در یک شبکه آن‌ها را به هم متصل کنید.\r\n\r\nسرور وب برای مدیریت کردن درخواست‌های Http اپلیکیشن شما مورد استفاده قرار میگیرد و موارد زیر در آن نصب خواهد شد.\r\n\r\n- Nginx\r\n- PHP\r\n- Node.js\r\n- Supervisor\r\n\r\n### سرور دیتابیس\r\n\r\nما در پَچیم این قابلیت را برایتان بوجود آورده‌ایم تا در کنار دیتابیس Mysql/MariaDB بتوانید Postgres را هم نصب و راه اندازی کنید البته که پیشنهاد ما این است که بر روی هر سرور تنها آن موردی که نیاز دارید را نصب و راه اندازی کنید.\r\n\r\nسرور دیتابیس هماهنطور که از نامش مشخص است، تنها برای راه اندازی دیتابیس مورد استفاده قرار میگیرد و زمانی که پروژه شما یک پروژه مقایس پذیر باشد به شدت نیاز دارید که سرور دیتابیس و سرور وب خود را از هم جدا کنید که با این نوع سرور تنها دیتابیس بر روی سرور شما نصب خواهد شد و هیچ Nginx برای درخواست‌های وب در آن وجود ندارد.\r\n\r\nبرای ارتباط این نوع سرور با سرورهای وب می‌توانید بخش [مدیریت شبکه سرورها](/servers/network) را مطالعه کنید تا یادبگیرید چطور سرورها را به همدیگر متصل کنید تا به سادگی بتواند یک شبکه مقایس پذیر ایجاد کرد.\r\n\r\nبر روی این سرور تنها موارد زیر نصب خواهند شد:\r\n\r\n- Mysql/MariaDB\r\n- Postgres\r\n\r\n### سرور کش\r\n\r\nهمانطور که از عنوان هم مشخص است، سرور کش برای زمانی است که شما قصد دارید یک پروژه مقایس پذیر ایجاد کنید و سرور کش خود را جداگانه راه اندازی کنید. که برای ارتباط این سرور با سرورهای دیگر حتما بخش [مدیریت شبکه سرورها](/servers/network) را مطالعه کنید.\r\n\r\nبا راه اندازی این سرور موارد زیر در سرور نصب خواهند شد:\r\n\r\n- Redis\r\n- Memcached\r\n\r\n### سرور کارگر\r\n\r\n**چرا ما سروری با عنوان سرور کارگر ایجاد کرده‌ایم؟** اجازه دهید با چند سناریو این مورد را به شما توضیح دهیم \r\n\r\n**سناریو اول :** اگر ما پَچیم را یک پروژه مقایس پذیر در نظر بگیریم، عملیاتی را در پَچیم داریم که در قالب صف‌های مختلف پردازش می‌شوند و ممکن است این صف‌ها به حدی سنگین شوند که ما نیاز داشته باشیم چندین صف ایجاد کنیم اما اگر این صف را در سرور اصلی قرار دهیم بخاطر محدودیت منابع می‌تواند مشکل ساز شود برای همین سرور جداگانه ای ایجاد می‌کنیم تا تنها مدیریت صف‌ها و کارهای پردازشی پروژه ما را انجام دهد. سرور کارگر دقیقا برای این مورد ایجاد شده است.\r\n\r\n**سناریو دیگر :** در پروژه [وبسایت آموزش راکت](https://roocket.ir/) سرورهای اصلی در ایران قرار دارد اما یک سری کارهای پردازشی وجود دارد که حتما نیاز است سرور مورد نظر در خارج ازش کشور قرار بگیرد تا برنامه ما بتواند به شکل کامل کار کند. \r\n\r\nبرای مثال ارتباط بر قرار کردن با ربات تلگرام . بجای آنکه ما کل سرورهای خود را به خارج کشور منتقل کنیم تا بتوانیم تنها از سرویس تلگرام استفاده کنیم. یک سرور کارگر در خارج از کشور تهیه میکنیم تا تنها صف پردازشی پیام‌های تلگرام را بر عهده بگیرد به این شکل ما شبکه‌ای از سرورها را شکل می‌دهیم که با سرعت عالی کار خود را انجام می‌دهند. \r\n\r\nدر یک سرور کارگر خبری از Nginx و درخواست‌های وب نیست و موارد زیر تنها بر روی آن نصب می‌شوند:\r\n\r\n- PHP\r\n- Supervisor\r\n\r\n### سرور Meiliserch\r\n\r\n[**MeiliSearch**](https://www.meilisearch.com/) یک ابزار موتور قدرتمند و فوق سریع برای پیاده‌سازی کردن جستجو در اپلیکیشن‌های شماست که ما در پَچیم برای نصب MeiliSearch سرور آن را پیشنهاد می‌دهیم.\r\n\r\nبرای آنکه تجربه بدون نقص با MeiliSearch داشته باشید ما اجازه نصب Meilisearch در سرور‌های اپلیکیشن را به شما نمی‌دهیم و برای اینکار لازم است یک سرور جداگانه تهیه کنید و با استفاده از پَچیم MeiliSearch را بر روی آن راه‌اندازی کنید.\r\n\r\n### سرور توزیع بار\r\n\r\nسرور توزیع بار به شدت کاربردیست و شما با استفاده از آن می‌توانید ترافیک ورودی به سرور خود را بین هر تعداد سروری که می‌خواهید تقسیم کنید.\r\n\r\nاجازه دهید با یک **سناریو** لازمه استفاده از سرور توزیع بار را برایتان توضیح دهیم.\r\n\r\nهمیشه دیده‌اید که برای ثبت نام‌های مختلف مثل کنکور یا خودرو سایت‌های که معرفی می‌شوند در شروع ثبت نام بخاطر حجم زیاد افرادی که درخواست ورود به سایت را دارند از دسترسی خارج می‌شوند. در سرورهای توزیع بار شما می‌توانید در مواقع عادی چند سرور برای تقسیم شدن بار ورودی به سرور مشخص کنید و اگر زمانی حجم درخواست‌های شما بالا رفت خیلی راحت میتوانید سرورهای دیگری را هم به لیست سرورهای قبلی خود اضافه کنید با اینکار بجای آنکه یک سرور پاسخ دهنده درخواست کاربران شما باشند چندین سرور این کار را می‌کنند و شما در عمل یک پروژه مقایس پذیر بوجود آورده‌اید.\r\n\r\nبرای آشنایی بیشتر با موضوع توزیع بار حتما بخش [پیکربندی توزیع بار](/servers/load-balancing) در مستندات را مطالعه کنید.\r\n","path":"/servers/types"},{"meta":{"title":"صف‌ها"},"content":"\r\n# صف‌ها\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nزمانی که برنامه وبسایت خود را از نوع **لاراول** یا **لاراول octane** قرار دهید، پنل کاربری پَچیم بخشی با عنوان صف‌ها را به شما نمایش می‌دهد. با استفاده از این بخش می‌توانید بسیار ساده برای پروژه لاراولی خود صف تعریف کنید. صفی که در این بخش تعریف می‌کنید توسط سرپرست سرور شما اجرا خواهد شد و هر زمان به هر دلیلی متوقف شود مجددا توسط سرپرست به حالت اجرا در خواهد آمد.\r\n\r\n## ایجاد کردن یک صف \r\n\r\nشما با ورود به صفحه صف در پنل سایت خود می‌توانید با کلیک بر روی دکمه **ایجاد صف**، صف جدیدی را به سایت خود اضافه کنید. تفاوتی که ایجاد صف در این قسمت با ایجاد صف در سرپرست‌های سرور دارد این است که به شما گزینه‌های بیشتری را می‌دهد تا با دقت بالاتری صف خود را ایجاد کنید.\r\n\r\nاگر قصد دارید با تنظیمات صف‌ها بیشتر آشنا شوید می‌توانید مستندات [**صف در لاراول**](https://laravel.com/docs/queues) را مطالعه کنید.\r\n\r\nقابلیتی که ایجاد صف در این قسمت دارد این است که شما می‌توانید مشخص کنید صف شما با چه ورژنی از PHP اجرا شود، البته اگر ورژن به خصوصی را مد نظر دارید ولی در سرور شما وجود ندارد، می‌توانید از بخش [PHP پنل سرورتان](/servers/php) ورژن مورد نظر را نصب و راه اندازی کنید.\r\n\r\n## استفاده از لاراول Horizon\r\n\r\nاگر تصمیم دارید در پروژه لاراولی خود از [لاراول Horizon](https://laravel.com/docs/horizon) استفاده کنید، از طریق پنل صف ها این کار را **انجام ندهید**، بجای آن از ویژگی [سرپرس سرور](/servers/supervisor) استفاده کنید.\r\n\r\nابتدا، از طریق پنل سرپرست سرور پَچیم، سرپرستی تعریف کنید که دستور `php artisan horizon` را در دایرکتوری اصلی پروژه شما اجرا کند.  بعد از تعرف سرپرست دستور `php artisan horizon:terminate` را در **کد استقرار** خود قرار دهید تا با هر بار استقرار جدید یکبار لاراول Horizon از ابتدا اجرا شود.\r\n","path":"/sites/app-deploy/laravel/queues"},{"meta":{"title":"راه اندازی پروژه لاراول"},"content":"\r\n# راه اندازی پروژه لاراول\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی \r\n\r\n## حالت تعمیر و نگه‌داری\r\n\r\nIf you have deployed a Laravel application, Forge allows you to make use of Laravel's maintenance mode feature. Clicking the Enable Maintenance Mode button within the site's App tab will run the php artisan down Artisan command within your application, which will make your site unavailable. When the site is in maintenance mode, you can then click the Disable Maintenance Mode button to make your site available again.\r\n\r\n### کلید مخفی حالت تعمیر و نگه داری\r\n\r\nLaravel 8.0+ applications can make use of the \"secret\" option to bypass maintenance mode. Using this option with older versions of Laravel is not supported.\r\n","path":"/sites/app-deploy/laravel/setup"},{"meta":{"title":"برنامه PHP"},"content":"\r\n# برنامه PHP\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nپَچیم سعی کرد فضای را آماده سازی کند تا با استفاده از آن بتوانید برنامه‌های مختلفی را بر روی سرور خود بالا آورید، یکی از این دسته برنامه‌ها، برنامه‌های PHP است، که به سادگی می‌توانید یک وبسایت PHP با پَچیم بالا آوردید و آن را مدیریت کنید.\r\n\r\n## راه اندازی برنامه PHP\r\n\r\nبرای راه‌اندازی یک پروژه PHP ابتدا نیاز است سایت مورد نظر را در سرور خودتان از طریق پنل پَچیم بوجود آوردید، بعد از کلیک بر روی دکمه ایجاد سایت جدید، نوع برنامه خود را PHP قرار دهید. اینکار باعث می‌شود امکانات مورد نظر PHP بر روی پنل سایت در اختیار شما قرار بگیرد. \r\n\r\nبعد از وارد کردن مابقی اطلاعات لازم سایت با کلیک بر روی ایجاد کردن سایت، وبسایت شما ایجاد می‌شود و از طریق **[بخش استقرار](/sites/deployments)** می‌توانید به سادگی پروژه خود را بر روی سرورتان قرار دهید.\r\n\r\n## اجازه دسترسی پکیج‌های PHP\r\n\r\nاگر زمانی از پکیجی از php استفاده می‌کنید که برای نصب آن نیاز به بررسی اجازه دسترسی از طریق Composer است، می‌توانید از بخش [پکیج‌های PHP](/sites/php-packages) در پنل مربوط به سایت خود، این اجازه دسترسی را به composer اضافه کنید. \r\n\r\n## داشتن فایل .env\r\n\r\nاگر از سیستم متغییرهای محیط برنامه در فایل `.env` برای پروژه PHP خود استفاده می‌کنید و نیاز به این دارید که متغییرهای فایل `.env` را تغییر دهید یا چیزی را به آن اضافه کنید، می‌توانید از طریق پنل سایت خود در پَچیم وارد بخش **متغییرهای محیط برنامه** شوید و متغییرهای که مد نظر دارید را بر روی آن قرار دهید.\r\n\r\nدر پروژه‌های php به روش‌های مختلف می‌تواند متغییرهای محیطی را به برنامه اضافه کرد اما یکی از ابزارهای که می‌تواند در PHP کمک کند، استفاده از پکیج [phpdotenv](https://github.com/vlucas/phpdotenv) اگر تا به حال از این ویژگی استفاده نکردید و قصد دارید از این امکان در پَچیم بهرمند شوید می‌توانید مستند این پکیج را مطالعه کنید.\r\n\r\n## مشاهده لاگ‌ها\r\n\r\nاگر در برنامه خود لاگ‌ها را در فایل خاصی ذخیره سازی می‌کنید، می‌توانید از طریق پنل پَچیم خروجی لاگ‌ها را همیشه مشاهده کنید. برای انجام اینکار تنها کافیست یک [لاگ سفارشی](/sites/logs#لاگهای-سفارشی) در پَچیم بوجود آورید و در قدم بعد آن راه مشاهده کنید.\r\n\r\n## اتصال به دیتابیس\r\n\r\nبرای اتصال پروژه PHP به دیتابیس، نیاز به یک دیتابیس و کاربر دیتابیس و پسورد آن دارید. شما می‌توانید به سادگی از طریق [پنل دیتابیس‌های سرور پَچیم](/servers/databases) و اطلاعات مورد نیاز خود را ایجاد کنید.\r\n\r\nدر نهایت به سادگی می‌توانید از طریق اطلاعات دیتابیسی که ایجاد کردید و پیکربندی آن در برنامه php به دیتابیس مورد نظر متصل شوید و اطلاعات خود را در آن ذخیره سازی کنید.\r\n\r\n## ارسال ایمیل\r\n\r\nدر حال حاضر بر روی سرور شما sendmail نصب شده و شما می‌توانید به شکل native با استفاده از تابع mail عمل ارسال ایمیل را انجام دهید.\r\n\r\nهمچنین شما می‌توانید سرویس SMTP ارسال ایمیل را از جاهای دیگر تهیه کنید و از آن برای ارسال ایمیل خود استفاده کنید. \r\n\r\n## کار با صف‌ها\r\n\r\nاگر شما در برنامه خود، دستور کامندی را برای اجرای صف دارید ‌می‌توانید از بخش [سرپرست‌های سرور](/servers/supervisor) اقدام به اضافه کردن صف مورد نظر خود برای وبسایتتان کنید.\r\n","path":"/sites/app-deploy/php"},{"meta":{"title":"اجرای command"},"content":"\r\n# اجرای Command\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی \r\n\r\nممکن است گاهی اوقات نیاز باشد یک سری از دستورات command را مستقیما در دایرکتوری پروژه خود اجرا کنید. اولین راهی که برای اینکار شاید به ذهن شما برسد استفاده از ارتباط ssh است. اما ما در پَچیم این امکان را برایتان فراهم کرده‌ایم تا بتوانید از طریق پنل سایت در پَچیم، دستورات مختلف را در دایرکتوری سایت به شکل مستقیم اجرا کنید.\r\n\r\n## اجرای دستور \r\n\r\nبرای اجرا کردن دستورات مختلف تنها کافیست وارد پنل سایت خود در پَچیم و بخش دستورات (command) شوید، بعد از ورود به این بخش بر روی دکمه دستور جدید کلیک کنید و دستور مورد نظر خود را واد کنید و بر روی اجرا بزنید.\r\n\r\nدقت کنید دستوراتی که شما وارد می‌کنید تنها در مسیر سایت شما اجرا خواهند شد. برای مثال می‌خواهید چک کنید چه فایل‌ها در دایرکتوری سایت‌تان وجود دارد.\r\n\r\n```shell\r\nls -la\r\n```\r\n\r\nزمانی که دستور بالا را اجرا کنید اگر دامنه سایتان site.com باشد و کاربر ایزوله‌ای هم نداشته باشد در مسیر `/home/pachim/site.com` اجرا خواهد شد و شما از طریق پَچیم می‌توانید نتیجه این کد را هم مشاهده کنید.\r\n\r\nحالا اگر بخواهید ابتدا وارد یک دایرکتوری در دایکتوری پروژه‌تان شوید و بعد دستوری را اجرا کنید به شکل زیر باید اینکار را انجام دهید.\r\n\r\n```shell\r\ncd public && ls -la\r\n```\r\n\r\nیا می‌توانید فایل shell که در دایکتوری پروژه خود قرار دادید را به شکل زیر اجرا کنید.\r\n\r\n```shell\r\ncd bin && ./run-command.sh\r\n```\r\n\r\n## تاریخچه دستورات اجرا شده\r\n\r\nدر قسمت تاریخچه دستورات اجرا شده در سایتان شما می‌توانید تاریخچه 15 دستور آخر اجرا شده در سایت را مشاهده کنید، همچنین می‌توانید از قسمت تاریخچه اطلاعات زیر مشاهده کنید.\r\n\r\n- چه شخصی این دستور را بر روی سایت شما اجرا کرده، برای زمانی که شما از قابلیت حلقه همکاران استفاده می‌کنید.\r\n- دستوری که بر روی سایت اجرا شد\r\n- زمان اجرا شدن دستور\r\n- وضعیت اجرای دستور\r\n\r\nشما همچنین می‌توانید خروجی هر دستور و اجرا مجدد دستور را از طریق قسمت بیشتر هر دستور انجام دهید.\r\n\r\n## دستورات در مقابل دستورالعمل‌ها \r\n\r\nشما با استفاده از قابلیت [دستورالعمل‌ها](/servers/instructions) در پَچیم می‌توانید دستورات مختلفی را بر روی سرورهای مختلف خود، بدون آن که از طریق SSH وارد سرور شوید، اجرا کنید، با این حال چه نیازی به بخش دستورات در سایت‌ها است؟\r\n\r\nدر زیر بخشی از تفاوت‌های این دو را برایتان توضیح خواهیم داد:\r\n\r\n1. **دستورالعمل‌ها** در سطح سرور اجرا می‌شوند، به این معنی که شما هر دستوری را در هر دایرکتوری از سرور می‌توانید اجرا کنید، اما **دستورات** به شکل اختصاصی در دایکتوری خود سایت اجرا می‌شوند.\r\n2. **دستورالعمل‌ها** می‌توانند توسط کاربر `root` سرور نیز اجرا شوند، اما **دستورات** تنها با کاربری که مربوط به همان سایت است اجرا می‌شوند برای مثال با کاربر `pachim` و اگر **کاربر ایزوله‌ای** تعریف کرده باشید، نام کاربری آن.\r\n3. **دستورالعمل‌ها** برای دستورات بلند عملکرد بهتری دارند، اما **دستورات** بیشتر برای اجرا کردن command کوتاه در سایت شما مورد استفاده قرار می‌گیرند.\r\n","path":"/sites/commands"},{"meta":{"title":"استقرارها"},"content":"\r\n# استقرارها\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\n استقرار به پروسه‌ای گفته می‌شود که کدهای پروژه شما از مخزن پروژه (معمولا در گیت‌هاب / گیت‌لب / گیت سفارشی ) دریافت می‌شود و در سرورتان در دایرکتوری پروژه قرار میگیرد. \r\n \r\nما در پَچیم خروجی ۱۰ استقرار آخر برنامه شما را ذخیره می‌کنیم تا از وضعیت استقرارهای خود از طریق پنل پَچیم آگاه شوید و همچنین می‌توانید خروجی کد اسکریپت استقرار خود را نیز از طریق هر کدام مشاهده کنید، تا در صورت وجود مشکل، آن را بفهمید و حل کنید. \r\n\r\n## متغییرهای محیط‌ برنامه\r\n\r\nبعضی از برنامه‌ها و پروژه‌ها از قابلیت متغییرهای محیط برنامه استفاده می‌کنند که با استفاده از فایل `.env` در مسیر اصلی پروژه مورد استفاده قرار میگیرد، برای مثال در یک پروژه لاراول این فایل نقش اساسی را در پیکربندی پروژه انجام می‌دهد. برای همین در پنل سایت پَچیم بخشی را بوجود آورده‌ایم با عنوان **متغییرهای محیط برنامه** که با استفاده از آن می‌توانید محتوای فایل `.env` را تغییر دهید و اگر این فایل اصلا وجود ندارد با استفاده از این بخش این فایل را با محتوای جدید ایجاد کنید. \r\n\r\n:::note{.tip}\r\n::title[ساخت اتوماتیک `.env`]\r\n\r\nفایل‌های `.env` را به هیچ وجه نباید به مخزن git اضافه کرد، اما می‌توانید همان فایل را بدون مقادیر حساس، تنها با اسم متغییرها در فایل `.env.example` قرار دهید و به مخزن git اضافه کرد. زمانی که شما پروژه را در پَچیم قرار می‌دهید، پَچیم بررسی می‌کند که اگر فایلی با عنوان `.env.example` وجود داشت آن به `.env` تغییر میدهد و سپس شما از طریق بخش متغییرهای محیط برنامه می‌توانید مقادیر آن را تغییر دهید.\r\n\r\n:::\r\n\r\n## استقرار سریع\r\n\r\nویژگی **استقرار سریع** پَچیم یکی از آن ویژگی‌هایست که زندگی برنامه‌نویسان را راحت‌تر می‌کند، در نظر داشته باشید که شما تغییری را در پروژه انجام دادید و قصد دارید تغییرات را بر روی وبسایت خود نمایش دهید، برای اینکار نیاز است بعد از push کردن تغییرات بر روی مخزن گیت وارد پنل پَچیم شوید و بر روی دکمه استقرار کلیک کنید تا تغییرات از مخزن گیت شما به سایت شما منتقل شود.\r\n\r\n**اما** شما می‌توانید با فعال سازی گزینه‌ای با عنوان **استقرار سریع** از بخش اپلیکیشن در پَچیم، کاری کنید که هر زمان عمل push بر روی مخزن git پروژتان انجام شد، تغییرات مورد نظر به شکل اتوماتیک بر روی سرور شما قرار بگیرند و با این کار شما نیاز به انجام هیچ کار اضافه‌ای دیگری ندارید.\r\n\r\n:::note{.warning}\r\n\r\n::title[استفاده از مخزن‌های سفارشی]\r\n\r\nتوجه کنید امکان استفاده از ویژگی استقرار سریع `تنها برای مخزن‌های گیت هاب و گیت لب وجود دارد`، اما اگر از مخزن‌های سفارشی استفاده می‌کنید، می‌توانید از طریق `لینک درخواست استقرار` هر زمان که خواستید بهره ببرید و با فراخوانی این لینک درخواست استقرار در پروژه خود انجام دهید.\r\n\r\nبرای مثال این لینک را می‌توانید در گیت سفارشی خود قرار دهید تا با هر بار push کردن درخواستی را به شکل POST یا GET به لینک درخواست استقرار شما ارسال کند.\r\n\r\n:::\r\n## اسکریپت استقرار\r\n\r\nبخش مهمی از پروسه استقرار، اسکریپت استقرار شماست، بخاطر اینکه مشخص می‌کند بعد از درخواست استقرار چه اتفاقی بر روی پروژه شما بی افتد، شما می‌توانید از طریق پنل پَچیم و بخش اپلیکیشن این اسکریپت را به هر روشی که مورد نیازتان بود تغییر دهید.\r\n\r\nبر اساس نوع پروژه شما این اسکریپت استقرار متفاوت خواهد بود. برای مقال برای پروژه لاراولی به این شکل است که هر زمان اسکریپت استقرار انجام شد.\r\n\r\n1. وارد دایرکتوری پروژه شما شود.\r\n2. دستور git pull را برای دریافت آخرین تغییرات از مخزن git اجرا کند.\r\n3. پکیج‌های مورد نیاز را با composer نصب کند.\r\n4. در نهایت دستور `php artisan migrate` را اجرا کنید تا اگر فایل migration وجود داشت آن را بر روی سایت اجرا کند.\r\n\r\nهمچنین اگر متغییرهای را در فایل `.env` پروژه خود تعریف کرده‌اید که نیاز دارید در اسکریپت استقرار به آن‌ها دسترسی پیدا کنید، تنها کافیست، گزینه **فایل .env در استکریپت استقرار در دسترس باشد** را فعال کنید. زمانی که اینکار را انجام دهید، متغییرهای داخل فایل .env همانند متغییرهای معمول اسکریپت bash در اختیار شما قرار میگیرند.\r\n\r\n```shell\r\necho \"${APP_NAME} is deploying ...\"\r\n```\r\n### ورژن PHP در استقرار\r\n\r\nاگر شما [چندین ورژن از php را در سرور](/servers/php) خود نصب کرده‌اید، ممکن است نیاز داشته باشید از طریق اسکریپت استقرار خود به ورژن‌های مختلف PHP دسترسی پیدا کنید.\r\n\r\nبه شکل پیش فرض، اگر ورژنی از PHP را برای CLI انتخاب کنید با عنوان `php` می‌توانید همیشه از آن بهره ببرید، اما اگر در کنار ورژن پیشفرض قصد دارید به ورژن‌های مختلف نیز دسترسی داشته باشید، تنها کافیست نام باینری آن را به شکل `phpx.x` فراخوانی کنید، بجای `x.x` میتوانید عدد ورژن را قرار دهید. (`php8.0`)\r\n\r\n### متغییر‌های محیط برنامه\r\n\r\nدر کنار اینکه شما می‌توانید به متغییر‌های فایل .env خود از طریق اسکریپت استقرار دسترسی داشته باشید ما در پَچیم یک سری از متغییرهای مربوط به سایت و استقرار شما را نیز از طریق اسکریپت استقرار در اختیارتان قرار می‌دهیم تا بتوانید اسکریپت استقرار خود را تا جای که ممکن است شخصی سازی کنید. \r\n\r\n| کلیدها                  | توضیحات                                                                                              |\r\n|-------------------------|------------------------------------------------------------------------------------------------------|\r\n| `PACHIM_COMPOSER`       | آدرس مسیری که composer در آن نصب شده است.                                                            |\r\n| `PACHIM_CUSTOM_DEPLOY`  | اگر زمانی درخواست استقرار از طریق لینک اختصاصی درخواست استقرار، اجرا شود، مقدار این کد `1` خواهد شد. |\r\n| `PACHIM_DEPLOY_AUTHOR`  | نویسنده کامیت.                                                                                       |\r\n| `PACHIM_DEPLOY_COMMIT`  | هش مربوط به کامیتی که برای استقرار درخواست شده است.                                                  |\r\n| `PACHIM_DEPLOY_MESSAGE` | پیام مربوط به کامیت.                                                                                 |\r\n| `PACHIM_MANUAL_DEPLOY`  | زمانی که درخواست استقرار از طریق دکمه `استقرار جدید`، درخواست شود. مقدار این کلید `1` خواهد شد.      |\r\n| `PACHIM_PHP_FPM`        | نام فرایند PHP-FPM که پَچیم برای شما در حال استفاده است.                                             |\r\n| `PACHIM_PHP`            | نام باینری PHP که بر روی سایت شما استفاده می‌شود.                                                    |\r\n| `PACHIM_QUICK_DEPLOY`   | زمانی که در خواست استقرار شما به روش استقرار سریع اجرا شده باشد، مقدار این کلید `1` خواهد شد.        |\r\n| `PACHIM_REDEPLOY`       | اگر به هر دلیلی استقرار مورد نظر شما مجددا اجرا شود.                                                 |\r\n| `PACHIM_SERVER_ID`      | آی دی سروری که استقرار بر روی آن در حال انجام است.                                                   |\r\n| `PACHIM_SITE_BRANCH`    | نام شاخه‌ای که در حال استقرار است.                                                                   |\r\n| `PACHIM_SITE_ID`        | آی دی وبسایت شما در پَچیم که استقرار بر روی آن در حال انجام است.                                     |\r\n| `PACHIM_SITE_PATH`      | مسیری که استقرار بر روی آن انجام می‌شود. برای مثال `/home/pachim/mysite.com`                         |\r\n| `PACHIM_SITE_USER`      | نام کاربر سایت شما که استقرار بر روی آن انجا می‌شود.                                                 |\r\n\r\nشما می‌توانید برای مثال از از متغییر‌های بالا به شکل زیر استفاده کنید.\r\n```bash\r\nif [[ $PACHIM_QUICK_DEPLOY -eq 1 ]]; then\r\n    echo \"This deploy was triggered quick.\"\r\nfi\r\n```\r\n\r\nبرای مثال زمانی ممکن است شما بخواهید اگر کامیتی با متن `wip` (به معنی Work-in-Progress) بر روی مخزن push شد، باعث آپدیت شدن وبسایت شما نشود، برای همین می‌توانید از کد زیر در ابتدای اسکریپت استقرار استفاده کنید:\r\n\r\n```bash\r\nif [[ $PACHIM_DEPLOY_MESSAGE =~ \"wip\" ]]; then\r\n    echo \"WORK IN PROGRESS, DO NOT CONTINUE.\"\r\n    exit 1\r\nfi\r\n```\r\n\r\n:::note{.warning}\r\n\r\n::title[از متغییرهای رزرو استفاده نکنید]\r\n\r\nمتغییرهای مربوط به پَچیم با `_PACHIM` شروع می‌شوند بنابراین اگر پروژه شما دارای فایل `.env` است و می‌خواهید متغییرهای آن در اسکریپت استقرار در دسترس باشد لطفا متغییرهای را با شروع `_PACHIM` تعریف نکنید.\r\n\r\n:::\r\n\r\n## توسعه با CI \r\n\r\nدر حال کار بر روی پَچیم برای ارائه قابلیت کار با CI هستیم و به زودی مستندات لازم برای روش انجام این کار را در اختیار شما قرار خواهیم داد.\r\n\r\n## ویرایش مخزن برنامه\r\n\r\nگاهی اوقات ممکن است به هر دلیلی مکان قرار گیری مخزن گیت خود را تغییر دهید و بعد بخواهیم که این تغییر را بر روی پَچیم هم انجام دهید. پَچیم قابلیت انجام این کار را برای شما فراهم کرده که به سادگی و بدون نیاز به حذف و نصب مجدد اپلیکیشن خود و تنها با ورود به پنل پَچیم و قسمت اپلیکیشن وبسایت از طریق **ویرایش مخزن برنامه** اینکار را انجام دهید.\r\n\r\nتوجه کنید که ویرایش Repository باعث نمی‌شود فایل‌ها و کدهای موجود در وبسایتتان را تغییر کند، با انجام تغییر مخزن، تنها URL مربوط به git پروژه تغییر خواهد کرد، البته توجه داشته باشید برای آنکه این تغییر بدون مشکل انجام شود، مخزن جدیدی که وارد می‌کنید باید تماما با مخزن قبلی یکی باشد در غیر این صورت دچار مشکل خواهید شد، **همچنین پیشنهاد می‌کنیم که اگر قصد نصب و راه اندازی مخزن تماما جدید را دارید، ابتدا این برنامه را حذف کنید و سپس اقدام به نصب مخزن جدید در وبسایت خود کنید**.\r\n\r\n\r\n## نوتیفیکیشن استقرارها\r\n\r\nشما می‌توانید از طریق قسمت مدیریت نوتیفیکیشن‌ سایت، کانال‌های که برای ارسال نوتیفیکیشن به شما مشخص می‌شود را مورد استفاده قرار دهید، دقت کنید که این بخش برای ارسال نوتیفیکیشن‌های مختلف از نوتیفیکیشن استقرار تا موارد دیگر مورد استفاده قرار خواهد گرفت.\r\n\r\nدر حال حاضر با مشخص کردن کانال‌های ارسال نوتیفیکیشن\r\n\r\n- برای استقرارهای موفق (**نوتفیکیشن تلگرام و وب هوک**) ارسال می‌شود\r\n- برای ارسال‌های ناموفق (**نوتفیکیشن تلگرام، ایمیل و وب هوک**) ارسال می‌شود\r\n\r\n### تلگرام\r\n\r\nتلگرام یکی از پیام رسان‌های محبوب در دنیا است که توسط افراد زیادی مورد استفاده قرار می گیرد. ما نیز در پَچیم با دانستن این موضوع قابلیت ارسال نوتیفیکیشن بر بستر تلگرام را برای شما فراهم کرده‌ایم.\r\n\r\nبرای فعال سازی این موضوع تنها کافیست ربات پَچیم با عنوان `pachim_bot` را به یک گروه اضافه کنید و بعد از اضافه کردن، دستوری که در صفحه مدیریت نوتیفیکیشن سایت مورد نظرتان برای اتصال ربات تلگرام به سایتتان وجود دارد را در گروه مورد نظر اجرا کنید، بدون نیاز به انجام کار دیگری اتصال ربات با سایت شما برقرار می‌شود و از این پس نوتیفیکیشن‌ها به گروهی که ربات را به آن اضافه کردید، ارسال خواهد شد.\r\n\r\nهر زمانی که قصد دارید گروه مربوط به ربات پَچیم را تغییر دهید تنها کافیست از پنل مدیریت نوتیفیکیشن‌ها بر روی دکمه غیرفعال سازی کنید و مجددا ربات را به گروه مورد نظر اضافه کرده و دستور را در آن گروه اجرا کنید. \r\n\r\n### وب هوک\r\n\r\nگاهی شاید نیاز به این داشته باشید که با هر استقرار جدید اطلاعاتی را به یک URL خاص ارسال کنید، پَچیم دقیقا این قابلیت را برای شما آماده کرده است، با مراجعه به صفحه مدیریت نوتیفکیشن‌های سایت شما می‌توانید یک وب هوک تعریف کنید و بعد از ثبت وب هوک، مواردی همچون استقرار موفق یا ناموفق به شکل درخواست POST به وب هوکی که مشخص کردید ارسال می‌شود.\r\n\r\nبدنه درخواست POST که برای استقرار موفق برای شما ارسال می‌شود به شکل زیر است. \r\n\r\n```json\r\n{\r\n  \"status\": \"success\",\r\n  \"server\": {\r\n    \"id\": \"9777e106-001e-49d2-aed9-d29f86bceeda\",\r\n    \"name\": \"your-server-name\"\r\n  },\r\n  \"site\": {\r\n    \"id\": \"97880d6c-b4a7-43da-bc1e-c8c5d2dd8bfe\",\r\n    \"name\": \"site.com\"\r\n  },\r\n  \"commit_hash\": \"13ca9f66aed3daf00fff565239ff519be0a460c7\",\r\n  \"commit_url\": \"https://github.com/johndoe/my-biggest-idea/commit/13ca9f66aed3daf00fff565239ff519be0a460c7\",\r\n  \"commit_author\": \"Mamadeshon :)\",\r\n  \"commit_message\": \"Fix a F*** Bug!\"\r\n}\r\n```\r\n\r\nدر درخواست ناموفق تنها status برابر با failed خواهد بود، همچنین اگر از گیت سفارشی استفاده کرده باشید، ممکن است مقادیر commit_message, commit_author, commit_url ,commit_hash برای شما ارسال نشود.  \r\n\r\n### ایمیل\r\n\r\nدر صورت اینکه سایت شما یک استقرار ناموفق داشته باشد این استقرار ناموفق با نوتیفیکیشن به ایمیل شما اطلاع داده خواهد شد، در صورت اینکه ماییل هستید برای هر سال به یک ایمیل به‌خصوص این اطلاع رسانی انجام شود، تنها کافیست ایمیل مورد نظر را در صفحه مدیریت نوتیفیکیشن سایت در قسمت ایمیل‌ وارد کنید.\r\n","path":"/sites/deployments"},{"meta":{"title":"دستورالعمل‌های کمکی سایت"},"content":"\r\n# دستورالعمل‌های کمکی سایت\r\n\r\n### جدول محتوا\r\n\r\n## استفاده از کابر ایزوله برای وبسایت‌های که وجود دارد\r\n\r\nگاهی اوقات سوال می‌شود که چطور می‌توانیم برای سایت‌های فعلی خود کاربر ایزوله شده قرار دهید. انجام این کار امکان پذیر نیست و شما نمی‌توانید چنین کاری را انجام دهید. بجای آن نیاز است یک وبسایت جدید ایزوله شده بسازید و اپلیکیشن خود را بر روی آن بالا ‌آورید.\r\n\r\n## کامیت‌های ثبت نشده و ارور در زمان استقرار\r\n\r\nگاهی پیش می‌آید فایل‌های سرور شما توسط خود شما یا حتی اپلیکیشن شما تغییر کنند، اما این تغییرات در گیت commit نشود برای همین زمانی که درخواست استقرار جدید می‌کنید به دلیل داشتن تغییرات کامیت نشده استقرار شما با موفقیت انجام نمی‌شود و شکست می‌خورد. \r\n\r\n\r\nبرای رفع این مشکل نیاز است تغییرات به وجود آماده در گیت اپلیکیشن خود در سرور را کامیت یا پاک کنید تا استقرار جدید شما بدون مشکل بر روی سایتتان قرار بگیرد، برای انجام اینکار کافیست وارد پنل سایت در پَچیم شوید و بر روی دکمه **دستورات کمکی** در هدر صفحه کلیک کنید و گزینه **ریست کردن وضعیت Git** بزنید.\r\n\r\nتوجه کنید با **ریست کردن وضعیت Git** اگر تغییر کامیت نشده‌ای را داشته باشید همه آن‌ها **حذف خواهند شد**، بنابراین با دقت این گزینه را انتخاب کنید. بعد از انجام اینکار با خیال راحت می‌توانید درخواست استقرار جدید خود را ثبت کنید و بدون مشکل آپدیت جدید سایت خود را بارگذاری کنید.\r\n\r\n# راه اندازی PM2 در Boot\r\n\r\nبه شکل پیشفرض سرویس PM2 در بوت سیستم عامل راه‌اندازی نمی‌شود و برای انجام اینکار نیاز است چند قدم کوتاه بردارید که خوشبختانه بسیار ساده است و در زیر آن را برایتان توضیح داده‌ایم.\r\n\r\nبعد از راه‌اندازی سرویس PM2 قدم‌های زیر را بردارید تا از اجرا شدن PM2 در زمان بوت سرور اطمینان حاصل کنید. توجه کنید که اینکار برای هر کدام از کاربران سرور شما باید انجام شود آن هم به شکل جداگانه.\r\n\r\nبرای قدم اول ابتدا دستور زیر را در کاربر مورد نظر سیستم خود اعمال کنید، توجه کنید برای انجام اینکار می‌توانید از بخش دستورات سایت مورد نظر استفاده کنید.\r\n\r\n```shell\r\npm2 startup -u user\r\n```\r\n\r\nبه‌جای <user\\> نام کاربری که پروژه بر روی آن اجرا شده را وارد کنید اگر کاربر ایزوله جدیدی ایجاد نکرده‌اید این مقدار برابر است با pachim زمانی که دستور بالا را اجرا کنید خروجی به شکل زیر به شما نمایش داده می‌شود.\r\n\r\n```shell\r\n[PM2] Init System found: systemd\r\n[PM2] To setup the Startup Script, copy/paste the following command:\r\nsudo env PATH=$PATH:/usr/bin pm2 startup systemd -u pachim --hp /home/pachim\r\n```\r\n\r\nدر قدم بعد نیاز است دستوری که به شما میدهد را اجرا کنید با کاربر pachim و ssh به سرور خود متصل شوید.\r\n\r\n```shell\r\nssh pachim@server_ip_address\r\nsudo env PATH=$PATH:/usr/bin pm2 startup systemd -u pachim --hp /home/pachim\r\n```\r\n\r\nبعد از اجرا دستور دوم از شما پسورد sudo را می‌خواهد که در زمان راه اندازی سیستم عامل توسط پَچیم به شما داده شده و با وارد کردن آن کار به اتمام میرسد، اگر از قبل برنامه node را بر روی پَچیم راه‌اندازی کردید بهتر است یکبار آن را حذف و مجددا راه‌اندازی کنید تا به شکل کامل از اجرا شدن آن اطمنیان حاصل شود.\r\n","path":"/sites/help-instructions"},{"meta":{"title":"لاگ‌های سایت"},"content":"\r\n# لاگ‌های سایت\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nزمانی که برنامه‌ای راه اندازی می‌شود بررسی کردن فایل‌های لاگ برنامه بسیار مهم است و به ما کمک می‌کند از ارور‌های که ممکن است در برنامه رخ دهد آگاه شویم، ما در پَچیم بخشی در پنل سایت داریم با عنوان لاگ‌ها که با ورود به آن می‌توانید با بخش لاگ سرور کار کنید.\r\n\r\n## لاگ‌های پیش فرض\r\n\r\nبا راه اندازی هر وبسایت لاگ‌های متفاوتی ممکن است برای سایت شما وجود داشته باشد که بخشی از آن به شکل پیش فرض در اختیار شما قرار میگیرد، برای مثال‌ لاگ‌های **nginx error** و **nginx access** که تنها مربوط به سایت شما هستند.\r\n\r\nالبته بر اساس نوع برنامه‌ای که در سرور خود را اندازی ‌می‌کنید، لاگ‌های دیگری هم به شکل پیشفرض به شما نمایش داده می‌شود، برای مثال اگر برنامه شما لاراولی باشد هر لاگی که در دایرکتوری storage لاراول قرار بگیرد از طریق صفحه لاگ سایت پَچیم قابل نمایش است.\r\n\r\n## لاگ‌های سفارشی\r\n\r\nگاهی ممکن است فایل لاگی در سایت وجود داشته باشد که از دید بخش پیش فرض به دور باشد برای همین قابلیتی در این بخش به وجود آورده‌ایم با عنوان لاگ‌های شخصی که شما می‌توانید یک لیست از فایل‌های لاگ مورد نظر را در لیست لاگ‌های شخصی مشخص کنید و در نهایت در قسمت بالای پنل لاگ سایت، خروجی لاگ خود را مشاهده کنید.\r\n\r\n### ایجاد لاگ سفارشی جدید\r\n\r\nبرای اضافه کردن یک لاگ سفارشی جدید تنها کافیست بر روی دکمه **اضافه کردن لاگ** کلیک کنید و بعد یک نام و مسیر قرار گیری لاگ مورد نظر در دایرکتوری وبسایت خود را مشخص کنید. دقت کنید آدرسی که وارد می‌کنید باید به همراه نام فایل باشد و پسوند فایل در حال حاضر می‌تواند `.log` یا `.output` باشد.  \r\n\r\n### مدیریت لاگ سفارشی\r\n\r\nشما هر زمان که بخواهید از قسمت لیست لاگ‌های سفارشی می‌توانید لاگ‌های که مشخص کردید را حذف یا ویرایش کنید تا بتوانید بهترین حالت را برای لاگ‌های وبسایت خود مشخص کنید.\r\n","path":"/sites/logs"},{"meta":{"title":"اجازه دسترسی پکیج‌های PHP"},"content":"\r\n# اجازه دسترسی پکیج‌های PHP \r\n\r\n### جدول محتوا \r\n\r\n## بررسی اجمالی\r\n\r\nهماهنطور که در بخش [**اجازه‌دسترسی پکیج‌های PHP**](/servers/php-packages) در سرور توضیح داده‌ایم، شما می‌توانید اجازه دسترسی‌های کلی را برای نصب پکیج‌های مختلف با PHP برای همه سایت‌های یک نام کاربری سیستم عامل خود اعمال کنید. اما گاهی اوقات داستان متفاوت می‌شود و برای هر سایت، شما نیاز دارید اجازه دسترسی متفاوتی را به یک پکیج یکسان به composer اضافه کنید.\r\n\r\nبرای همین ما بخش اختصاصی اجازه دسترسی پکیج‌های PHP به هر سایت را هم اضافه کردیم که می‌توانید به شکل اختصاصی برای هر سایتی این اجازه دسترسی را ثبت کنید.\r\n\r\n### اجازه دسترسی در سایت\r\n\r\nزمانی که وارد پنل هر سایت در پَچیم شوید بخشی با عنوان **پکیج‌های PHP** مشاهده می‌کنید که اگر وارد آن شوید، میبینید که پَچیم سعی می‌کند فایل `auth.json` مربوط به composer را دریافت کند و به شما نمایش دهد. همانطور که در بررسی اجمالی هم توضیح دادیم از طریق این بخش شما می‌توانید اجازه دسترسی به پکیج‌های مختلف composer را به شکل جداگانه‌ای برای هر یک از سایت‌های خود اضافه کنید.\r\n\r\n### اضافه کردن گواهی اجازه دسترسی قبل از نصب پکیج\r\n\r\nبرای آنکه مشکلی برای نصب پکیجی که نیاز به اجازه دسترسی از طریق Composer دارد پیش نیاید. پیشنهاد می‌کنم ابتدا اجازه دسترسی مورد نظر را در قسمت پکیج‌های PHP وارد کنید و در نهایت درخواست نصب پکیج‌های خود بر روی سایت را بدهید.\r\n\r\n## ویرایش فایل auth.json\r\n\r\nفایل auth.json همان فایل اصلی composer است که با آن اجازه دسترسی پکیج‌های شما انجام می‌شود زمانی که وارد صفحه پکیج‌های سرور شوید در ابتدا اطلاعات auth.json از سرور شما دریافت می‌شود و در نهایت شما می‌توانید با استفاده از گزینه اضافه کردن دسترسی، دسترسی مورد نظر خود را اضافه کنید و بعد از اضافه کردن نیاز است درخواست آپدیت کردن فایل مورد نظر را ارسال کنید تا تغییرات به شکل کامل ثبت شوند.\r\n\r\n:::note{.tip}\r\n\r\nتوجه کنید فایل auth.json و اطلاعات داخل آن به هیچ وجه در پَچیم ذخیره سازی نمی‌شوند و اگر به هر دلیلی از طریق ssh آن را حذف کنید مجددا باید اطلاعات مورد نظر را از طریق پنل پَچیم به auth.json اضافه کنید.\r\n\r\n:::\r\n","path":"/sites/php-packages"},{"meta":{"title":"تغییر مسیر سایت"},"content":"\r\n# تغییر مسیرها\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nپَچیم به شما این امکان را می‌دهد تا بتوانید مسیرهای درخواستی بازدید کننده سایت خود را به مسیرهای دیگر تغییر دهید. برای مثال ممکن است شما آدرسی با عنوان `site.com/articles` داشته باشید و تصمیم بگیرید که کاربرانی که این آدرس را در مرورگر وارد می‌کنند به آدرس دیگری برای مثال `site.com/blog` منتقل شوند. \r\n\r\nشما می‌توانید از طریق بخش تغییر مسیر در پنل سایت پَچیم چنین کارهای را به سادگی انجام دهید.\r\n\r\n## ایجاد تغییر مسیر\r\n\r\nبرای ایجاد یک تغییر مسیر تنها کافیست بعد از وارد شدن به صفحه تغییر مسیر در پنل سایت پَچیم بر روی دکمه **قانون تغییر مسیر جدید** کلیک کنید و بعد اطلاعات درخواست شده را وارد کنید و قانون مورد نظر خود را ایجاد کنید.\r\n\r\nبرای پیاده سازی این تغییر مسیر‌ها در پَچیم از [قوانین تغییر مسیر nginx](https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite) استفاده می‌کنیم برای همین شما می‌توانید در قسمت آدرس از قوانین nginx هم استفاده کنید برای مثال شما می‌توانید از مقدار `= /` برای تغییر مسیر دامنه اصلی استفاده کنید.\r\n\r\n## تغییر مسیر دائمی در مقابل موقتی\r\n\r\nپَچیم دو نوع تغییر مسیر پیشنهاد می‌دهد:\r\n\r\n- تغییر مسیر دائمی (با کد وضعیت 301)\r\n- تغییر مسیر دائمی (با کد وضعیت 302)\r\n\r\nاز دید کاربران شما هیچ کدام از این دو متفاوت نیستند و کار تغییر مسیر برای شما انجام می‌شود اما از دید مرورگر، رفتار متفاوتی با این دو انجام می‌شود، که در زیر آن را به شما توضیح خواهیم داد.\r\n\r\n### تغییر مسیر موقتی \r\n\r\nدر تغییر مسیر موقتی مرورگر تغییر مسیر انجام شده را کش نمی‌کند و هر بار که شما آدرس مورد نظر را صدا بزنید ابتدا از سرور درخواست می‌کند و در صورت نیاز تغییر مسیر را انجام می‌دهد.\r\n\r\nبرای مثال گاهی اوقات لینکی از پروژه شما دچار مشکل شده و میخواهید به شکل موقت تغییر مسیری را انجام دهید تا مشکل آن صفحه را حل کنید و همچنین نمی‌خواهید مرورگر این تغییر مسیر را کش کند و یا موتورهای جستجو اعتبار لینک مورد نظر را به لینک تغییر مسیر داده شده منتقل کنند، برای چنین مواقعی تغییر مسیر موقتی بسیار کاربردی است.\r\n\r\nالبته اگر قانون تغییر مسیر موقتی شما برای مدت زمان زیادی فعال باشد موتورهای جستجو همچون تغییر مسیر دائمی با آن رفتار خواهند کرد.\r\n### تغییر مسیر دائمی \r\n\r\nبا تغییر مسیر دائمی، مرورگر به یاد خود میسپارد که از قبل، وارد لینک مورد نظر شده‌اید و عمل تغییر مسیر برای شما انجام شده است، با به یاد سپردن این موضوع، اگر مجددا لینک اصلی را صدا بزنید اینبار خود مرورگر کار انتقال به لینک مورد نظر را انجام می‌دهد و بجای درخواست لینک اصلی، لینک تغییر مسیر داده شده را از همان ابتدا صدا میزند. حتی اگر شما قانون تغییر مسیر خود را حذف کنید و از طریق مرورگر قبلا امتحان کرده باشید تا زمانی که کش مرورگر را حذف نکنید کماکان تغییر مسیر انجام خواهد شد.\r\n\r\nاین موضوع برای ربات‌های موتورهای جستجو همچون گوگل بسیار مهم است، اگر میخواهید به گوگل بفهمانید که یک لینک را در نظر نگیرد و تمام اعتبار آن را به لینک دیگری منتقل کند این نوع از تغییر مسیر بسیار کاربردی خواهد بود.\r\n","path":"/sites/redirects"},{"meta":{"title":"قوانین امنیتی"},"content":"\r\n# قوانین امنیتی \r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nپَچیم این امکان را به شما می‌دهد که وبسایت خود را با پسورد بر پایه [اصالت‌سنجی برای دسترسی‌های اولیه](https://fa.wikipedia.org/wiki/%D8%A7%D8%B5%D8%A7%D9%84%D8%AA%E2%80%8C%D8%B3%D9%86%D8%AC%DB%8C_%D8%A8%D8%B1%D8%A7%DB%8C_%D8%AF%D8%B3%D8%AA%D8%B1%D8%B3%DB%8C%E2%80%8C%D9%87%D8%A7%DB%8C_%D8%A7%D9%88%D9%84%DB%8C%D9%87) محافظت کنید، البته این امکان را هم به شما می‌دهد که مشخص کنید این پسورد برای کل وبسایت قرار بگیرد یا روت‌های بخصوصی که شما مشخص می‌کنید.\r\n\r\n## مدیریت قوانین امنیتی\r\n\r\n### ایجاد قانون امنیتی \r\n\r\nایجاد کردن یک قانون امنیتی اصلا کاری ندارد، تنها کافیست وارد پنل مدیریتی سایت مورد نظر و بخش امنیتی شوید و بر روی دکمه اضافه کردن قانون امنیتی جدید کلیک کنید. با وارد کردن اطلاعات مورد نیاز شما می‌توانید قانون امنیتی مورد نیاز خود را به سایتتان اضافه کنید.\r\n\r\nاین قابلیت در پَچیم وجود دارد که به شما اجازه می‌دهد چندین نام کاربری و پسورد را برای قانون مورد نظر خود قرار دهید.\r\n\r\n### ویرایش و حذف قانون\r\n\r\nاگر قانونی برای شما بلا استفاده شد و نیازی به آن ندارید به سادگی با کلیک بر روی دکمه حذف می‌توانید آن قانون را به کلی از سایت خود حذف کنید.\r\n\r\nشما مستقیما نمی‌توانید نام کاربری و پسورد قانون مورد نظر خود را ویرایش کنید اما می‌توانید نام کاربری و پسورد جدیدی را به قانون قبلی خود اضافه کنید، برای انجام این کار هم تنها کافیست بر روی دکمه قانون جدید کلیک کنید و نام و مسیر قانون قبلی راه اعمال کنید و نام کاربری و پسورد جدید را ثبت کنید با اینکار نام‌های کاربری مشخص شده و پسورد آن در کنار اطلاعات قبلی در سایت شما ثبت می‌شود.\r\n\r\n\r\n## اعتبارنامه‌ها\r\n\r\n پَچیم برای ایجاد یک قانون جدید در اصل یک فایل یکتا `.htpasswd` به ازای هر قانون امنیتی در سرور شما ایجاد می‌کند و هر کدام از این فایل‌ها اعتبارنامه‌های (نام‌های کاربری و پسورد‌های‌) خود را دارند. اگر شما قصد دارید برای دو مسیر از سایت خود قانون امنیتی با یک نام کاربری و پسورد یکسان قرار دهید نیاز است به شکل جداگانه‌ای از طریق پنل کاربری اینکار را برای هر کدام به انجام برسانید.\r\n \r\nشما می‌توانید فایل‌های `.htpasswd` را در مسیر `/etc/nginx/pachim-conf/.../server/.htpasswd-{ruleId}` سرور خود پیدا کنید.\r\n\r\n:::note{.warning}\r\n::title[نکته امنیتی]\r\n\r\nهیچ کدام از پسورد‌های که شما در بخش قوانین امنیتی وارد می‌کنید `به هیچ عنوان در پَچیم ذخیره سازی‌ نمی‌شوند`.\r\n\r\n:::\r\n\r\n## شخصی سازی \r\n\r\nبر اساس [**مستندات Nginx**](https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/#) شما می‌توانید موارد دیگری را نیز به فایل `.htpasswd` اضافه کنید، مانند اینکه چه IP اجازه درخواست دارد یا چه IP اجازه درخواست ندارد، در حال حاضر پَچیم این مورد را پشتیبانی نمی‌کند اما شما آزاد هستید که از طریق ترمینال و SSH به فایل `.htpasswd` مربوط به قانون مورد نظر خود مراجعه کنید و این موارد را به آن اضافه کنید.\r\n\r\nاگر این موضوع ضروریست و کار شما را راحت‌تر می‌کند به پشتیبانی ما پیام دهید در صورت اینکه تعداد درخواست کنندگان این ویژگی بالا رود این ویژگی به سایت اضافه می‌شود.\r\n","path":"/sites/security-rules"},{"meta":{"title":"اتصال دامنه به سایت"},"content":"\r\n# اتصال دامنه به سایت\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nزمانی که شما یک سایت را از طریق پنل پَچیم به سرورتان اضافه می‌کنید برای آنکه آن سایت از طریق دامنه مورد نظرتان از طریق مرورگرها قابل دسترس باشد نیاز است دامنه را به سرورتان متصل کنید که در این صفحه قصد داریم دقیقا اینکار را به شما توضیح دهیم.\r\n\r\n## سایت پیش فرض\r\n\r\nقبل از هر چیزی ابتدا باید بدانید، زمانی که سرور شما راه اندازی می‌شود سایتی با عنوان default بروی سرور شما به شکل پیش فرض ساخته می‌شود. اگر IP سرورتان را در مرورگر وارد کنید می‌بینید که ظاهری را به شما نمایش می‌دهد که آن دقیقا همین سایت default ساخته شده است. دلیل ایجاد سایت default بعد از راه اندازی سرور شما این است که ممکن است شما بعد از راه اندازی سرور دامنه‌ای آماده ای برای استفاده نداشته باشید و یا اصلا بخواهید راه اندازی سرور خود را چک کنید که آیا همه چیز به درستی راه اندازی شده یا خیر.\r\n\r\nدر اکثر مواقع شما نیاز به این ندارید که سایتی از طریق IP اصلی سرور در دسترس باشد برای همین ممکن است سایت پیش فرض را حذف یا وارد تنظیمات سایت شوید و دامنه‌ای مورد نظرتان را به جای عنوان default برای آن قرار دهید.\r\n\r\nاگر دامنه‌ای را خریداری کرده‌اید و تصمیم دارید آن را به سرور و سایت خود متصل کنید مستندات زیر را با دقت مطالعه کنید.\r\n\r\n## آشنایی با DNS \r\n\r\nبرای آنکه بتوانیم دامنه خود را سرور متصل کنیم در ابتدا باید کمی با مفهوم DNS آشنا شویم .\r\n\r\nDNS مانند یک دفترچه تلفن برای اینترنت است. همانطور که شما برای تماس با دیگران به جای بخاطر سپردن شماره‌ی آن‌ها، از دفترچه تلفن استفاده می‌کنید، DNS نیز مانند یک دفترچه تلفن عمل می‌کند و نیازی به حفظ کردن آدرس IP ها نیست. همانطور که می‌دانید، کامپیوترها برای اتصال به یکدیگر از اعداد یا همان IP آدرس‌ها استفاده می‌کنند.\r\n\r\nDNS مخفف Domain Name System فهرست توزیع شده‌ای است که نام دامنه قابل خواندن توسط انسان مانند www.site.com را به اعداد خوانا برای کامپیوترها یعنی IP آدرس تبدیل می‌کند. برعکس این نیز در مورد DNS صدق می‌کند، یعنی DNS سیستمی است که نام دامنه وب را سازماندهی می‌کند و آن‌ها را برای همه کسانی که می‌خواهند به شبکه وصل شوند، قابل‌فهم‌تر می‌کند.\r\n\r\n\r\n## آشنایی با CDN\r\n\r\nقبل از اینکه توضیح دهیم چطوری از CDN استفاده کنیم در ابتدا اجازه دهید توضیح دهیم که CDN و DNS یک چیز نیستند. CDN ها به شبکه‌های توزیع محتوا گفته می‌شوند که در داخل خود مدیریت کننده DNS را نیز ارائه می‌دهند، زمانی که دامنه خود را بر روی یک CDN قرار می‌دهید درخواست‌های که به دامنه‌های شما ارسال می‌شود با توجه به موقعیت مکانی درخواست کننده از طریق کش کردن اطلاعات سرور اصلی شما سریع‌تر به کاربر مورد نظر نمایش داده می‌شود.\r\n\r\nCDN ها جدا از ارائه کردن مدیریت کننده CDN امکانات بیشتری را در اختیارتان قرار میدهند، مانند جلوگیری از حملات DDOS, امنیت ابری و لو نرفتن IP های اصلی سرور و کلی موارد دیگر تا وبسایت سریع‌تر و امن‌تری داشته باشید که این روزها مورد استفاده خیلی از افراد قرار میگیرند، که معمولا اکثر این CDN ها امکان مدیریت DNS را به شکل **رایگان** در اختیار کاربرانشان قرار میدهند.\r\n\r\nمعرفی بضی از CDN های داخلی و خارجی :\r\n\r\n- cloudflare\r\n- dns made easy\r\n- ابردراک\r\n- آروان\r\n\r\nشما می‌توانی بر اساس نیاز خود از یکی از این گزینه‌ها استفاده کنید یا موارد دیگر را در گوگل سرچ کنید.\r\n\r\n## معرفی دامنه به DNS\r\n\r\nزمانی که دامنه خود را تهیه کردید، ابتدا در یکی از سرویس‌های CDN ثبت نام کنید و دامنه خود را در آنجا ثبت کنید زمانی که دامنه را ثبت کنید از شما درخواست ‌می‌کند مقادیری را در قسمت nameserver دامنه خود وارد کنید بعد از انجام اینکار بین ۲۴ تا ۷۲ ساعت زمان می‌برد که دامنه شما در سیستم ثبت شود. بعد از انجام این کار حالا نوبت به معرفی IP سرور به دامنه‌تان است.\r\n\r\n\r\n## اتصال دامنه به سرور\r\n\r\nحالا بعد از آن‌ که دامنه خود را به یک ارائه کننده DNS معرفی کردید باید وارد پنل مدیریت DNS آن شوید و یک رکورد از نوع A ایجاد کنید. نام این رکورد را عنوان دامنه خود قرار دهید و مقدار آن را IP سروری که با پَچیم راه اندازی کردید، قرار دهید. بعد از انجام اینکار با وارد کردن دامنه در مروگر وبسایتی که بر اساس دامنه بر روی سرور خود ایجاد کردید را می‌توانید مشاهده کنید.\r\n","path":"/sites/setup-site/connect-domain-to-site"},{"meta":{"title":"ایجاد سایت"},"content":"\r\n# ایجاد سایت\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nشما می‌توانید بعد از راه اندازی سرور خود وبسایت‌های مختلفی را به آن اضافه و مدیریت کنید. در این قسمت سعی داریم نکاتی که در مورد نحوه ایجاد وبسایت‌ در سرورهای مختلف وجود دارد را به شما منتقل کنیم.\r\n\r\n## ایجاد سایت برای [سرور اپلیکیشن](/servers/types#سرور-اپلیکیشن) و [سرور وب](/servers/types#سرور-وب)\r\n\r\nبعد از اتمام راه‌اندازی سرور اگر سرورتان از نوعی باشد که بتوان بر روی آن راه اندازی کرد، تنها کافیست وارد صفحه سایت‌ها در پنل سرور پَچیم شوید و بر روی دکمه **سایت جدید** کلیک کنید. بعد از کلیک بر روی این گزینه مدالی برایتان باز می‌شود.\r\n\r\n1. **نوع برنامه:** در ابتدا باید نوع برنامه خود را مشخص کنید (بر اساس نوع اپلیکیشن اطلاعاتی که در زیر از شما دریافت می‌شود، متفاوت خواهد بود)\r\n2. **پورت:** اگر نوع وب سایت شما دارای پورت باشد از شما درخواست می‌شود، پورتی که برنامه‌ای شما بر روی آن اجرا می‌شود را وارد کنید، به این شکل درخواست‌های اصلی از طریق پورت 80 به برنامه شما با هر پورتی که مشخص کردید منتقل می‌شوند.\r\n3. **آدرس دامنه:** آدرسی که سرور شما باید به آن پاسخگو باشد و زمانی که در مرورگر وارد می‌کنید باید به شما نمایش دهده شود.\r\n4. **دامنه‌های مستعار:** اگر می‌خواهید سایت شما به چند دامنه جوابگو باشد، دامنه‌های مورد نظر دیگر را در این قسمت وارد کنید.\r\n5. **دایرکتوری وب :** اگر دایرکتوری جواب دهنده سرور شما متفاوت است در قسمت دایرکتوری وب آن را قرار دهید در غیر این صورت کاری با این گزینه نداشته باشید. (**دایرکتوری وب به مسیری گفته می‌شود که اگر فایلی در آن قرار داشته باشد از طریق مرورگر و دامنه شما قابل دسترسی توسط عموم خواهد بود**)\r\n6. **قالب Nginx :** در برنامه سفارشی شما می‌توانید نوع پیکربندی nginx خود را در زمان ایجاد سایت تغییر دهید، اگر مایل به استفاده از این حالت هستید در ابتدا باید [**قالب nginx را در سرور**](/servers/nginx-templates) خود ایجاد کنید.\r\n7. **ورژن PHP:** شما می‌توانید ورژن php که قصد دارید بر روی سایت شما اجرا شود را انتخاب کنید.\r\n8. **اجازه برای زیر دامنه‌های Wildcard :** اگر وبسایت شما قرار است در کنار دامنه اصلی برای مثال site.com تمام زیر دامنه‌های این آدرس را نیز دریافت کند و نمایش دهد، می‌توانید این گزینه را فعال کنید.\r\n9. **وبسایت ایزوله :** کاربر ایزوله این امکان را به شما می‌دهد که وبسایت خود را در یک فضای ایزوله شده راه اندازی کنید تا از طریق فایل‌های سایت نشود به فایل‌های سایت‌های دیگر و دایرکتوری‌های دیگر دسترسی پیدا کرد.\r\n10. **انتخاب دیتابیس :** اگر نوع برنامه شما به شکلی باشد که از شما درخواست دیتابیس کند، در این قسمت می‌توانید نام دیتابیس مورد نظر خود را مشخص کنید. (اگر از قبل دیتابیسی اضافه نکردید ابتدا وارد بخش [دیتابیس سرور](/servers/databases) شوید و یک دیتابیس بسازید.)\r\n11. **انتخاب کاربر دیتابیس :** اگر نوع برنامه شما به شکلی باشد که از شما درخواست دیتابیس کند، شما باید کاربری که به آن دیتابیس متصل است را اینجا وارد کنید. (اگر کاربری را به دیتابیس مورد نظر خود متصل نکردید ابتدا وارد بخش [دیتابیس سرور](/servers/databases) شوید و یک کار به دیتابیس مورد نظر متصل کنید.)\r\n\r\n:::note{.tip}\r\n\r\nبر اساس نوع برنامه‌ای که انتخاب می‌کنید چه [`برنامه اصلی`](/sites/setup-site/project-types#برنامه-اصلی) و چه [`برنامه آماده`](/sites/setup-site/project-types#برنامههای-آماده) باشد گزینه‌های مختلف بر اساس نوع آن کم یا زیاد می‌شوند.\r\n\r\n:::\r\n\r\n\r\n## ایجاد سایت برای [سرور توزیع بار](/servers/types#سرور-توزیع-بار)\r\n\r\nاگر سرور شما از نوع [سرور توزیع بار](/servers/types#سرور-توزیع-بار) باشد، شما می‌توانید وبسایت‌های توزیع بار به سرورتان اضافه کنید این سایت‌ها وظیفه پاسخ مستقیم به سرور شما را ندارند، بلکه درخواست کاربران بازدید کننده را به سرورهای قابل توزیع منتقل می‌کند.\r\n\r\nشما می‌توانید بر روی یک سرور توزیع چندین سایت ایجاد کنید، که وظیفه توزیع بار را به عهده بگیرند. برای ایجاد سایت وارد پنل سرور در پَچیم و قسمت سایت‌ها شوید و بر روی دکمه **سایت جدید** کلیک کنید. در صفحه‌ای که برایتان باز می‌شود از شما درخواست اطلاعات زیر را می‌‌کند.\r\n\r\n- . **آدرس دامنه:** آدرسی که سرور شما باید به آن پاسخگو باشد و زمانی که در مرورگر وارد می‌کنید باید به شما نمایش دهده شود\r\n- **دامنه‌های مستعار:** اگر می‌خواهید سایت شما به چند دامنه جوابگو باشد، دامنه‌های مورد نظر دیگر را در این قسمت وارد کنید.\r\n- **اجازه برای زیر دامنه‌های Wildcard :** اگر وبسایت شما قرار است در کنار دامنه اصلی برای مثال site.com تمام زیر دامنه‌های این آدرس را نیز دریافت کند و نمایش دهد، می‌توانید این گزینه را فعال کنید.\r\n\r\n## ایجاد سایت برای [سرور کارگر](/servers/types#سرور-کارگر)\r\n\r\nدر [سرورهای کارگر](/servers/types#سرور-کارگر) ایجاد کردن سایت به این معنی نیست که سرور شما قرار است به درخواست‌‌های از طرف nginx پاسخ دهد، چون در این نوع سرورها هیچ درخواست nginx وجود ندارد، زمانی از سرور کارگر استفاده می‌کنیم که قصد دارید بخشی از پردازش سایت خود را جداسازی کنیم. برای مثال پیام‌های ربات تلگرام را در سرور خارج از ایران پردازش کنیم.\r\n\r\nبرای ایجاد سایت کارگر نیاز است وارد پنل سرور پَچیم و بخش سایت‌ها شوید و بر روی دکمه **ایجاد سایت** کلیک کنید.\r\n\r\n- **نوع برنامه:** در ابتدا باید نوع برنامه خود را مشخص کنید (برنامه‌های که در این لیست وجود دارند به گستردگی لیست برنامه‌های سرور اپلیکیشن و سرور وب نیستند و صرفا با انتخاب هر کدام از آن‌ها در پنل سایت ویژگی‌های مختلفی برای شما در دسترس قرار میگیرد.)\r\n- **آدرس دامنه:** این آدرس دامنه قرار نیست به درخواست‌های کاربران پاسخگو باشد و صرفا یک اسم دایرکتوری خواهد بود.\r\n- **ورژن PHP:** شما می‌توانید ورژن php که قصد دارید بر روی سایت شما اجرا شود را انتخاب کنید.\r\n","path":"/sites/setup-site/create-site"},{"meta":{"title":"انواع برنامه‌ها"},"content":"\r\n# انواع برنامه‌ها\r\n\r\n### جدول محتوا\r\n\r\n## انوع برنامه‌های پَچیم\r\n\r\nاگر سرورتان از نوع [سرور اپلیکیشن](/servers/types#سرور-اپلیکیشن) یا [سرور وب](/servers/types#سرور-وب) باشد، در ابتدا شما باید نوع برنامه‌تان را مشخص کنید، در حال حاضر در پَچیم برنامه‌ها به دو نوع برنامه‌های اصلی و فرعی تقسیم می‌شود.\r\n\r\n### برنامه اصلی\r\n\r\nبرنامه‌های اصلی جز برنامه‌های پایه محسوب می‌شوند که شما با استفاده از زبان پایه یا فریمورک خاصی باید اپلیکیشن خود را از طریق مخزن‌های گیت فراخوانی و راه اندازی کنید . در حال حاضر برنامه‌های اصلی که در پَچیم پشتیبانی می‌شوند به شرح زیر هستند.\r\n\r\n- PHP\r\n- Laravel\r\n- Laravel (octane)\r\n- Node.js (**امکان راه اندازی فریمورک‌های node نیز وجود دارد مانند express.js , sail.js, Next.js , Nuxt.js** )\r\n- Static Website (**مانند Html , React.js , Vue.js , Angular.js ,Svelte.js**)\r\n- سفارشی\r\n\r\n:::note{.tip}\r\n::title[حالت سفارشی برنامه اصلی]\r\n\r\nدر حالت سفارشی، این امکان را به شما می‌دهیم که نوع اپلیکیشن و حالت‌های مختلف آن را شخصی سازی کنید.\r\n\r\n- شما انتخاب می‌کنید که برنامه شما بر روی پورت متفاوتی لود می‌شود یا خیر.\r\n- شما مشخص می‌کنید قالب پیکربندی nginx که بر روی وبسایت شما راه اندازی شود، چه قالبی باشد.\r\n- دایرکتوری وب پروژه را می‌توانید مشخص ‌کنید.\r\n  :::\r\n\r\n:::note{.warning}\r\n::title[نکته مهم]\r\n\r\nبا توجه به نوع برنامه‌ای که انتخاب می‌کنید پیکربندی nginx و همچنین اسکریپت استقرار سایت شما تغییر می‌کند. البته هر دو این موارد را بعد از راه اندازی سایت می‌توانید از طریق پنل سایت به دلخواه خود تغییر دهید.\r\n:::\r\n\r\n### برنامه‌های آماده\r\n\r\nدر حال حاضر ما در پَچیم دو نوع برنامه آماده را برای راه اندازی سریع در اختیارتان قرار داده‌ایم که در آینده به درخواست شما سعی می‌کنیم به لیست این برنامه‌های آماده اضافه کنیم.\r\n\r\n- وردپرس\r\n- phpMyAdmin    \r\n\r\n\r\n#### سایت وردپرسی\r\n\r\nشما با استفاده از پَچیم با چند کلیک ساده می‌توانید یک وبسایت وردپرسی برای خود را اندازی کنید و به عنوان یک بلاگ یا فروشگاه از آن بهره ببرید.\r\n\r\nبرای آنکه یک [وبسایت وردپرسی](https://wordpress.org/) داشته باشید قبل از هر چیزی وارد بخش [مدیریت دیتابیس‌ها در سرور](/servers/databases) شوید و یک دیتابیس و کاربر دیتابیس متصل به آن ایجاد کنید. تا اطلاعات مربوط به برنامه وردپرسی شما در آن ذخیره سازی شود.\r\n\r\nزمانی که برنامه آماده وردپرسی را به عنوان یک سایت راه اندازی کردید می‌توانید با استفاده از آدرس دامنه خود و اجرای آن بر روی مرورگر ادامه پروسه نصب برنامه وردپرسی را انجام دهید.\r\n\r\nزمانی که پَچیم یک وبسایت وردپرسی را برای شما راه اندازی می‌کند در کنار آن [وردپرس CLI](https://wp-cli.org/) را هم برای شما نصب می‌کند تا شما بتوانید از طریق آن و دستورات کامندی که وجود دارد سایت وردپرسی خود را مدیریت کنید.\r\n\r\n\r\n:::note{.danger}\r\n::title[نکته امنیتی]\r\n\r\nزمانی که وبسایت وردپرسی شما راه اندازی شد به سرعت وارد دامنه‌ خود شوید و نصب و وردپرس را تکمیل کنید، توجه کنید که اگر شخص دیگری به دامنه شما دسترسی داشته باشد قبل از شما می‌تواند این نصب را به پایان برساند.\r\n\r\n:::\r\n\r\n#### سایت phpMyAdmin\r\n\r\nیکی دیگر از برنامه‌های آماده phpMyAdmin است، برای هر شخصی که با php و mysql کار کرده باشد نام phpMyAdmin بسیار آشناست و می‌داند برای مدیریت دیتابیس mysql/mariaDB با یک رابط گرافیکی مورد استفاده قرار میگیرد. با استفاده از پَچیم شما می‌توانید خیلی ساده با چند کلیک یک سایت با phpMyAdmin راه اندازی کنید.\r\n\r\nبرای راه‌اندازی phpMyAdmin به یک دیتابیس و نام کاربری دیتابیس نیاز دارید که می‌توانید از بخش [مدیریت دیتابیس‌های سرور](/servers/databases) ایجاد کنید یا اگر از قبل ساخته‌اید در بخش ایجاد سایت آن را انتخاب کنید، این اطلاعات برای ذخیره سازی در پیکربندی phpMyAdmin مورد استفاده قرار میگیرد.\r\n\r\nزمانی که سایت شما با phpMyAdmin را اندازی شود با استفاده از دامنه‌ای که به سایت مورد نظر خود اختصاص داده‌اید می‌توانید با استفاده از نام کاربری دیتابیس و پسورد آن وارد phpMyAdmin شوید و دیتابیس مورد نظر خود را ویرایش کنید.\r\n\r\nهر زمان که مایل باشید می‌توانید نام کاربر دیتابیس را به دیتابیس‌های دیگر هم متصل کنید.\r\n\r\n:::note{.tip}\r\n::title[اتصال به دیتابیس بدون phpMyAdmin]\r\n\r\nشما بدون نیاز به phpMyAdmin و با استفاده از نرم افزارهای همچون TablePlus می‌توانید به دیتابیس‌های خود متصل شوید و با آن‌ها کار کنید، این راه از امنیت بیشتری نیز برخوردار است. برای مطالعه بیشتر در مورد این موضوع به بخش [`اتصال به دیتابیس از طریق خارج از سرور`](/servers/databases#اتصال-به-دیتابیس-از-طریق-خارج-از-سرور) مراجعه کنید.\r\n\r\n:::\r\n","path":"/sites/setup-site/project-types"},{"meta":{"title":"راه‌اندازی پروژه"},"content":"\r\n# راه‌اندازی پروژه\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nبعد از [ایجاد سایت](/sites/setup-site/create-site) و [اتصال دامنه به سایت](/sites/setup-site/connect-domain-to-site)، اگر نوع سایت شما از نوع برنامه‌های اصلی باشد، این امکان براش شما وجود دارد که پروژه‌های خود را از مخزن گیت به وبسایتان منتقل کنید که در این صفحه این موضوع را به شما توضیح خواهیم داد. \r\n\r\n## راه اندازی پروژه شما\r\n\r\nحالا به نقطه‌‌ای رسیده‌ایم که سایت راه ‌اندازی شده و نوع برنامه سایت از نوع برنامه‌های آماده نیست، بنابراین ما باید بر روی سایت خود پروژمان را بارگذاری کنیم. برای بارگذاری پروژه به بخش اپلیکیشن در پنل سایت مراجعه کنید.\r\n\r\n:::note{.tip}\r\n::title[نکته مهم]\r\n\r\nبرای بارگذاری کردن پروژه خود بر روی سرور نیاز است قبل از هر چیزی اکانت خود در پَچیم را به تامین کننده‌های مخزن همانند گیت هاب و گیت لب متصل کنید، برای این کار میتوانید به بخش [`مدیریت مخزن‌ها`](/accounts/source-control) در حساب کاربری خود مراجعه کنید.\r\n\r\nالبته اگر مایل به انجام این کار نیستید می‌توانید از ویژگی [`ارائه کننده سفارشی`](/accounts/source-control#استفاده-از-ارائه-کننده-سفارشی) استفاده کنید.\r\n\r\n:::\r\n\r\nزمانی که وارد صفحه اپلیکیشن سایت مورد نظر شوید، گزینه مختلفی را مشاهده می‌کنید که اگر اکانت خود را به گیت هاب یا گیت لب متصل کرده‌ باشید می‌توانید مخزن git مورد نظر و شاخه (branch) پروژه را انتخاب کنید و کار نصب را انجام دهید.\r\n\r\nاما اگر از مخزن سفارشی برای پروژه خود استفاده می‌کنید، یا از ارائه کننده‌ای استفاده می‌کنید که پَچیم آن را پشتیبانی نمی‌کند یا اصلا نمی‌خواهید که دسترسی مخزن‌های گیت هاب و گیت لب خود را به پَچیم دهید، می‌توانید از ویژگی [ارائه کننده سفارشی](/accounts/source-control#استفاده-از-ارائه-کننده-سفارشی) استفاده کنید.\r\n\r\n:::note{.danger}\r\n::title[عدم بارگذاری کدهای شما در پَچیم]\r\n\r\nبه هیچ وجه کدهای پروژه شما در پَچیم بارگذاری نمی‌شود و تنها سرور شماست که فراخوانی و نصب کدهای پروژه شما را انجام می‌دهد.\r\n:::\r\n\r\n:::note{.warning}\r\n::title[اضافه کردن دسترسی SSH یا کلید Deploy]\r\n\r\nقبل از آنکه بر روی دکمه نصب و راه اندازی کلیک کنید باید به یک موضوع توجه کنید، که باید [`کلید SSH سرور`](/servers/ssh#کلید-ssh-سرور--دسترسی-git-پروژه) خود را بر روی ارائه کننده git خود همچون گیت‌هاب، گیت‌لب یا گیت سفارشی خود قرار دهید تا سرورتان بتواند به مخزن گیت پروژه شما دسترسی پیدا کند.\r\n\r\nیا اکر قصد ندارید سرور شما به تمام مخزن‌های گیت شما که در ارائه کننده گیت وجود دارد، دسترسی داشته باشد، می‌توانید از ویژگی [`کلید deploy`](/servers/ssh#کلید-deploy) استفاده کنید.\r\n:::\r\n","path":"/sites/setup-site/setup-application"},{"meta":{"title":"توضیحات تکمیلی راه اندازی سایت"},"content":"\r\n# توضیحات تکمیلی راه اندازی سایت\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nدر این صفحه بخشی از توضیحات و نکات تکمیلی که مورد راه اندازی کردن یک وبسایت نیاز است را برای شما توضیح داده‌ایم تا بتوانید به شکل کامل‌تری وبسایت خود را راه اندازی کنید. \r\n\r\n## پیکربندی nginx\r\n\r\nپیکربندی nginx بر اساس نوع برنامه شما در سایت متفاوت خواهد بود و خود پَچیم به شکل خودکار آن را در سیستم قرار می‌دهد اما گاهی اوقات نیاز داریم از پیکربندی شخصی سازی شده استفاده کنیم برای همین شما می‌توانید پیکربندی مورد نظر خود را در قسمت قالب nginx سرور ثبت کنید و در زمان ایجاد سایت، برنامه سفارشی را انتخاب کرده و قالب nginx مورد نظر خود را انتخاب کنید.\r\n\r\nقالب nginx زیر، یک قالب پیش فرض nginx است که می‌توانید بر اساس نیاز خود آن را تغییر دهید و در قسمت قالب‌های nginx ثبت کنید.\r\n\r\n```nginx\r\n# PACHIM CONFIG (DO NOT REMOVE!)\r\ninclude pachim-conf/{{ SITE }}/before/*;\r\n\r\nserver {\r\n    listen {{ PORT }};\r\n    listen {{ PORT_V6 }};\r\n    server_name {{ DOMAINS }};\r\n    server_tokens off;\r\n    root {{ PATH }};\r\n\r\n    # PACHIM SSL (DO NOT REMOVE!)\r\n    # ssl_certificate;\r\n    # ssl_certificate_key;\r\n\r\n    ssl_protocols TLSv1.2 TLSv1.3;\r\n    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;\r\n    ssl_prefer_server_ciphers off;\r\n    ssl_dhparam /etc/nginx/dhparams.pem;\r\n\r\n    add_header X-Frame-Options \"SAMEORIGIN\";\r\n    add_header X-XSS-Protection \"1; mode=block\";\r\n    add_header X-Content-Type-Options \"nosniff\";\r\n\r\n    index index.html index.htm index.php;\r\n\r\n    charset utf-8;\r\n\r\n    # PACHIM CONFIG (DO NOT REMOVE!)\r\n    include pachim-conf/{{ SITE }}/server/*;\r\n\r\n    location / {\r\n        try_files $uri $uri/ /index.php?$query_string;\r\n    }\r\n\r\n    location = /favicon.ico { access_log off; log_not_found off; }\r\n    location = /robots.txt  { access_log off; log_not_found off; }\r\n\r\n    access_log off;\r\n    error_log  /var/log/nginx/{{ SITE }}-error.log error;\r\n\r\n    error_page 404 /index.php;\r\n\r\n    location ~ \\.php$ {\r\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\r\n        fastcgi_pass {{ PROXY_PASS }};\r\n        fastcgi_index index.php;\r\n        include fastcgi_params;\r\n    }\r\n\r\n    location ~ /\\.(?!well-known).* {\r\n        deny all;\r\n    }\r\n}\r\n\r\n# PACHIM CONFIG (DO NOT REMOVE!)\r\ninclude pachim-conf/{{ SITE }}/after/*;\r\n```\r\nتوجه کنید مواردی که `(DO NOT REMOVE!)` برای آن ثبت شده است را به هیچ وجه حذف نکنید.\r\n\r\n## ورژن PHP\r\n\r\nاگر بر روی سرور خود چندین ورژن از PHP را راه اندازی کرده‌اید می‌توانید هر زمانی که نیاز داشتید وارد بخش تنظیمات سایت خود شوید و ورژن مورد نظر PHP را بر اساس نیاز خود تغییر دهید.\r\n\r\nاگر ورژن php سایت را تغییر دادید دقت کنید که اگر در کد استقرار سایت از ورژن خاصی از PHP استفاده کردید، نیاز است آن را بر اساس نیاز خود نیز تغییر دهید.\r\n","path":"/sites/setup-site/tips"},{"meta":{"title":"مدیریت SSL"},"content":"\r\n# مدیریت SSL\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nما در پَچیم از اهمیت استفاده از SSL برای سایت‌ها آگاه هستیم از این رو تمام سعی خود را کرده‌ایم تا به شکل کامل بحث SSL در پَچیم را پوشش دهیم، از ارائه **SSL رایگان** گرفته تا قرار دادن **SSL شخصی**.\r\n\r\n## گواهی SSL شخصی\r\n\r\nسایت‌های بسیار زیادی کار فروش SSL را انجام می‌دهند و هر کدام از SSL با هدف خاصی ممکن است تهیه شوند، برای مثال بعضی از افراد مایل هستند SSL های یکساله داشته باشند یا بعضی از کسب و کارها مایل هستند SSL دارای نشان تجاری خود را بر روی سایت داشته باشند در هر صورت شاید شما مایل باشید SSL شخصی خود را بر روی سایت خود راه اندازی کنید.\r\n\r\nبرای راه اندازی SSL شخصی تنها کافیست وارد پنل SSL سایت در پَچیم شوید و بر روی **اضافه کردن SSL** کلیک کنید و گزینه **SSL شخصی** را انتخاب کنید. زمانی که این کار را انجام دهید، از شما کلید خصوصی SSL و اعتبارنامه SSL را درخواست می‌کند با وارد کردن آن‌ها و زدن کلید ثبت در صورت اینکه این دو کلید با هم هماهنگ باشند، SSL مورد نظر شما به سایتتان اضافه می‌شود.\r\n\r\n:::note{.warning}\r\n\r\n::title[نکته مهم]\r\n\r\nلطفا توجه کنید که SSL های شخصی شما بر روی پَچیم ذخیره سازی نمی‌شوند و تنها بر روی سرور و سایت شما قرار میگیرند و فعال می‌شوند.\r\n\r\n:::\r\n\r\n## گواهی رایگان LetsEncrypt\r\n\r\n ما در پَچیم این قابلیت را برایتان فراهم کرده‌ایم تا بتوانید خیلی ساده و بدون صرف هیچ هزینه‌ای برای سایت خود SSL رایگان راه‌اندازی کنید، **مدت اعتبار این گواهینامه ۳ ماه است** و به شکل خودکار از طرف پَچیم به روز می‌شود و شما نیاز ندارید کاری را انجام دهید.\r\n \r\nبرای راه اندازی SSL رایگان، وارد **پنل SSL سایت در پَچیم** شوید و بر روی **اضافه کردن SSL** کلیک کنید در مرحله بعد **SSL رایگان** را انتخاب کنید، اگر دامنه پیشنهادی شما متفاوت است آن را وارد کنید در غیر اینصورت بدون تغییر چیزی بر روی ثبت کلیک کنید.\r\n\r\nدر نهایت اگر آدرس دامنه وارد شده با وبسایت شما یکی باشد و سایتان هم از طریق وب در دسترس باشد SSL مذکور به سایت شما اضافه می‌شود و اگر از قبل SSL فعالی نداشته باشید، آن SSL به شکل خودکار برایتان فعال می‌شود.\r\n\r\n\r\n### به روز شدن گواهی رایگان قبل از اتمام اعتبار\r\n\r\nزمانی که مدت اعتبار SSL رایگان شما کمتر از ۲۰ روز شود، پروسه نو سازی SSL بر روی سرورتان انجام می‌شود و شما نیاز ندارید که کار خاصی برای این موضوع انجام دهید، در پروسه نو سازی اگر سرور شما به اروری برخورد کند، پَچیم این مشکل را از طریق ایمیل به شما اطلاع رسانی خواهد کرد.\r\n\r\nدر صورت دریافت ایمیل ارور، تنها کاری که نیاز است انجام دهید، این است که از طریق پنل پَچیم یک SSL رایگان دیگر درخواست کرده و آن را نصب کنید و بر روی دکمه فعال سازی SSL رایگان جدید کلیک کنید، بعد از فعال سازی SSL رایگان جدید می‌توانید SSL قبلی را از سایت حذف کنید.\r\n\r\n## گواهی SSL Wildcard\r\n\r\nآدرس wildcard به معنی `*.site.com`، یعنی بتوانید در یک سایت تمام زیردامنه‌های سایت خود را در سایت فعلی دریافت کنید. در حال حاضر پَچیم این موضوع را برای SSL رایگان پشتیبانی نمی‌کند و اگر مایل به داشتن SSL برای دامنه wildcard هستید می‌توانید از طریق خرید SSL شخصی برای دامنه‌های wildcard آن را در پَچیم و سایت خود فعال کنید.\r\n\r\n## کپی کردن SSL\r\n\r\nپَچیم این امکان را به شما می‌دهد که یک SSL را از سرور دیگر کپی کنید، فرقی ندارد که SSL مورد نظر از نوع رایگان باشد یا SSL شخصی در هر دو حالت به سادگی در سرور و سایت فعلی شما کپی خواهد شد این موضوع در پیاده سازی کردن SSL سرور توزیع بار بسیار کاربردی خواهد بود.\r\n\r\n:::note{.tip}\r\n\r\n::title[یک ویژگی ویژه]\r\n\r\nاگر SSL که کپی می‌کنید از نوع SSL رایگان باشد، در صورت اینکه در سایتی که از آن کپی می‌کنید، آن SSL بروزرسانی شود، SSL فعلی سایت شما هم جایگزین مقدار کپی شده قبلی خواهد شد.\r\n\r\n:::\r\n","path":"/sites/ssl"},{"meta":{"title":"ایزوله سازی سایت"},"content":"\r\n# ایزوله سازی سایت\r\n\r\n### جدول محتوا\r\n\r\n## بررسی اجمالی\r\n\r\nبه شکل پیشفرض، زمانی که یک سرور برای شما راه اندازی می‌شود کاربری با عنوان `pachim` به سیستم عامل شما اضافه خواهد شد که کار مدیریت پردازش‌های مختلفی از سرپرست سرور تا کارهای زمانبندی شده، PHP-FPM و ... را برای سرورتان انجام می‌دهد.\r\n\r\nبا استفاده از ویژگی کاربر ایزوله، پَچیم به شما اجازه می‌دهد تا برای هر سایتی یک کاربر ایزوله ایجاد کنید، این به شما کمک می‌کند که از دسترسی هر سایت به فایل‌های سایت‌های دیگر جلوگیری کنید و پروژه‌های خود را امن تر کنید. \r\n\r\nاین موضوع بخصوص زمانی بسیار مهم است که شما یک **وبسایت وردپرسی** ایجاد می‌کنید و پلاگین‌های مختلفی را بر روی سایتتان بالا می‌آورید اگر قصد دارید سایت امن‌تری داشته باشید حتما آن سایت را با کاربر ایزوله بوجود بی‌آورید. \r\n\r\n\r\n:::note{.tip}\r\n::title[دسترسی کاربر pachim]\r\n\r\nما کاربر pachim را در ابتدای راه اندازی سرور شما به عنوان کار \"super user\" را اندازی می‌کنیم. از این رو این کاربر قابلیت خواندن همه فایل‌های کاربران ایزوله دیگر را داراست.\r\n\r\n:::\r\n\r\n## دسترسی sudo\r\n\r\nبه شکل معمول شما نیازی به دسترسی sudo برای وبسایت خود ندارید، اما اگر زمانی نیاز به این دسترسی بود با استفاده از کاربر `pachim` وارد ترمینال شوید و دستور مورد نظر را با sudo بر روی سرور یا سایت خود اجرا کنید.  \r\n\r\n## دسترسی با SFTP\r\n\r\nبعضی مواقع شاید شما نیاز داشته باشید با نرم افزارهای همانند [**Filezilla**](https://filezilla-project.org/) به سرور متصل شوید و فایل‌های را دانلود یا از سیستم خود به سرور منتقل کنید، برای انجام اینکار باید از روش SFTP استفاده کنید.\r\n\r\nبرای استفاده از SFTP هم قطعا نیاز است کلید SSH سیستم خود را بر روی سرورتان قرار دهید که از بخش [کلید‌های SSH سرور](/servers/ssh) می‌توانید اینکار را به انجام برسانید.\r\n","path":"/sites/user-isolation"}]